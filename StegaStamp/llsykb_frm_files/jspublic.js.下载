/*****************************************************************
    jspublic.js
    2007-10-06
    封装了项目中所用到的js公共方法
    修改日志：
    	2008-04-07：解决验证类型中的死循环bug
    	2008-04-08：增加email的验证方法
    	
*****************************************************************/

/**
检测字符的长度
obj 指针参数
msg 弹出错误标题
len [文本域的长度]可选项

返回值: true 或者 false
**/
function checkStringLen(obj,msg,len){

	var str=obj.value;
    var len2=0;
    for (var i=0; i<str.length; i++) {   
        if (str.charCodeAt(i)>127 || str.charCodeAt(i)==94) {   
            len2 += 2;   
        } else {   
            len2 ++;   
        }   
        }
   if(len2>len)
   {
    alert(msg+"长度过长，请重新输入");
    obj.value="";
    obj.focus();
    
   return false;
   
   }
   else
   {
   return true;
   }
}

/*
 new身份证验证
 zjh 需要验证的身份证号码
 to by zhangbo
*/ 
function sfzYz(zjh){   
	validId(zjh); 
} 
var powers=new Array("7","9","10","5","8","4","2","1","6","3","7","9","10","5","8","4","2");      
var parityBit=new Array("1","0","X","9","8","7","6","5","4","3","2");      
         
//校验身份证号码的主调用      
function validId(obj){      
    var _id=obj.value;      
    if(_id==""){
    	return;
    }
    
    var _valid=false;      
    if(_id.length==15){      
        _valid=validId15(_id);      
    }else if(_id.length==18){   
        _valid=validId18(_id);      
    }
    
    if(!_valid){      
        alert("身份证号码有误,请检查!");      
        obj.focus();   
        return;      
    }        
}       
   
//校验18位的身份证号码      
function validId18(_id){      
    _id=_id+"";      
    var _num=_id.substr(0,17);      
    var _parityBit=_id.substr(17);      
    var _power=0;      
    for(var i=0;i<17;i++){      
        //校验每一位的合法性      
        if(_num.charAt(i)<'0'||_num.charAt(i)>'9'){      
            return false;      
            break;      
        }else{      
            //加权      
            _power+=parseInt(_num.charAt(i))*parseInt(powers[i]);       
        }      
    }      
    //取模      
    var mod=parseInt(_power)%11;      
    if(parityBit[mod]==_parityBit){      
        return true;      
    }      
    return false;      
}     
 
//校验15位的身份证号码       
function validId15(_id){      
    _id=_id+"";      
    for(var i=0;i<_id.length;i++){      
        //校验每一位的合法性      
        if(_id.charAt(i)<'0'||_id.charAt(i)>'9'){      
            return false;      
            break;      
        }      
    }      
    var year=_id.substr(6,2);      
    var month=_id.substr(8,2);      
    var day=_id.substr(10,2);      
    var sexBit=_id.substr(14);      
    //校验年份位      
 
    if(year<'01'||year >'90')return false;      
    //校验月份      
 
    if(month<'01'||month >'12')return false;      
    //校验日      
 
    if(day<'01'||day >'31')return false;      
      
    return true;      
} 

/** ***********对页面提交和button提交，控制字符中含有单引号*****************/

var inputtext;
var numcs ;
function wantToDoSth() {  
     if (window.document.body) {
     	if(numcs != null || numcs!='undefined'){
     		clearTimeout(numcs); 
     	}
     	inputtext = new Array();
         var evl= document.getElementsByTagName('input');
          for(var i=0;i<evl.length;i++)
          {
            if(evl[i].type=='submit'||evl[i].type=='button')
           {
				evl[i].attachEvent('onclick',  cc);
			}
			else if(evl[i].type=='text')
			inputtext.push(evl[i]);
		}
		 
		 var evl2= document.getElementsByTagName('textarea');
		      for(i=0;i<evl2.length;i++)
		      {
		         inputtext.push(evl2[i]);
		      }

     } else if(numcs == null || numcs=='undefined' || numcs==''){
        numcs=  setTimeout(wantToDoSth, 1000);
     }  
 }  
    
 //wantToDoSth(); 更新为服务端防注入 
function cc()
{
  //alert(inputtext);
  	for(i=0;i<inputtext.length;i++)
	{
  	//alert(inputtext[i].value);
 	 	var inputvalue = inputtext[i] ;
 		if(inputvalue.value.indexOf("'")>-1){
 		var array = new Array();
 		array = inputvalue.value.split("'");
 		var return_input = "";
 		//alert(array.length);
 		for(j=0;j<array.length;j++){
 			if(j < array.length -1 )
 			return_input += array[j]+"''";
 				else
 			return_input += array[j];
 		}
 		inputtext[i].value = return_input;
 		}
	}
}

/**********************************/
// 检查日期先后顺序,增加BY ZhangBo
// 判断年份格式01 yyyy
// 参数:ksnd(开始年度),jsnd(结束年度),ksndMes(开始年度),jsndMess(结束年度)
function dateKsndVs(ksnd,jsnd,ksndMes,jsndMess){ 
   var ksxn = ksnd.value;
   var jsxn = jsnd.value;
   var ksmes = ksndMes;
   var jsmes = jsndMess; 
   if(ksxn > jsxn ){ 
    alert("系统提示："+jsndMess+"不能小于"+ksmes+",请重新输入！");
    jsnd.value ='';
    return false;
   } 
}
// 判断年份格式02 yyyyMMdd
// 参数:zzsj(终止时间),qsdj(起始时间),zzMes(终止时间),qsMes(起始时间)
function dateZzsjVsQssj(zzsj,qsdj,qsMes,zzMes){   
	var zzms =zzMes;
	var qsms = qsMes; 
	 if(!CheckDate(zzsj)){
	 if(qsdj.value.length>0){
	  	var begindat=qsdj.value.split('-');
	 	var endat=zzsj.value.split('-');  
	  	var dat1=begindat[0]+begindat[1]+begindat[2];
	   	var dat2=endat[0]+endat[1]+endat[2];  
	    if(dat1> dat2){
	        alert(""+zzMes+"不能小于"+qsMes+",请重新输入！");
	         
	        zzsj.focus();
	        return false;
	    }
	  }
	}
	return true;
}
//判断起始时间和结速时间
function compdate(sid,eid){
var s=document.getElementById(sid).value;
var e=document.getElementById(eid).value;

if(s=="" || e==""){
	return true;
	}
	s=s.replace(/-/g,"/");
	e=e.replace(/-/g,"/");
	//alert(Date.parse(e)-Date.parse(s));
	if(Date.parse(s)-Date.parse(e)>0){   
    alert("起始日期要在结束日期之前!"); 
    //document.getElementById(sid).focus();
    return false;   
    }  
	return true;
}




 //增加事件2010-09-18(解决选课处理调用时的JS问题)
function newJsMAdd(htmlurl,tmpWidth,tmpHeight){
	var newwin = window.showModalDialog(htmlurl,window,"dialogWidth:"+tmpWidth+"px;status:no;dialogHeight:"+tmpHeight+"px");
	if (newwin == null){
		creating.style.visibility='visible';
		//window.Form1.PlAction.value="";
		window.Form1.submit();
		//document.getElementById('alldiv').disabled = true;
	}
	else if (newwin == "ok"){
		if (confirm("是否再次增加记录？")){
			JsMAdd(htmlurl,tmpWidth,tmpHeight);
		}
		else{
			creating.style.visibility='visible';
			///window.Form1.PlAction.value="";
			window.Form1.submit();
			///document.getElementById('alldiv').disabled = true;
		}
	}else{
		window.Form1.submit();
	}
}
  
//加入js文件,修改BY chenwen
function getRootPath(){
	var strFullPath=window.document.location.href;
	var strPath=window.document.location.pathname;
	var pos=strFullPath.indexOf(strPath);
	var prePath=strFullPath.substring(0,pos);
	var postPath=strPath.substring(0,strPath.substr(1).indexOf('/')+1);
	return(prePath+postPath);
}
//检测Textarea大小
//v1对象字段名称
//弹出语句
//Textarea值的最大长度
function checkTextarea(v1,v2,v3){
var hjyy = v1.value; 
if(hjyy.length > v3){
v1.value = "";
v1.focus();
alert(v2);
return false;
}
}
function addJS(filePath)
{
	if(filePath) {
		var js = document.createElement('script');
		js.type = 'text/javascript';
		js.src =  getRootPath() + filePath;
		document.getElementsByTagName("head")[0].appendChild(js);
	}
}
//addJS('/dwr/engine.js');
//addJS('/dwr/util.js');
//addJS('/dwr/interface/dwrMonitor.js');
//addJS('/js/validate.js');

var checkonly_msg = "";
var checkonly_submitId = "submit_add";
var checkonly_spanId = "checkmessage_";
var checkonly_oldvalue = [];
var checkonly_field = "";

/*
 *useIsdel 是否启用 isdel，传值true或者其他值，当为true时，系统会自动增加isdel=0的条件。
 */
function checkIsOnly(tableName,fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		 
		dwrMonitor.checkIsOnly(tableName,fieldName,value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}


function checkIsOnlyAll(tableName,mapdata,msg,submitId,spanId) {
	DWREngine.setAsync(false);
	checkonly_spanId = spanId;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined)
		checkonly_spanId = spanId;

	dwrMonitor.checkIsOnlyAll(tableName,mapdata,checkOnlyResult);
}

/**
* 核查输入的值在数据库中是否存在
*/
function checkOnlyResult(result) {
	if(result == "N" || result == "true") {
		document.getElementById(checkonly_spanId).innerHTML = "<font color='red' size='2'>此"+checkonly_msg+"已经被使用！</font>";
		if(document.getElementById(checkonly_submitId)!=null){
			document.getElementById(checkonly_submitId).disabled = true;
		}
		alert("此"+checkonly_msg+"已经被使用！");	
	}else{
		document.getElementById(checkonly_spanId).innerHTML = "";
		var msg_temp = checkonly_spanId.replace("checkmessage_","");
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		}
		if(isCanSubmit)
			document.getElementById(checkonly_submitId).disabled = false;
	}
	checkonly_spanId = "checkmessage_";
}

//格式化日期方式
Date.prototype.format = function(format){
    var o =
    {
        "M+" : this.getMonth()+1, //month
        "d+" : this.getDate(),    //day
        "h+" : this.getHours(),   //hour
        "m+" : this.getMinutes(), //minute
        "s+" : this.getSeconds(), //second
        "q+" : Math.floor((this.getMonth()+3)/3),  //quarter
        "S" : this.getMilliseconds() //millisecond
    }
    if(/(y+)/.test(format))
    format=format.replace(RegExp.$1,(this.getFullYear()+"").substr(4 - RegExp.$1.length));
    for(var k in o)
    if(new RegExp("("+ k +")").test(format))
    format = format.replace(RegExp.$1,RegExp.$1.length==1 ? o[k] : ("00"+ o[k]).substr((""+ o[k]).length));
    return format;
}


/////////////////////////////////////////////////////处理页面标签中的查询部分脚本
function ListSearch(SearchNum) {
	var tmpstr = " and (";
	for (i = 1; i <= SearchNum; i++) {
		if (document.all("SValue" + i).value != "") {
			tmpstr = tmpstr + document.all("Field" + i).value + " " + document.all("HH" + i).value;
			if (document.all("HH" + i).value == "like" || document.all("HH" + i).value == "not like") {
				tmpstr = tmpstr + " ^%" + sqlReplace(document.all("SValue" + i).value) + "%^ ";
			} else {
				tmpstr = tmpstr + " ^" + sqlReplace(document.all("SValue" + i).value) + "^ ";
			}
			
			if (i < SearchNum) {
				for (j = i + 1; j <= SearchNum; j++) {
					if (document.all("SValue" + j).value != "") {
						tmpstr = tmpstr + " " + document.all("AndOr" + i).value + " ";
						break;
					}
				}
			}
		}
	}
	if (tmpstr != " and (") {
		window.Form1.where2.value =" 1=1 " + tmpstr + ")";
		
	} else {
		window.Form1.where2.value = " 1 = 1";
	}
	window.Form1.submit();
}
//过滤非法字符
function sqlReplace(str){
	//var val = str.replace(/'/g,"''");
	var val = str;
	return val;
}
function ListSearchs(SearchNum,sqlwhere) {
	var tmpstr = " and ";
	if(SearchNum == 1){
	SearchNum++;
	}
	for (i = 1; i <= SearchNum; i++) {
		if (document.all("SValue" + i).value != "") {
			tmpstr = tmpstr + document.all("Field" + i).value + " " + document.all("HH" + i).value;
			if (document.all("HH" + i).value == "like" || document.all("HH" + i).value == "not like") {
				tmpstr = tmpstr + " ^%" + sqlReplace(document.all("SValue" + i).value) + "%^ ";
			} else {
				tmpstr = tmpstr + " ^" + sqlReplace(document.all("SValue" + i).value) + "^ ";
			}
			if (i < SearchNum) {
				for (j = i + 1; j <= SearchNum; j++) {
					if (document.all("SValue" + j).value != "") {
						tmpstr = tmpstr + " " + document.all("AndOr" + i).value + " ";
						break;
					}
				}
			}
		}
	}
	if (tmpstr != " and ") {
		window.Form1.where1.value = " 1=1 " + tmpstr + sqlwhere;
	} else {
		window.Form1.where1.value = " 1 = 1 " + sqlwhere;
	}
	window.Form1.submit();
}
/////////////////////////////////////////////////////锁定表头脚本
function DrawTable(scrTable, newTable, iStart, iEnd, jEnd) {
	var i, j, k = 0, newTR, newTD, intWidth = 0, intHeight = 0;
	newTable.mergeAttributes(scrTable);
	for (i = iStart; i < iEnd; i++) {
		newTR = newTable.insertRow(k);
		newTR.mergeAttributes(scrTable.rows[i]);
		intHeight += scrTable.rows[i].offsetHeight;
		intWidth = 0;
		for (j = 0; j < (jEnd == -1 ? scrTable.rows[i].cells.length : jEnd); j++) {
			newTD = scrTable.rows[i].cells[j].cloneNode(true);
			intWidth += scrTable.rows[i].cells[j].offsetWidth;
			newTR.insertBefore(newTD);
			newTD.style.pixelWidth = scrTable.rows[i].cells[j].offsetWidth;
		}
		k++;
	}
	newTable.style.pixelWidth = intWidth;
	newTable.style.pixelHeight = intHeight;
}

function LockTable(arTable, ColNum, RowHead, RowFoot) {
	arTable.HeadRow = RowHead;
	var objDivMaster = arTable.parentElement;
	if (objDivMaster.tagName != "DIV") {
		return;
	}
	if ((arTable.offsetHeight > objDivMaster.offsetHeight) && (arTable.offsetWidth > objDivMaster.offsetWidth)) {
		if ((ColNum > 0) && (RowHead > 0)) {
			var objTableLH = document.createElement("TABLE");
			var newTBody = document.createElement("TBODY");
			objTableLH.insertBefore(newTBody);
			objTableLH.id = "objTableLH";
			objDivMaster.parentElement.insertBefore(objTableLH);
			DrawTable(arTable, objTableLH, 0, RowHead, ColNum);
			objTableLH.srcTable = arTable;
			with (objTableLH.style) {
				zIndex = 804;
				position = "absolute";
				pixelLeft = objDivMaster.offsetLeft;
				pixelTop = objDivMaster.offsetTop;
			}
		}
		if ((ColNum > 0) && (RowFoot > 0)) {
			var objTableLF = document.createElement("TABLE");
			var newTBody = document.createElement("TBODY");
			objTableLF.insertBefore(newTBody);
			objTableLF.id = "objTableLF";
			objDivMaster.parentElement.insertBefore(objTableLF);
			DrawTable(arTable, objTableLF, arTable.rows.length - RowFoot, arTable.rows.length, ColNum);
			objTableLF.srcTable = arTable;
			with (objTableLF.style) {
				zIndex = 803;
				position = "absolute";
				pixelLeft = objDivMaster.offsetLeft;
				pixelTop = objDivMaster.offsetTop + objDivMaster.offsetHeight - objTableLF.offsetHeight - 16;
			}
		}
	}
	if ((RowHead > 0) && (arTable.offsetHeight > objDivMaster.offsetHeight)) {
		var DivHead = document.createElement("DIV");
		objDivMaster.parentElement.insertBefore(DivHead);
		var objTableHead = document.createElement("TABLE");
		var newTBody = document.createElement("TBODY");
		objTableHead.id = "HeadTar";
		objTableHead.style.position = "relative";
		objTableHead.insertBefore(newTBody);
		DivHead.insertBefore(objTableHead);
		DrawTable(arTable, objTableHead, 0, RowHead, -1);
		HeadTar.srcTable = arTable;
		with (DivHead.style) {
			overflow = "hidden";
			zIndex = 802;
			pixelWidth = objDivMaster.offsetWidth - 16;
			position = "absolute";
			pixelLeft = objDivMaster.offsetLeft;
			pixelTop = objDivMaster.offsetTop;
		}
		objDivMaster.attachEvent("onscroll", divScroll1);
	}
	if ((RowFoot > 0) && (arTable.offsetHeight > objDivMaster.offsetHeight)) {
		var DivFoot = document.createElement("DIV");
		objDivMaster.parentElement.insertBefore(DivFoot);
		var objTableFoot = document.createElement("TABLE");
		var newTBody = document.createElement("TBODY");
		objTableFoot.insertBefore(newTBody);
		objTableFoot.id = "FootTar";
		objTableFoot.style.position = "relative";
		DivFoot.insertBefore(objTableFoot);
		DrawTable(arTable, objTableFoot, arTable.rows.length - RowFoot, arTable.rows.length, -1);
		objTableFoot.srcTable = arTable;
		with (DivFoot.style) {
			overflow = "hidden";
			zIndex = 801;
			pixelWidth = objDivMaster.offsetWidth - 16;
			position = "absolute";
			pixelLeft = objDivMaster.offsetLeft;
			pixelTop = objDivMaster.offsetTop + objDivMaster.offsetHeight - DivFoot.offsetHeight - 16;
		}
		objDivMaster.attachEvent("onscroll", divScroll2);
	}
	if ((ColNum > 0) && (arTable.offsetWidth > objDivMaster.offsetWidth)) {
		var DivLeft = document.createElement("DIV");
		objDivMaster.parentElement.insertBefore(DivLeft);
		var objTableLeft = document.createElement("TABLE");
		var newTBody = document.createElement("TBODY");
		objTableLeft.insertBefore(newTBody);
		objTableLeft.id = "LeftTar";
		objTableLeft.style.position = "relative";
		DivLeft.insertBefore(objTableLeft);
		DrawTable(arTable, objTableLeft, 0, arTable.rows.length, ColNum);
		LeftTar.srcTable = arTable;
		with (DivLeft.style) {
			overflow = "hidden";
			zIndex = 800;
			pixelWidth = objDivMaster.offsetWidth - 16;
			pixelHeight = objDivMaster.offsetHeight - 16;
			position = "absolute";
			pixelLeft = objDivMaster.offsetLeft;
			pixelTop = objDivMaster.offsetTop;
		}
		objDivMaster.attachEvent("onscroll", divScroll3);
	}
}
function divScroll1() {
	var tbl = document.all("HeadTar").srcTable, parDiv = tbl.parentElement;
	while (parDiv.tagName != "DIV") {
		parDiv = parDiv.parentElement;
	}
	window.status = -parDiv.scrollLeft;
	document.all("HeadTar").style.pixelLeft = -parDiv.scrollLeft;
}
function divScroll2() {
	var tbl = document.all("FootTar").srcTable, parDiv = tbl.parentElement;
	while (parDiv.tagName != "DIV") {
		parDiv = parDiv.parentElement;
	}
	window.status = -parDiv.scrollLeft;
	document.all("FootTar").style.pixelLeft = -parDiv.scrollLeft;
}
function divScroll3() {
	var tbl = document.all("LeftTar").srcTable, parDiv = tbl.parentElement;
	while (parDiv.tagName != "DIV") {
		parDiv = parDiv.parentElement;
	}
	window.status = -parDiv.scrollLeft;
	document.all("LeftTar").style.pixelTop = -parDiv.scrollTop;
}
/////////////////////////////////////////////////////锁定表头脚本结束

/////////////////////////////////////////////////////拖动列宽脚本
function MouseDownToResize(obj) {
	obj.mouseDownX = event.clientX;
	obj.pareneTdW = obj.parentElement.offsetWidth;
	obj.pareneTableW = mxh.offsetWidth;
	obj.setCapture();
}
function MouseMoveToResize(obj, clo) {
	if (!obj.mouseDownX) {
		return false;
	}
	var newWidth = obj.pareneTdW * 1 + event.clientX * 1 - obj.mouseDownX;
	if (newWidth > 0) {
		obj.parentElement.style.width = newWidth;
	  if (document.getElementById("mxh").rows[0] != undefined)
        {
            for (i = 0; i < document.getElementById("mxh").rows.length; i++){
            	try{
            		document.getElementById("mxh").rows[i].cells[clo].style.width = newWidth;
            	}catch(e){
            	}
            }               
        }
		document.getElementById("tblHeadDiv").style.pixelLeft = -document.getElementById("mxhDiv").scrollLeft;
	}
}
function MouseUpToResize(obj) {
	obj.releaseCapture();
	obj.mouseDownX = 0;
}
/////////////////////////////////////////////////////拖动列宽脚本结束
function formSubmit(page) {
	document.forms[0].submit();
}
function gb_bgcolor(e, iRowID) {
	ioldSelectRow = document.getElementById("oldSelectRow").value;
	if (ioldSelectRow != "") {
		document.getElementById(ioldSelectRow).bgColor = "";
	}
	e.bgColor = "#cccccc";
	document.getElementById("oldSelectRow").value = iRowID;
}
//新的选择列表行的事件
//新的选择列表行的事件
function gb_bgcolor2(e, iRowID) {
	ioldSelectRow = document.getElementById("oldSelectRow").value;
	
	if (ioldSelectRow != "") {
	    try{
			document.getElementById(ioldSelectRow).style.backgroundColor = "";
		}
		catch(eii){}
	}
	e.style.backgroundColor = "#C4DEFD";
	document.getElementById("oldSelectRow").value = iRowID;
}

function doWhereKey(e) {
	document.getElementById("key_where").value = document.getElementById("key_where_" + e.id).value;
	alert("key_where:" + document.getElementById("key_where").value);
}

function doAWhereKey(e) {
	document.getElementById("key_where").value = document.getElementById("key_where_" + e.id.toString().substr(1)).value;
	alert("key_where:" + document.getElementById("key_where").value);
}

/////////////////////////////////////////////////////全选脚本，在通用列表标记库中使用
function SelectAll() {
	if (document.all.C_Select == null)
		return;
	if (document.all.C_Select.length == null) {
	if(!document.all.C_Select.disabled && !document.all.C_Select.parentElement.disabled)
		document.all.C_Select.checked = document.all.C_SelectALL.checked;
	} else {
		for (i = 0; i < document.all.C_Select.length; i++) {
			if(!document.all.C_Select[i].disabled && !document.all.C_Select[i].parentElement.disabled)
				document.all.C_Select[i].checked = document.all.C_SelectALL.checked;
		}
	}
}

/////////////////////////////////////////////////////选择批量操作的内容
function ChangeSzValue() {
   if (document.all.ZdSzNr.value == ''){
      document.all.ZdSzValue.readOnly = true;
      document.all.cmdselect.style.visibility = "hidden";
   }
   else{
    		//代码:类型:下拉选择SQL
    var dmbz = document.all.ZdSzNr.value.split(":");
    		//字典的设置值
	document.all.ZdSzValue.value = "";
	//字典代码
	document.all.ZdSzCode.value = dmbz[0];
		//字典的显示内容
	document.all.ZdSzCodeValue.value = "";
		// 如果有字典内容显示字典内容
	if (dmbz.length > 2){
      document.all.ZdSzValue.readOnly = true;
      document.all.cmdselect.style.visibility = "visible";
		}else {// 不是字典			
	  document.all.ZdSzValue.readOnly = false;
      document.all.cmdselect.style.visibility = "hidden";
	}
  }
  document.getElementById('ZdSzCodeValue').value = "";
  document.getElementById('ZdSzValue').value = "";
  document.getElementById('ZDSXkeydm').value = "";
  document.getElementById("hiddenframe").style.display = "none";
}
/*
//批量设置事件
function ZdSz() {
	if (document.all.ZdSzNr.value == "") {
		alert("请先指定要设置的内容!");
		document.all.ZdSzNr.focus();
		return false;
	}
	if (document.all.ZdSzValue.value == "") {
		alert("请先指定要设置的值!");
		document.all.ZdSzValue.focus();
		return false;
	}
	if (!CheckCanDelete("设置<" + document.all.ZdSzNr.options[document.all.ZdSzNr.selectedIndex].text+">")) {
		return false;
	}
	document.all.ZdSzValueTemp.value = document.all.ZdSzValue.value;
	document.all.PlAction.value = "set";
	ZdZcing.style.visibility = "visible";
	document.Form1.submit();
	ZdZcing.style.visibility = "hidden";
}*/
//批量设置事件
function ZdSz() {
	
	if (document.getElementById("ZdSzNr").value == "") {
		alert("请先指定要设置的内容!");
		document.all.ZdSzNr.focus();
		return false;
	}
	
	if (document.getElementById("ZdSzValue").value == "") {
		alert("请先指定要设置的内容!");
		document.all.ZdSzValue.focus();
		return false;
	} 

	var c_select=document.getElementsByName("C_Select");
	var val="",isSelect=false;	

	//判断是否选定记录
	for(var i=0;i<c_select.length;i++) {
		if(c_select[i].checked==true){// No selected 属性
			val+="'"+c_select[i].value+"',";
			isSelect=true;
		}
	}
	if(!isSelect) {
		alert('指定设置无效，没有选择记录！');
		return false;
	}else {
		var patrn=/^0+\.*[0-9]*$/;//扩展数据类型
		var type=document.all.ZdSzNr.value.split(":")[1];
		//临时解决导学时分类带了0造成在开课通知单中不能修改学时信息
		if(type=="01" || type=="02" || type=="03" || type=="04" || type=="05"){
		   type=parseInt(type);
		} 
		var isnum=!patrn.exec(type);
		if(!isnum){
			var result=false;
			if(type=='0'){
			result=checkNumber(document.all.ZdSzValue);	
			}	
			else if(type=='0.1'){
			result=checkNumber(document.all.ZdSzValue);	
			if(document.all.ZdSzValue.value<0 && result){
			alert("必须为大于0的数字");
			result=false;
			}
			}else if(type=='0.2'){
			result=checkIntegerIsTun(document.all.ZdSzValue);
			}		
			if(result==true) {
				ZdZcing.style.visibility = "visible";
				if(document.all.ZdSzValueTemp.value=='')
					document.all.ZdSzValueTemp.value = document.all.ZdSzValue.value;					
				document.all.PlAction.value = "set";
				document.all.ZDSXkeydm.value = document.all.ZdSzNr.value;
				document.all.ZdSzCodeValue.value = document.all.ZdSzValue.value;				
				//document.Form1.submit();
				//ZdZcing.style.visibility = "hidden";
			}else{
				ZdZcing.style.visibility = "hidden";
				return false;
			}
		}
		if (!CheckCanDelete("设置<" + document.all.ZdSzNr.options[document.all.ZdSzNr.selectedIndex].text+">")) {
		ZdZcing.style.visibility = "hidden";
			return false;
		}
		
		//设置值		
		ZdZcing.style.visibility = "visible";
		if(document.all.ZdSzValueTemp.value=='')
			document.all.ZdSzValueTemp.value = document.all.ZdSzValue.value;
		document.all.PlAction.value = "set";
		document.all.ZDSXkeydm.value = document.all.ZdSzNr.value;
		document.all.ZdSzCodeValue.value = document.all.ZdSzValue.value;
		document.forms(0).action = "";
		if(document.getElementById("userModifyUrl").value != "") {
			var modFieldName = document.getElementById("ZdSzNr").value.split(":")[0];
			var userModFields = document.getElementById("userModifyUrl").value.split(",");
			for(var i=0;i<userModFields.length;i++) {
				if(userModFields[i].split(":")[0] == modFieldName) {
					document.forms(0).action = userModFields[i].split(":")[1];
					break;
				}
			}
		}
		document.Form1.submit();
		ZdZcing.style.visibility = "hidden";
		document.all.PlAction.value = "";
		document.all.ZdSzValueTemp.value = "";
	}	
}

//选择查询操作的内容
function szSearchValue(i) {
	var searchF = document.all('Field'+i).value;
	document.all('SValue'+i).value = "";
	if (document.all('Field'+i).value == ''){
      		document.all('cmdselectS'+i).style.visibility = "hidden";
   	}else {
    		//代码:类型:下拉选择SQL
    		var dmbz = searchF.split(":");
		//字典代码
		document.all.ZdSzCode.value = dmbz[0];
		//字典的显示内容
		document.all.ZdSzCodeValue.value = "";
		// 如果有字典内容显示字典内容
		if (dmbz.length > 2){
      			document.all('cmdselectS'+i).style.visibility = "visible";
		}else {// 不是字典			
	  		document.all('cmdselectS'+i).style.visibility = "hidden";
			if (dmbz[1]=="10") {
				document.all('SValue'+i).value = "yyyy-MM-dd";
			}else if (dmbz[1]=="11") {
				document.all('SValue'+i).value = "yyyy-MM-dd hh:mm:ss";
			}else if (dmbz[1]=="12") {
				document.all('SValue'+i).value = "yyyyMM";
			}else if (dmbz[1]=="13") {
				document.all('SValue'+i).value = "yyyyMMdd";
			}else if (dmbz[1]=="14") {
				document.all('SValue'+i).value = "yyyyMMddhhmmss";
			}
		}
  	}
	document.getElementById('ZdSzCodeValue').value = "";  	
  	document.getElementById('ZDSXkeydm').value = "";
  	document.getElementById("hiddenframe").style.display = "none";
}

//查询操作选择弹出iframe
function ChooseHiddenframeS(i){
	var tmpUrl = "../../selectDictionary.do?method=execute&typeCode="+i+"&type=" + document.all('Field'+i).value;
	var abe=getLTWH(document.getElementById('SValue'+i));

	document.getElementById("hiddenframe").style.position = "absolute";
    	document.getElementById("hiddenframe").style.border = 0;
	document.getElementById("hiddenframe").width = 205;
	document.getElementById("hiddenframe").height = 225;
    	document.getElementById("hiddenframe").style.pixelLeft = abe.left;
	document.getElementById("hiddenframe").style.top = abe.top;
	document.getElementById("hiddenframe").style.display = "";
    	window.frames["hiddenframe"].location = tmpUrl;	
}
//检查数据类型事件
function CheckDataLx(obj, Lx) {
	s_array_objvalue = obj.value.toString().split("|");
	tmpstr = s_array_objvalue[0];
	if (trimstr(tmpstr) != "") {
		if (Lx == "number") {
			if (!checkNum(tmpstr)) {
				alert("必须输入数字！");
				obj.focus();
				obj.value = "";
				try {
					return false;
				}
				catch (exception) {
					return false;
				}
			}
		} else {
			if (Lx == "date") {
				if (!checkDate(tmpstr)) {
					alert("必须输入日期格式，例如：2007-01-01");
					obj.value = "";
					obj.focus();
					try {
						return false;
					}
					catch (exception) {
						return false;
					}
				}
			}
		}
	}
	return true;
}

//JS中的Trim方法，替换字符串中的空格
function trimstr(s){
  return s.replace(/(^\s*)|(\s*$)/g, ""); 
}


//批量设置选择值事件
function SelectValueCode() {
	var batchSeter = document.all.batchSeter.value;
	var ZdSzCode = document.all.ZdSzCode.value;
	var zdBeanName = document.all.zdBeanName.value;
	var htmlurl = "public.do?method=ZdSearch&ZdSzCode=" + ZdSzCode + "&zdBeanName=" + zdBeanName + "&batchSeter=" + batchSeter;
	var newwin = window.open(htmlurl, "_blank", "toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=no,resizable=no,top=" + (screen.availheight / 2 - 147) + " ,left=" + (screen.availwidth / 2 - 110) + ",width=220,height=330");
}

//批量删除事件
function DeleteSelectedData(iPageNum) {
	if (!CheckCanDelete("删除")) {
		return false;
	}
	document.Form1.PlAction.value = "del";
	creating.style.visibility = "visible";
	document.Form1.submit();
	document.getElementById('alldiv').disabled = true;
	document.all.PlAction.value = "";
	creating.style.visibility = "hidden";
}

//检查复选脚本
function CheckCanDelete(strOper) {
	var CanDelete = false;
	if (document.all.C_Select == null) {
		CanDelete = false;
	} else {
		if (document.all.C_Select.length == null ) 
			CanDelete = document.all.C_Select.checked;
		else{
			for (i = 0; i < document.all.C_Select.length; i++) {
				if (document.all.C_Select[i].checked) {
					CanDelete = true;
					break;
				}
			}
		}
	}
	if (!CanDelete) {
		alert("指定" + strOper + "无效，没有选择记录！");
		return false;
	}else if (!confirm("您所选择的记录将被指定" + strOper + "，继续？")) {
		return false;
	}
	return true;
}

//打开一个模态窗口
function JsMod(htmlurl,tmpWidth,tmpHeight){  
	htmlurl=getRandomUrl(htmlurl); 
	var newwin = window.showModalDialog(htmlurl,window,"dialogWidth:"+tmpWidth+"px;status:no;dialogHeight:"+tmpHeight+"px"); 
	if(newwin!=null && newwin == "ok"){
		openProgress();
		window.Form1.PlAction.value="";
		window.Form1.submit();
	}
}



/**
所有showModalDialog替换为open
url 打开弹出框的url地址
obj 参数

sFeatures 用来描述对话框的外观等信息
*/
window.showModalDialog = function(url,obj,sFeatures){ 
	sFeatures = sFeatures.replace(/dialogHeight/gi,"height");
	sFeatures = sFeatures.replace(/dialogWidth/gi,"width"); 
	sFeatures = sFeatures.replace(/dialogTop/gi,"top"); 
	sFeatures = sFeatures.replace(/dialogLeft/gi,"left");
	sFeatures = sFeatures.replace(/:/gi, "=");
	sFeatures = sFeatures.replace(/;/gi, ",");
	
	var iTop = 60;    //获得窗口的垂直位置;
	var iLeft = 200;  	//获得窗口的水平位置; 
	sFeatures = sFeatures+",top="+iTop+",left="+iLeft;
 
	var newWindow = window.open(url,"",sFeatures);
	return newWindow;
}

//刷新open打开的父页面
function parentRefresh(){
	try{
		window.opener.openProgress();
	}catch(e){}
	
	try{
		window.opener.indexSx();   
	}catch(e){
		//opener.location.href = opener.location.href; 
		window.opener.location.reload();
	} 
	window.opener=null;
	window.close();
}


function openWindowNew(htmlurl,tmpWidth,tmpHeight,itop,ileft){
	var top = ((window.screen.availHeight-document.body.clientHeight)/2);
	if(itop!=null && itop!=""){
		top = itop;
	}
	var left = ((window.screen.availWidth-document.body.clientWidth)/2);  
	if(ileft!=null && ileft!=""){
		left = ileft;
	}
	
	window.open(htmlurl, "printsetup", "toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=no,resizable=no,top=" 
			+ top+ ",left=" + left+ ",width="+tmpWidth+"px,height=" + tmpHeight + "px");
}

 

function JsMod_div(htmlurl,tmpWidth,tmpHeight){
	htmlurl=getRandomUrl(htmlurl);
	
	if(tmpWidth==null || tmpWidth==""){
		tmpWidth = 500;
	}
	
	if(tmpHeight==null || tmpHeight==""){
		tmpHeight = 400;
	}
	
	var sHtml="<div id=\"help_win\" class=\"easyui-window\" title=\"\" style=\"width:"+tmpWidth+"px;height:"+tmpHeight+"px;\"" 
		+" data-options=\"collapsible:false,minimizable:false,maximizable:false,modal:true\">";
	sHtml = sHtml+"<iframe scrolling=\"no\" style=\"border:0px;width:100%;height:560px;\" src=\""+htmlurl+"\" ></iframe>";
	sHtml=sHtml+"</div>";
	
	$("body").append(sHtml);
	
	$('#help_win').window('open'); 
	
/*	htmlurl=getRandomUrl(htmlurl);
	var newwin = window.showModalDialog(htmlurl,window,"dialogWidth:"+tmpWidth+"px;status:no;dialogHeight:"+tmpHeight+"px");
	alert(newwin);
	if(newwin!= null && newwin == "ok"){
		window.Form1.PlAction.value="";
		window.Form1.submit();
	//	document.getElementById('alldiv').disabled = true;
	}*/
}


//通过Servlet的通用设置个性化列表 url必须带路径,格式如/jiaowu/kkgl/listKktzd.jsp
function setPrivateShowByServlet(url,root) {
	htmlurl = root+"/PublicPrivateShowServlet?url=" + url;
	var newwin = window.open(htmlurl, "_blank", "toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=no,top=" + (screen.availheight / 2 - 220) + " ,left=" + (screen.availwidth / 2 - 150) + ",width=300,height=440");
}

//通过Servlet的通用打印
function printSetupByServlet(title) {
	htmlurl = "../PublicListPrintServlet?TblName=" + title;
	var newwin = window.open(htmlurl, "_blank", "toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=no,resizable=no,top=" + (screen.availheight / 2 - 220) + " ,left=" + (screen.availwidth / 2 - 150) + ",width=300,height=440");
}

//通过Servlet的sql通用打印
function printSetupByServlet3(title,root,isSql) {
	htmlurl = root+"/PublicListPrintServlet?TblName=" + title+"&isSql="+isSql;
	var newwin = window.open(htmlurl, "_blank", "toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=no,resizable=no,top=" + (screen.availheight / 2 - 220) + " ,left=" + (screen.availwidth / 2 - 150) + ",width=300,height=440");
}

//通过Servlet的通用打印2带WEB根
var newwin_printSetupByServlet;
function printSetupByServlet2(title,root) {
if(newwin_printSetupByServlet){
newwin_printSetupByServlet.close();
	}
	htmlurl = root+"/PublicListPrintServlet?TblName=" + title;
	newwin_printSetupByServlet = window.open(htmlurl, "_blank", "toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=no,resizable=no,top=" + (screen.availheight / 2 - 220) + " ,left=" + (screen.availwidth / 2 - 150) + ",width=300,height=440");
}

//通过Servlet的通用打印4带WEB根
function printSetupByServlet4(title,root,url) {
	htmlurl = root+"/PublicListPrintServlet?TblName=" + title+"&url="+url;
	var newwin = window.open(htmlurl, "_blank", "toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=no,resizable=no,top=" + (screen.availheight / 2 - 220) + " ,left=" + (screen.availwidth / 2 - 150) + ",width=300,height=440");
}

//通过Servlet的通用打印5带WEB根
function printSetupByServlet5(title,root,isSql,url) {
	htmlurl = root+"/PublicListPrintServlet?TblName=" + title+"&url="+url+"&isSql="+isSql;
	var newwin = window.open(htmlurl, "_blank", "toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=no,resizable=no,top=" + (screen.availheight / 2 - 220) + " ,left=" + (screen.availwidth / 2 - 150) + ",width=300,height=440");
}
//打开一个窗口
function JsOpenWin(htmlurl,tmpWidth,tmpHeight){
   var  top = ((window.screen.availHeight-document.body.clientHeight)/2);  
   var  left = ((window.screen.availWidth-document.body.clientWidth)/2);  
	window.open(htmlurl, "printsetup", "toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=no,resizable=no,top=" 
		+ top+ " ,left=" + left+ ",width="+tmpWidth+"px,height=" + tmpHeight + "px");
}

//检查输入是否是数字
function checkcapital(input, flag) {
	if (input.value == "") return false;
	str = input.value;
	var checkOK;
	var checkStr = str;
	var allValid = true;
	var allNum = "";
	if (flag == 0) {
		checkOK = "0123456789-, ";
	} else {
		checkOK = "0123456789";
	}
	for (i = 0; i < checkStr.length; i++) {
		ch = checkStr.charAt(i);
		for (j = 0; j < checkOK.length; j++) {
			if (ch == checkOK.charAt(j)) {
				break;
			}
		}
		if (j == checkOK.length) {
			allValid = false;
			break;
		}
		allNum += ch;
	}
	if (!allValid) {
		alert("输入的数据必须是数字!");
		input.value = "";
		input.focus();
		input.select();
		return (false);
	}
	return true;
}

//弹出一般窗口
function JsAdd(url, iWidth, iHeight, iTop, iLeft) { 
	open(url, "Detail", "Scrollbars=no,Toolbar=no,Location=no,Direction=no,resizable=yes,Width=" + iWidth + " ,Height=" + iHeight + ",top=" + iTop + ",left=" + iLeft); 
}

//转入页事件
function submitpage(maxPageNum) {
	if (document.getElementById('txtpage').value == "") {
		alert("请输入要查看的页码！");
		document.getElementById('txtpage').focus();
		return false;
	} else {
		ipage = parseInt(document.getElementById('txtpage').value);
		if (isNaN(ipage)) {
			alert("请确认输入的是数字!");
			document.getElementById('txtpage').focus();
			return false;
		} else {
			if (ipage < 1) {
				document.Form1.PageNum.value = "1";
				ipage = 1;
			}
			if (ipage > maxPageNum) {
				document.Form1.PageNum.value = maxPageNum;
				ipage = maxPageNum;
			}
			document.Form1.PageNum.value = ipage;
			creating.style.visibility = "visible";
			document.Form1.submit();
			document.getElementById('alldiv').disabled = true;
			return true;
		}
	}
}

//子报表的打开关闭事件，第二个版本
function openclose2(rowIndex, subTableHeight, url, basePath) {
	var closeimg = basePath + "/framework/images/menu_close.gif";
	var openimg = basePath + "/framework/images/menu_open.gif";
	if (document.getElementById("img" + rowIndex).src.indexOf("close") > 0) {
		document.getElementById("img" + rowIndex).src = openimg;
		if (document.getElementById("subtd" + rowIndex).innerHTML.length <= 6){
		    document.getElementById("subtd" + rowIndex).innerHTML = "<iframe scrolling=no id=\"subiframe" + rowIndex + "\" width=90% height=" + subTableHeight + " src=\"\"></iframe>";
		    document.all("subiframe" + rowIndex).src = url;
		}
		document.all("subtr" + rowIndex).style.display = "block";
	} else {
		document.getElementById("img" + rowIndex).src = closeimg;
		document.all("subtr" + rowIndex).style.display = "none";
	}
}
 function checkRadioEmpty(prop) {
		var radio_len = document.all(prop).length;
		var result = false;
		if(radio_len >= 2) {
			for(var i=0;i<radio_len;i++) {
				 if(document.all(prop)[i].checked == true){
					  result = true;
				 }
			}
		}else{
			if(document.all(prop).checked == true) {
				result = true;
			}
		}
		return result;
	}
    
    
//点击保存按钮--增加(增修删用)
function submitAdd(action1,callback){ 
	if(checkType() == false){
		return;
	}
	
	var field = document.Form1.fieids.value.split('\|');
	for(var i=1;i<field.length;i++){
		var tmp=field[i].split(',');
   	 	//tmp = tmp[0].split('.');
   	 	var maxlen = document.getElementById(tmp[0]).maxLength;
   	 
   	 	if(typeof(document.getElementById(tmp[0]).value)!='undefined') {
   	 		if(trimstr(document.getElementById(tmp[0]).value)=="null"){
				alert('此文本框的值不能为null');
				document.all(tmp[0]).focus();
				document.all(tmp[0]).select();	
				return false;
   	 		}
   	 		
			var t = document.getElementById(tmp[0]).value;
			var length = t.replace(/[^\x00-\xff]/g,"**").length;
			
		/*	if(length!=''){
				if(parseInt(maxlen)<length){
					alert('此文本框的值过长，最多允许有'+maxlen+'个字符，其中汉字占两个字符，其他占一个字符');
					document.all(tmp[0]).focus();
					return false;
				}
			}*/
   	 	}
    }
    
    var notnul=document.Form1.notNull.value.split(/,/g);
    for(var i=0;i<notnul.length;i++){
    var temp=notnul[i].split(/:/g);
    
    if(notnul[i].indexOf("#radiobox") >= 0) {
    	if(!checkRadioEmpty(temp[1].replace("#radiobox",""))) {
			alert(temp[0]+"没有选择!");
			return false;
		}
    }else{
    	if (typeof(temp[1]) != "undefined") { 
		    if(trimstr(document.getElementById(temp[1]).value)==""){
				alert(temp[0]+'不能为空');
				document.getElementById(temp[1]).focus();
				try{
					document.getElementById(temp[1]).select();
			 	}catch(e){}
			 	return false;
		    }
		}
    }
	    
	   
	    
    }
     //回调方法
	     if(typeof(callback)!='undefined'){
	     if(!callback()){
	     return;
	     }
	       }
    document.Form1.submit_add.disabled="true";
    if(action1=="null"){
	       document.Form1.actionUrl.value="add";
	       //alert(callback);
	       window.Form1.submit();
    }else{
	       window.Form1.action  = action1;
	       window.Form1.submit();
    }
}

//点击保存按钮--修改(增修删用)
function submitEdit(action1,callback){
	if(!isFormChanged()) return;
	
	if(checkType() == false) return;
	var field = document.Form1.fieids.value.split('\|');
	
	for(var i=1;i<field.length;i++){
	   	 var tmp=field[i].split(',');
	   	 //tmp = tmp[0].split('.');
	   	 var maxlen = document.getElementById(tmp[0]).maxLength;
	     if(trimstr(document.getElementById(tmp[0]).value)=="null"){
		       alert('此文本框的值不能为null');
		       document.all(tmp[0]).focus();
		       document.all(tmp[0]).select();	
		       return false;
	      }
	     var t = document.getElementById(tmp[0]).value;
		 var length = t.replace(/[^\x00-\xff]/g,"**").length
		
		 /*if(length!=''){
			if(parseInt(maxlen)<length){
				  alert('此文本框的值过长，最多允许有'+maxlen+'个字符，其中汉字占两个字符，其他占一个字符');
				  document.all(tmp[0]).focus();
				  return false; 
			}
		 }*/
    }
 	var notnul=document.Form1.notNull.value.split(/,/g);
     //吴争修改
    for(var i=0;i<notnul.length;i++){
	   	 var temp = notnul[i].split(/:/g);
	   	 
	   	 if(notnul[i].indexOf("#radiobox") >= 0) {
	    	if(!checkRadioEmpty(temp[1].replace("#radiobox",""))) {
				alert(temp[0]+"没有选择!");
				return false;
			}
	    }
	    else{
		   	 if(trimstr(document.getElementById(temp[1]).value)==""){
		    	alert(temp[0]+'不能为空');
		       	//temp[1].fouce();
		       	//temp[1].select();
		       	return false;
		   	 }
	   	}
	   	 
    }
    
     //回调方法
	     if(typeof(callback)!='undefined'){
	     if(!callback()){
	     return;
	     }
	       }
    
    document.Form1.submit_add.disabled="true";
    document.Form1.loadTimes.value=1;
    if(action1=="null"){
     	  document.Form1.actionUrl.value="edit";
      	 window.Form1.submit();
    }else{
     	  window.Form1.action = action1;
     	  window.Form1.submit();
    }
}
//点击删除按钮--删除(增修删用)
function submitDel(action1){
   if(!confirm('数据将被删除,是否继续?'))
     {return false;}
    document.Form1.delButton.disabled="true";
    document.Form1.loadTimes.value=1;
    if(action1=="null"){
       document.Form1.actionUrl.value="del";
       window.Form1.submit();
    }else{
       window.Form1.action= action1;
       window.Form1.submit();
    }
}

//查询事件
function JsFind(htmlurl,tmpWidth,tmpHeight){
	var newwin = window.showModalDialog(htmlurl,"","dialogWidth:"+tmpWidth+"px;status:no;dialogHeight:"+tmpHeight+"px");
	if (newwin != null)
	{
		if (newwin.type == "ok")
		{
			window.Form1.where1.value = newwin.wheresql;
			window.Form1.OrderBy.value = newwin.OrderBy;
			window.Form1.PageNum.value = "1";
			creating.style.visibility='visible';
			window.Form1.submit();
			document.getElementById('alldiv').disabled = true;
		}
	}
}

function getRandomStr()
{
	var  date=new Date();
	var t=Date.parse(date);   
	return t;
}

//给URL带个随机参数
function getRandomUrl(htmlurl)
{
var count =htmlurl.indexOf("?");
var  date=new Date();
var t=Date.parse(date);    
if(count<0)
{
htmlurl=htmlurl+"?tktime="+t;
}
else
{
htmlurl=htmlurl+"&tktime="+t;
}

return htmlurl;
}



//增加事件
function JsMAddNoAgain(htmlurl,tmpWidth,tmpHeight){
    htmlurl=getRandomUrl(htmlurl);
    
	var newwin = window.showModalDialog(htmlurl,window,"dialogWidth:"+tmpWidth+"px;status:no;dialogHeight:"+tmpHeight+"px");
	
	if(newwin!=null && newwin == "ok"){
//		creating.style.visibility='visible';
		window.Form1.PlAction.value="";
		window.Form1.submit();
//		document.getElementById('alldiv').disabled = true;
	} 
}


 //增加事件
function JsMAdd(htmlurl,tmpWidth,tmpHeight){
    htmlurl=getRandomUrl(htmlurl);
    var newwin = window.showModalDialog(htmlurl,window,"dialogWidth:"+tmpWidth+"px;status:no;dialogHeight:"+tmpHeight+"px");
/*	if(newwin!=null && newwin == "ok"){
		if(confirm("是否再次增加记录？")){
			JsMAdd(htmlurl,tmpWidth,tmpHeight);
		}else{ 
			window.Form1.PlAction.value="";
			window.Form1.submit(); 
		}
	}else{
	  if ((navigator.userAgent.indexOf('MSIE') >= 0) && (navigator.userAgent.indexOf('Opera') < 0)){
	        //alert('你是使用IE')
	  }else if (navigator.userAgent.indexOf('Firefox') >= 0){
	        //alert('你是使用Firefox')
	  }else if (navigator.userAgent.indexOf('Opera') >= 0){
	        //alert('你是使用Opera')
	  }else{
	        //alert('你是使用其他的浏览器浏览网页！')
	        window.Form1.PlAction.value="";
			window.Form1.submit(); 
	  } 
	}*/  
	
/*	if(newwin == null){
		creating.style.visibility='visible';
		window.Form1.PlAction.value="";
		window.Form1.submit();
		document.getElementById('alldiv').disabled = true;
	}else if(newwin == "ok"){
		if(confirm("是否再次增加记录？")){
			JsMAdd(htmlurl,tmpWidth,tmpHeight);
		}
		else{
			creating.style.visibility='visible';
			window.Form1.PlAction.value="";
			window.Form1.submit();
			document.getElementById('alldiv').disabled = true;
		}
	}else{
		window.Form1.submit();
	} */
}


 //增加事件
function JsMAddbyNoRefresh(htmlurl,tmpWidth,tmpHeight){
	var newwin = window.showModalDialog(htmlurl,window,"dialogWidth:"+tmpWidth+"px;status:no;dialogHeight:"+tmpHeight+"px");
	
}

//显示\隐藏表格
function showTable(imgId, divId) {
    var tableDivObj = document.getElementById(divId);
    tableDivObj.style.display = (tableDivObj.style.display == "none" ? "block" : "none");
} 

//判断身份证格式
function checkIdCard(obj) {
	if (obj.value == "") return false;
	var factorArr = new Array(7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2, 1);
	var error;
	var varArray = new Array();
	var intValue;
	var lngProduct = 0;
	var intCheckDigit;
	var idNumber = obj.value;
	var intStrLen = obj.value.length;
	if ((intStrLen != 15) && (intStrLen != 18)) {
		error = "输入身份证号码长度不正确！"; 
		alert(error); 
		obj.focus();
		obj.select();
		return false;
	}
	for (var i = 0; i < intStrLen; i++) {
		varArray[i] = idNumber.charAt(i);
		if ((varArray[i] < "0" || varArray[i] > "9") && (i != 17)) {
			error = "错误的身份证号码！"; 
			alert(error); 
			obj.focus();
			obj.select();
			return false;
		} else {
			if (i < 17) {
				varArray[i] = varArray[i] * factorArr[i];
			}
		}
	}
	if (intStrLen == 18) {
		var date8 = idNumber.substring(6, 14);
		if (checkDateId(date8) == false) {
			error = "身份证中日期信息不正确！"; 
			alert(error); 
			obj.focus();
			obj.select();
			return false;
		}
		for (var i = 0; i < 17; i++) {
			lngProduct = lngProduct + varArray[i];
		}
		intCheckDigit = 12 - lngProduct % 11;
		switch (intCheckDigit) {
		  case 10:
			intCheckDigit = "X";
			break;
		  case 11:
			intCheckDigit = 0;
			break;
		  case 12:
			intCheckDigit = 1;
			break;
		}
		if (varArray[17].toUpperCase() != intCheckDigit) {
			error = "身份证效验位错误!...正确为： " + intCheckDigit + "";
			alert(error); 
			obj.focus();
			obj.select();
			return false;
		}
	} else {
		var date6 = idNumber.substring(6, 12);
		if (checkDateId(date6) == false) {
			alert("身份证日期信息有误！"); 
			obj.focus();
			obj.select();
			return false;
		}
	}
	return true;
}

function checkDateId(date){    
	return true;
}

//判断日期格式
function CheckDate(obj) {
	var sDate = obj.value;
	var iaMonthDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
	var iaDate = new Array(3);
	var year, month, day;
	if (arguments.length != 1) {
		alert("程序里调用的参数有错，\n只能一个参数！");
		obj.value = "";
		obj.focus();
		obj.select();
		return false;
	}
	iaDate = sDate.toString().split("-");
	if (obj.value != "") {
		if (iaDate.length != 3) {
			alert("日期格式错误，正确格式：2000-01-01");
			obj.value = "";
			obj.focus();
			obj.select();
			return false;
		}
		if (iaDate[1].length > 2 || iaDate[2].length > 2) {
			alert("日期格式错误，正确格式：2000-01-01");
			obj.value = "";
			obj.focus();
			obj.select();
			return false;
		}
		year = parseFloat(iaDate[0]);
		month = parseFloat(iaDate[1]);
		day = parseFloat(iaDate[2]);
		if (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0)) {
			iaMonthDays[1] = 29;
		}
		if (month < 1 || month > 12) {
			alert("月份错误，月份范围应在1-12之间!");
			obj.value = "";
			obj.focus();
			obj.select();
			return false;
		}
		if (day < 1 || day > iaMonthDays[month - 1]) {
			alert("日期错误，日期范围应在1-" + iaMonthDays[month - 1] + "之间");
			obj.value = "";
			obj.focus();
			obj.select();
			return false;
		}
		var reg = /^\d{4}-((0[1-9]{1})|([1-9]{1})|(1[0-2]{1}))-((0[1-9]{1})|([1-9]{1})|([1-2]{1}[0-9]{1})|(3[0-1]{1}))$/;
		if (!reg.test(obj.value)) {
			alert("日期格式错误，正确格式：2000-01-01");
			obj.value = "";
			obj.focus();
			obj.select();
			return false;
		}
	}
}
//判断是否为数字
function checkNumber(input)
{
try  
  { if(isValidate){return true;}
}catch(err)  
{}
  str = input.value;
  var allValid = true;
  if(str==""){return false;}
  try
  {
	if(parseFloat(str)!=str) allValid = false;
  }
  catch(ex)
  {
	allValid = false;
  }
  if(!allValid){
	alert("输入的数据必须是数字");
	input.value="";
	input.focus();
	return false;
  }
  return true;
}
//判断是否为数字
function checkNumbers(input)
{
  str = input.value;
  var allValid = true;
  if(str==""){return false;}
  try
  {
	if(parseFloat(str)!=str) allValid = false;
  }
  catch(ex)
  {
	allValid = false;
  }
  if(str > 1000){
	alert("输入的数字必选小于1000");
	input.value="";
	input.focus();
	return false;
	}
  if(!allValid){
	alert("输入的数据必须是数字");
	input.value="";
	input.focus();
	return false;
  }
  return true;
}
//判断是否为整数
function checkInteger(input){
	str = input.value;
  	var allValid = true;
  	if(str==""){return false;}
 	try{
		if(parseInt(str)!=str) allValid = false;
  	} catch(ex){
		allValid = false;
	}
	if(!allValid){
		alert("输入的数据必须是数字");
		input.value="";
		input.focus();
		return false;
  	}
  	return true;
}

//判断是否是字符或数字
function checkLetter(input){
	if (input.value == "") return false;
	if(/[^0-9a-zA-Z]/g.test(input.value)){
		alert("必须输入字符或数字");
		input.value="";
		input.focus();
		return false;
	}
	return true;
}
//去除字符串空格
function trim(input){
	return input.replace(/^\s+/g,"").replace(/\s+$/g,"");
}
//判断年月脚本函数yyyyMM
function checkYearMonth(input){
	if (input.value == "") return false;
	if(trim(input.value) != ""){
		var reg = /^\d{4}(0[1-9]{1})|(1[0-2]{1})$/;
		if(!reg.test(input.value) || input.value.length != 6){
			alert("格式错误,正确格式为200701");
			input.value = "";
			input.focus();
			return false;
		}
	}
	return true;
}

/////////////////////////////////////////////////////批量操作选择弹出iframe
function ChooseHiddenframe(basePath){
	var tmpWidth = 200;
	var tmpHeight = 200;
	var tmpUrl = basePath;
	var ChooseType="";
	if(document.all.isOutJoin.value=='false')
		ChooseType= document.all.ZdSzNr.value.substring(document.all.ZdSzNr.value.lastIndexOf(":")+1);
	else
		ChooseType = document.all.ZdSzNr.value.substring(0,document.all.ZdSzNr.value.indexOf(":"))+"::"+document.all.ZdSzNr.value.substring(document.all.ZdSzNr.value.lastIndexOf(":")+1);
	switch(ChooseType){
	  case "gymc":		//公寓信息
	    tmpWidth = "320";
	    tmpHeight = "300";
	    break;
	  case "fjzfbz":		//资费标准
	    tmpWidth = "340";
	    tmpHeight = "300";
	    break;
	  case "xbmb":		//性别编码
	    tmpWidth = "320";
	    tmpHeight = "300";
	    break;
	  case "lxtjsm":		//离校条件
	    tmpWidth = "320";
	    tmpHeight = "300";
	    break;
	  case "xn":		//学年
	    tmpWidth = "320";
	    tmpHeight = "300";
	    break;
	  case "xq":   //学期
	    tmpWidth = "320";
	    tmpHeight = "300";
	    break;
	  case "jllbmc":		//奖励类别
	    tmpWidth = "320";
	    tmpHeight = "300";
	    break;
	  case "fxqmc":		//分校区名称
	    tmpWidth = "320";
	    tmpHeight = "300";
	    break;
	  case "gyqmc":		//公寓区名称
	    tmpWidth = "320";
	    tmpHeight = "300";
	    break;  
	  case "lcbh":     //楼层
	    tmpWidth = "320";
	    tmpHeight = "300";
	    break;
	  case "fjbh":    //房间
	  	tmpWidth = "450";
	    tmpHeight = "400";
	    break;
	  case "wpsm":   //物品
	    tmpWidth = "320";
	    tmpHeight = "300";
	    break;
	  case "jgxm":   //军训教官
	    tmpWidth = "320";
	    tmpHeight = "300";
	    break;
	  case "cdmc":   //军训场地
	    tmpWidth = "320";
	    tmpHeight = "300";
	    break;
	  case "jxxmmc":   //军训项目
	    tmpWidth = "320";
	    tmpHeight = "300";
	    break;
	  case "jxmc":   //军训名称
	    tmpWidth = "320";
	    tmpHeight = "300";
	    break;
	  case "tzbzxmmc":   //体制健康标准项目
	    tmpWidth = "320";
	    tmpHeight = "300";
	    break;
	  case "zhcpxmmc":   //综合测评项目
	    tmpWidth = "320";
	    tmpHeight = "300";
	    break;
	}
    tmpUrl = tmpUrl+ "/selectDictionary.do?method=execute&isOutJoin="+document.all.isOutJoin.value+"&type=" + ChooseType;
	var abe=getLTWH(document.getElementById('ZdSzValue'));
	document.getElementById("hiddenframe").style.position = "absolute";
    document.getElementById("hiddenframe").style.border = 0;
	document.getElementById("hiddenframe").width = tmpWidth;
	document.getElementById("hiddenframe").height = tmpHeight;
    document.getElementById("hiddenframe").style.pixelLeft = abe.left;
	document.getElementById("hiddenframe").style.top = abe.top - tmpHeight - 2;
	document.getElementById("hiddenframe").style.display = "";
	window.frames["hiddenframe"].location = tmpUrl;	
}

/// 找出元素在页面中的坐标和高度,宽度
///element  页面元素
/// <returns>返回元素的绝对Left,Top,Width,Heihgt</returns>
function getLTWH(element) { 
    if ( arguments.length != 1 || element == null )  { 
        return null; 
    } 
    var offsetTop = element.offsetTop; 
    var offsetLeft = element.offsetLeft; 
    var offsetWidth = element.offsetWidth; 
    var offsetHeight = element.offsetHeight; 
    while( element = element.offsetParent ) { 
        offsetTop += element.offsetTop; 
        offsetLeft += element.offsetLeft; 
    } 
    var Abe={
       left:offsetLeft,
       top:offsetTop,
       width:offsetWidth,
       height:offsetHeight
    }
    return Abe;
} 
///////////////选择按钮弹出iframe
function selectFrame(dmField,mcField,ChooseType)
{
	var tmpWidth = "";
	var tmpHeight = "";
	var tmpUrl = "";
	var tmpChooseType = ChooseType;
	var tmpRight = "";
	var strhql="";
	switch(tmpChooseType.toLowerCase())
	{
	   case "bzkzy":		     //选择部颁专业
			tmpWidth = "255";
			tmpHeight = "262";
			break;
	}
    tmpUrl = "../ggxx/selectFrame.do?method=select&type=" + tmpChooseType;
	var abe=getLTWH(document.getElementById(mcField));
	document.getElementById("hiddenframe").style.position = "absolute";
	document.getElementById("hiddenframe").style.border="0px ";
	document.getElementById("hiddenframe").width = tmpWidth;
	document.getElementById("hiddenframe").height = tmpHeight;
	document.getElementById("hiddenframe").style.pixelLeft = abe.left;
	document.getElementById("hiddenframe").style.top = abe.top+abe.height;
	document.getElementById("hiddenframe").style.display = "";
	window.frames["hiddenframe"].location = tmpUrl+"&dmField="+dmField+"&mcField="+mcField+"";	
}

//判断日期格式2 yyyyMMdd
function CheckDate2(obj) {
	if (obj.value == "") return false;
	var sDate = obj.value;
	var iaMonthDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
	var iaDate = new Array(3);
	if (sDate.length != 8) {
		alert("日期格式错误，正确格式：20080101");
		obj.value = "";
		obj.focus();
		obj.select();
		return false;
	}
	iaDate[0] = sDate.substring(0, 4);
	iaDate[1] = sDate.substring(4, 6);
	iaDate[2] = sDate.substring(6, 8);
	var year, month, day;
	if (arguments.length != 1) {
		alert("程序里调用的参数有错，\n只能传入1个参数！");
		obj.value = "";
		obj.focus();
		obj.select();
		return false;
	}
	if (iaDate[1].length > 2 || iaDate[2].length > 2) {
		alert("日期格式错误，正确格式：20080101");
		obj.value = "";
		obj.focus();
		obj.select();
		return false;
	}
	year = parseFloat(iaDate[0]);
	if (sDate.substring(4, 5) != "0") {
		month = parseFloat(iaDate[1]);
	} else {
		month = parseFloat(sDate.substring(5, 6));
	}
	if (sDate.substring(6, 7) != "0") {
		day = parseFloat(iaDate[2]);
	} else {
		day = parseFloat(sDate.substring(7, 8));
	}
	if (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0)) {
		iaMonthDays[1] = 29;
	}
	if (month < 1 || month > 12) {
		alert("月份错误，月份范围应在1-12之间!");
		obj.value = "";
		obj.focus();
		obj.select();
		return false;
	}
	if (day < 1 || day > iaMonthDays[month - 1]) {
		alert("日期错误，日期范围应在" + iaMonthDays[month - 1] + "之间");
		obj.value = "";
		obj.focus();
		obj.select();
		return false;
	}
	var reg = /^\d{4}((0[1-9]{1})|([1-9]{1})|(1[0-2]{1}))((0[1-9]{1})|([1-9]{1})|([1-2]{1}[0-9]{1})|(3[0-1]{1}))$/;
	if (!reg.test(obj.value)) {
		alert("日期格式错误，正确格式：20080101");
		obj.value = "";
		obj.focus();
		obj.select();
		return false;
	}
	return true;
}
//判断日期格式2 yyyyMMdd
//参数flag是否需要判断截止日期大于开始日期
function CheckDateAndValidate(qsrq,jzrq) {
	if (jzrq.value == "") return false;
	var sDate = jzrq.value;
	var iaMonthDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
	var iaDate = new Array(3);
	if (sDate.length != 8) {
		alert("日期格式错误，正确格式：20080101");
		jzrq.value = "";
		jzrq.focus();
		jzrq.select();
		return false;
	}
	iaDate[0] = sDate.substring(0, 4);
	iaDate[1] = sDate.substring(4, 6);
	iaDate[2] = sDate.substring(6, 8);
	var year, month, day;
	if (iaDate[1].length > 2 || iaDate[2].length > 2) {
		alert("日期格式错误，正确格式：20080101");
		jzrq.value = "";
		jzrq.focus();
		jzrq.select();
		return false;
	}
	year = parseFloat(iaDate[0]);
	if (sDate.substring(4, 5) != "0") {
		month = parseFloat(iaDate[1]);
	} else {
		month = parseFloat(sDate.substring(5, 6));
	}
	if (sDate.substring(6, 7) != "0") {
		day = parseFloat(iaDate[2]);
	} else {
		day = parseFloat(sDate.substring(7, 8));
	}
	if (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0)) {
		iaMonthDays[1] = 29;
	}
	if (month < 1 || month > 12) {
		alert("月份错误，月份范围应在1-12之间!");
		jzrq.value = "";
		jzrq.focus();
		jzrq.select();
		return false;
	}
	if (day < 1 || day > iaMonthDays[month - 1]) {
		alert("日期错误，日期范围应在" + iaMonthDays[month - 1] + "之间");
		jzrq.value = "";
		jzrq.focus();
		jzrq.select();
		return false;
	}
	var reg = /^\d{4}((0[1-9]{1})|([1-9]{1})|(1[0-2]{1}))((0[1-9]{1})|([1-9]{1})|([1-2]{1}[0-9]{1})|(3[0-1]{1}))$/;
	if (!reg.test(jzrq.value)) {
		alert("日期格式错误，正确格式：20080101");
		jzrq.value = "";
		jzrq.focus();
		jzrq.select();
		return false;
	}
	checkDataIsValid(qsrq,jzrq);
}
//判断截止日期必须大于开始日期
function checkDataIsValid(qsrq,jzrq){
		var qsdata = new Array(3);
		var jzdata = new Array(3);
		qsdata[0] = qsrq.value.substring(0, 4);
		qsdata[1] = qsrq.value.substring(4, 6);
		qsdata[2] = qsrq.value.substring(6, 8);
		if(null!=jzrq.value && ""!=jzrq.value){
			jzdata[0] = jzrq.value.substring(0, 4);
			jzdata[1] = jzrq.value.substring(4, 6);
			jzdata[2] = jzrq.value.substring(6, 8);
			if(qsdata[0]>jzdata[0]){
				alert("截止日期不能小于起始日期!");
				jzrq.focus();
				jzrq.select();
				return false;
			}else if(qsdata[0]==jzdata[0]){
				if(qsdata[1]>jzdata[1]){
					alert("截止日期不能小于起始日期!");
					jzrq.focus();
					jzrq.select();
					return false;
				}else if(qsdata[1]==jzdata[1]){
					if(qsdata[2]>jzdata[2]){
						alert("截止日期不能小于起始日期!");
						jzrq.focus();
						jzrq.select();
						return false;
					}else if(qsdata[2]==jzdata[2]){
						if(qsdata[3]>=jzdata[3]){
							alert("截止日期不能小于起始日期!");
							jzrq.focus();
							jzrq.select();
							return false;
						}
					}
				}
				return true;
			}
		}
		return true;
	}
//判断年份yyyy
function CheckYear(obj){
	if (arguments.length != 1) {
		alert("程序里调用的参数有错，\n只能传入1个参数！");
		obj.value = "";
		obj.focus();
		obj.select();
		return false;
	}
	if (obj.value == "") return false;
	if (obj.value.length != 4) {
		alert("日期格式错误，正确格式：2008");
		obj.value = "";
		obj.focus();
		obj.select();
		
		return false;
	}
	var reg=new RegExp("^\\d{4}$");
	if(!reg.test(obj.value)){
		alert("日期格式错误，正确格式：2008");
		obj.value = "";
		obj.focus();
		obj.select();
		return false;
	}
	var year = parseFloat(obj.value);
	if (year < 1970 || year > 2050){
		alert("年份输入错误!");
		obj.value = "";
		obj.focus();
		obj.select();
		return false;
	}
}

//判断日期格式3 yyyyMM
function CheckDate3(obj) {
	if (arguments.length != 1) {
		alert("程序里调用的参数有错，\n只能传入1个参数！");
		obj.value = "";
		obj.focus();
		obj.select();
		return false;
	}
	if (obj.value == "") return false;
	var sDate = obj.value;
	var iaDate = new Array(2);
	if (sDate.length != 6) {
		alert("日期格式错误，正确格式：200801");
		obj.value = "";
		obj.focus();
		obj.select();
		return false;
	}
	var reg =  /^(\d{4})(\d{2})$/;
	if (!reg.test(obj.value)) {
		alert("日期格式错误，正确格式：200801");
		obj.value = "";
		obj.focus();
		obj.select();
		return false;
	}
	iaDate[0] = sDate.substring(0, 4);
	iaDate[1] = sDate.substring(4, 6);
	var year, month;
	year = parseFloat(iaDate[0]);
	if (year < 1970 || year > 2050){
		alert("年份输入错误!");
		obj.value = "";
		obj.focus();
		obj.select();
		return false;
	}
	if (sDate.substring(4, 5) != "0") {
		month = parseFloat(iaDate[1]);
	} else {
		month = parseFloat(sDate.substring(5, 6));
	}
	if (month < 1 || month > 12) {
		alert("月份错误，月份范围应在1-12之间!");
		obj.value = "";
		obj.focus();
		obj.select();
		return false;
	}
	return true;
}


//验证EMAIL格式
function ValidateEmail(obj){
	if (obj.value == "") return false;
    var emailReg=/^([a-zA-Z0-9_\-\.\+]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
    if (!emailReg.test(obj.value)) {
		alert("email格式错误！正确格式：admin@qzsoft.com");
		obj.value = "";
		obj.focus();
		obj.select();
		return false;
	}
	return true;
}
//设置cookie，默认保持30天
function setCookie(name, value) {
	var Days = 30;
	var exp = new Date(); 
	exp.setTime(exp.getTime() + Days * 24 * 60 * 60 * 1000);
	//document.cookie = name + "=" + escape(value) + ";expires=" + exp.toGMTString();
}
//获取cookie
function getCookie(name) {
	//var arr = document.cookie.match(new RegExp("(^|   )" + name + "=([^;]*)(;|$)"));
	var arr = document.cookie.split(";");
	if (arr != null) {
		for(var i=0;i<arr.length;i++) {
			var theTmp = arr[i].split("=");
			if(name == trimstr(theTmp[0])) 
				return unescape(theTmp[1]);
		}
	}
	return "";
}
//删除一个cookie
function delCookie(name) {
	var exp = new Date();
	exp.setTime(exp.getTime() - 1);
	var cval = getCookie(name);
	if (cval != null) {
		//document.cookie = name + "=" + cval + ";expires=" + exp.toGMTString();
	}
}
//验证一个地址是否是IP地址
function isIPa(obj) { 
	if (obj.value == "") return false;
	var re=/^(\d+)\.(\d+)\.(\d+)\.(\d+)$/g 
	if(re.test(obj.value)){ 
		if( RegExp.$1 <256 && RegExp.$2<256 && RegExp.$3<256 && RegExp.$4<256) return true; 
	}
	alert("IP地址格式错误，正确格式：192.168.1.1");
	obj.value = "";
	obj.focus();
	obj.select();
	return false; 
}
//日期时间检查  
//格式为：YYYY-MM-DD HH:MM:SS  
function CheckDateTime(obj){
	if (obj.value == "") return false;
    var reg = /^(\d+)-(\d{1,2})-(\d{1,2}) (\d{1,2}):(\d{1,2}):(\d{1,2})$/; 
    var reg1 = /^(\d+)-(\d{1,2})-(\d{1,2})$/; 
    var r = obj.value.match(reg); 
    var r1 = obj.value.match(reg1);
    if(r==null&&r1!=null){
    	obj.value = obj.value+" 00:00:00";
    }
    r = obj.value.match(reg); 
    if(r==null){
    	alert("日期时间格式错误，正确格式为：yyyy-MM-dd hh:mm:ss");
		obj.value = "";
		obj.focus();
		obj.select();
    	return false;
    }
    r[2]=r[2]-1;   
    var d= new Date(r[1],r[2],r[3],r[4],r[5],r[6]);
    if(d.getFullYear()!=r[1] || d.getMonth()!=r[2] 
    	|| d.getDate()!=r[3] || d.getHours()!=r[4] 
    	|| d.getMinutes()!=r[5] || d.getSeconds()!=r[6]){
    	alert("日期时间格式错误，正确格式为：yyyy-MM-dd hh:mm:ss");
		obj.value = "";
		obj.focus();
		obj.select();
    	return false;
    }
    return true;   
}

//跳转到你指定的PATH
function GoYourPath(path){
	window.location.href = path;
}

//判断是否为数字和正数 
function checkNumberIsTun(input)
{
  str = input.value;
  var allValid = true;
  
    if(str==""){return false;}
    
    if( str.substr(0,1) =="0" &&  str.substr(1,1)!=".")
	{
	  alert("输入格式错误！");
	  input.value="";
	  input.focus();
	  return false;
	}
	
	try
	 {
		if(parseFloat(str,10)!=str) allValid = false;
	 }
	 catch(ex)
	 {
		allValid = false;
	 }
  if(!allValid){
	alert("输入的数据必须是数字!");
	input.value="";
	input.focus();
	return false;
  }
  else if(eval(str) <= 0)
  {
  	alert("输入的数据必须大于零!");
  	input.value="";
	input.focus();
	return false;
  }
  else if(eval(str) > 9999999999.99)
  {
	alert("数据过大,必须小于百亿!");
	input.value="";
	input.focus();
	return false;
  }
    return true;
}
//判断是否为数字和正数 
function checkNumberIsTuns(input)
{
  str = input.value;
  var allValid = true;
  
    if(str==""){return false;}
    
     
	try
	 {
		if(parseFloat(str,10)!=str) allValid = false;
	 }
	 catch(ex)
	 {
		allValid = false;
	 }
  if(!allValid){
	alert("输入的数据必须是数字!");
	input.value="";
	input.focus();
	return false;
  }
  else if(eval(str) < 0)
  {
  	alert("输入的数据必须大于零!");
  	input.value="";
	input.focus();
	return false;
  }
  else if(eval(str) > 9999999999.99)
  {
	alert("数据过大,必须小于百亿!");
	input.value="";
	input.focus();
	return false;
  }
    return true;
}
//判断是否为整数和正数
function checkIntegerIsTun(input)
{
	str = input.value;
  	var allValid = true;
  	if(str==""){return false;}
 	try{
		if(parseInt(str,10)!=str) allValid = false;
  	} 
  	catch(ex)
  	{
		allValid = false;
	}
	if(!allValid){
		alert("输入的数据必须是整数!");
		input.value="";
		input.focus();
		return false;
  	}
  	else if(str <= 0)
    {
      alert("输入的数据必须大于零!");
  	  input.value="";
	  input.focus();
	  return false;
    }
    else if(eval(str) > 99999999)
  	{
	  alert("数据过大,必须小于亿!");
	  input.value="";
	  input.focus();
	  return false;
  	}
  	return true;
}

//判断是否为数字和正数
function checkNumberIsMoney(input)
{
  str = input.value;
  var allValid = true;
  if(str==""){return false;}
  
    if( str.substr(0,1) =="0" &&  str.substr(1,1)!=".")
	{
	  alert("输入格式错误！");
	  input.value="";
	  input.focus();
	  return false;
	}
	try
	 {
		if(parseFloat(str,10)!=str) allValid = false;
	 }
	 catch(ex)
	 {
		allValid = false;
	 }
	 
  if(!allValid){
	alert("输入的数据必须是数字!");
	input.value="";
	input.focus();
	return false;
  }
  else if(eval(str) <= 0)
  {
  	alert("输入的数据必须大于零!");
  	input.value="";
	input.focus();
	return false;
  }
  else if(eval(str) > 999999989999999999.99)
  {
	alert("数据过大!");
	input.value="";
	input.focus();
	return false;
  }
    return true;
}
/****************************************************************************
* 谢平20080924增加一系列检查JS方法
****************************************************************************/
//通过id获得这个对象的值
function getValue(idOrName) {
	return document.getElementById(idOrName).value;
}
//通过id获得对象
function getObj(idOrName) {
	return document.getElementById(idOrName);
}

//检查输入对象是否为空
function isEmpty(s) {
	var bool = false;
	if (s == null || trimstr(s) == "")
		bool = true;
	return bool;
}

//检查用户输入字段是否超过指定长度
function checkInputValueLength(inStr, length) {
	if ((inStr == null) || (trimstr(inStr) == "")) {
		return true;
	}
	if (inStr.length > length) {
		return true;
	}
	return false;
}

//检查用户输入字段长度在两个数之间
function checkInputBetween(inStr, limitLen, maxLen) {
	if ((inStr == null) || (trimstr(inStr) == "")) {
		return false;
	}
	if ((inStr.length < limitLen) || (inStr.length > maxLen)) {
		return true;
	}
	return false;
}

//将查两个字符串是否相等
function checkTwoString(str1, str2) {
	return (str1 == str2);
}

//过滤掉字符串 sString 中的空格，返回过滤后的字符串
function tFilterSpace(sString) {
	var re;
	re = / /g;
	return sString.replace(re, "");
}

//检查字符串1(findval)在字符串2(val)中出现的次数
function stringAppearCount(findval, val) {
	var v1 = 0;
	var v2 = 0;
	while (v1 != -1 && v1 < val.length) {
		v1 = val.indexOf(findval, v1);
		if (v1 >= 0) {
			v1++;
			v2++;
		}
	}
	return v2;
}

//检查字符串1(findval)在字符串2(val)中出现第几次(val3)时的位置
function stringAppearPlace(findval, val, val3) {
	var v1 = 0;
	while (val3 > 0 && v1 != -1 && v1 < val.length) {
		v1 = val.indexOf(findval, v1);
		if (v1 >= 0) {
			v1 = v1 + findval.length;
			val3--;
		}
	}
	if (v1 > 0) {
		v1 = v1 - findval.length();
	}
	return v1;
}
//检查字符串长度是否符合要求
function stringCheckLength(val, val3) {
		if (val.length > val3) {
			alert("输入长度大于"+val3);
			return false;
		}
}
//字符转换为UTF-8编码
function EncodeUtf8(s1)
{
      var s = escape(s1);
      var sa = s.split("%");
      var retV ="";
      if(sa[0] != "")
      {
         retV = sa[0];
      }
      for(var i = 1; i < sa.length; i ++)
      {
           if(sa[i].substring(0,1) == "u")
           {
               retV += Hex2Utf8(Str2Hex(sa[i].substring(1,5)));
              
           }
           else retV += "%" + sa[i];

		   if (sa[i].length > 5)
		   {
		      retV += sa[i].substring(5);
		   } 
		   
		   
      }
     
      return retV;
}
function Str2Hex(s)
{
      var c = "";
      var n;
      var ss = "0123456789ABCDEF";
      var digS = "";
      for(var i = 0; i < s.length; i ++)
      {
         c = s.charAt(i);
         n = ss.indexOf(c);
         digS += Dec2Dig(eval(n));
          
      }
      //return value;
      return digS;
}
function Dec2Dig(n1)
{
      var s = "";
      var n2 = 0;
      for(var i = 0; i < 4; i++)
      {
         n2 = Math.pow(2,3 - i);
         if(n1 >= n2)
         {
            s += '1';
            n1 = n1 - n2;
          }
         else
          s += '0';
         
      }
      return s;
     
}
function Dig2Dec(s)
{
      var retV = 0;
      if(s.length == 4)
      {
          for(var i = 0; i < 4; i ++)
          {
              retV += eval(s.charAt(i)) * Math.pow(2, 3 - i);
          }
          return retV;
      }
      return -1;
}
function Hex2Utf8(s)
{
     var retS = "";
     var tempS = "";
     var ss = "";
     if(s.length == 16)
     {
         tempS = "1110" + s.substring(0, 4);
         tempS += "10" + s.substring(4, 10);
         tempS += "10" + s.substring(10,16);
         var sss = "0123456789ABCDEF";
         for(var i = 0; i < 3; i ++)
         {
            retS += "%";
            ss = tempS.substring(i * 8, (eval(i)+1)*8);
           
           
           
            retS += sss.charAt(Dig2Dec(ss.substring(0,4)));
            retS += sss.charAt(Dig2Dec(ss.substring(4,8)));
         }
         return retS;
     }
     return "";
} 


function createTableSetDiv()
{
	var s_array_newtitle = "";
	var s_array_newmc = "";
	var s_array_title = "";
	var s_array_mc = "";
	var _s_array_newtitle = "";
	var _s_array_newmc = "";
	var _s_array_title = "";
	var _s_array_mc = "";
	var _tableFields = document.getElementById("tableFields").value.split(/,/g);
	var _otherFields = document.getElementById("otherFields").value.split(/,/g);
	
	for(var i=0;i<_tableFields.length;i++) {
		_s_array_newtitle = _s_array_newtitle + "," + _tableFields[i].substring(0,_tableFields[i].indexOf(":"));
		_s_array_newmc = _s_array_newmc + "," + _tableFields[i];
	}
	for(var i=0;i<_otherFields.length;i++) {
		_s_array_title = _s_array_title + "," + _otherFields[i].substring(0,_otherFields[i].indexOf(":"));
		_s_array_mc = _s_array_mc + "," + _otherFields[i];
	}
	_s_array_newtitle = _s_array_newtitle.replace(",","");
	_s_array_newmc = _s_array_newmc.replace(",","");
	_s_array_title = _s_array_title.replace(",","");
	_s_array_mc = _s_array_mc.replace(",","");
	s_array_newtitle = _s_array_newtitle.split(/,/g);
	s_array_newmc = _s_array_newmc.split(/,/g);
	s_array_title = _s_array_title.split(/,/g);
	s_array_mc = _s_array_mc.split(/,/g);
	
	var tmpoptions = "";
	var tblhtml = "<table border=\"0\" width=\"100%\"  bordercolorlight=\"#cccccc\" cellspacing=\"0\" cellpadding=\"0\" bordercolor=\"#cccccc\" bordercolordark=\"#FFFFFF\">";
	tblhtml = tblhtml + "<tr><td width=\"45%\" align=\"center\">待显示字段</td><td>&nbsp;</td><td width=\"45%\" align=\"center\">已显示字段</td></tr>";
	tblhtml = tblhtml + "<tr align=\"center\">";
	
	for(i=0;i<s_array_title.length;i++)
	{
		if(s_array_title[i] != "")
			tmpoptions = tmpoptions + "<option value=\""+s_array_mc[i]+"\">"+s_array_title[i]+"</option>";
	}		
	tblhtml = tblhtml + "<td><select name=\"dShowField\"  id=\"dShowField\"  size=\"15\" style=\"width:150\" >"+tmpoptions+"</select></td>";
	tblhtml = tblhtml + "<td><input type=\"button\" class=\"button\" name=\"TableShowLeft\"  id=\"TableShowLeft\"  value=\"右移\" ><br><br><input type=\"button\" class=\"button\" name=\"TableShowRight\"  id=\"TableShowRight\"  value=\"左移\" ><br><br><input type=\"button\" class=\"button\"  name=\"TableShowTop\"  id=\"TableShowTop\"  value=\"上移\" ><br><br><input type=\"button\" class=\"button\" name=\"TableShowBottom\"  id=\"TableShowBottom\"  value=\"下移\"  ></td>";
	
	tmpoptions = "";
	for(i=0;i<s_array_newtitle.length;i++)
	{
		if(s_array_newtitle[i] != "")
			tmpoptions = tmpoptions + "<option value=\""+s_array_newmc[i]+"\">"+s_array_newtitle[i]+"</option>";
	}	
	
	tblhtml = tblhtml + "<td><select name=\"YShowField\"  id=\"YShowField\"  size=\"15\" style=\"width:150\"  >"+tmpoptions+"</select></td>";
	tblhtml = tblhtml + "</tr>";
	tblhtml = tblhtml + "<tr><td colspan=3 align=\"center\"><input type=\"button\" class=\"button\" name=\"TableShowOk\"  id=\"TableShowOk\"  value=\"确定\"  >&nbsp;&nbsp;&nbsp;&nbsp;<input type=\"button\" class=\"button\" name=\"TableShowCancel\"  id=\"TableShowCancel\"  value=\"取消\"  ></td></tr></table>";
	
	var tmpdiv = document.createElement("DIV");
	tmpdiv.id = "TblShowSetDiv";
	tmpdiv.style.position = "absolute";
	tmpdiv.style.zIndex = 2;
	tmpdiv.style.width = 360;
	tmpdiv.style.height = 280;
	tmpdiv.style.left = document.getElementById('alldiv').offsetLeft+2;
	tmpdiv.style.top = document.getElementById('alldiv').offsetTop+2;
	tmpdiv.style.backgroundColor = "#F5F7F9";
	tmpdiv.style.overflow = "auto";
	tmpdiv.innerHTML = tblhtml;
	document.body.appendChild(tmpdiv);
	
	document.getElementById("dShowField").ondblclick = LeftMoveShowField;
	
	document.getElementById("TableShowLeft").onclick = LeftMoveShowField;
	document.getElementById("TableShowLeft").onmouseover = new Function("this.style.cursor='hand';");
	
	document.getElementById("TableShowRight").onclick = RightMoveShowField;
	document.getElementById("TableShowRight").onmouseover = new Function("this.style.cursor='hand';");
	
	document.getElementById("TableShowTop").onclick = TopMoveShowField;
	document.getElementById("TableShowTop").onmouseover = new Function("this.style.cursor='hand';");
	
	document.getElementById("TableShowBottom").onclick = BottomMoveShowField;
	document.getElementById("TableShowBottom").onmouseover = new Function("this.style.cursor='hand';");
	
	document.getElementById("YShowField").ondblclick = RightMoveShowField;
	
	
	document.getElementById("TableShowOk").onclick = doChangeTableSet;
	document.getElementById("TableShowOk").onmouseover = new Function("this.style.cursor='hand';");
	
	document.getElementById("TableShowCancel").onclick = doCanCelTableSet;
	document.getElementById("TableShowCancel").onmouseover = new Function("this.style.cursor='hand';");
	
	
	document.getElementById('alldiv').disabled = true;
}

function doCanCelTableSet()
{
	if (document.getElementById('TblShowSetDiv') != null)
	{
		document.getElementById('TblShowSetDiv').removeNode(true);
	}
	document.getElementById('alldiv').disabled = false;
}

function LeftMoveShowField()
{
	var ObjdShowField = document.getElementById("dShowField");
	var ObjYShowField= document.getElementById("YShowField");
	
	if (ObjdShowField.selectedIndex >=0)
	{
		var newoption = document.createElement("OPTION");
		var tmpIndex = ObjdShowField.selectedIndex;
		ObjYShowField.options.add(newoption);
		newoption.innerText = ObjdShowField.options[tmpIndex].text;
		newoption.value = ObjdShowField.options[tmpIndex].value;
		ObjdShowField.options.remove(tmpIndex);
		if (tmpIndex < ObjdShowField.options.length)
		{
			ObjdShowField.selectedIndex = tmpIndex;
		}
	}
}

function RightMoveShowField()
{
	var ObjdShowField = document.getElementById("dShowField");
	var ObjYShowField= document.getElementById("YShowField");
	
	if (ObjYShowField.selectedIndex >=0)
	{
		var newoption = document.createElement("OPTION");
		var tmpIndex = ObjYShowField.selectedIndex;
		ObjdShowField.options.add(newoption);
		newoption.innerText = ObjYShowField.options[tmpIndex].text;
		newoption.value = ObjYShowField.options[tmpIndex].value;
		ObjYShowField.options.remove(tmpIndex);
		if (tmpIndex < ObjYShowField.options.length)
		{
			ObjYShowField.selectedIndex = tmpIndex;
		}
	}
}
function TopMoveShowField()
{	
	var ObjYShowField= document.getElementById("YShowField");
	if (ObjYShowField.selectedIndex > 0 )
	{
		var tmpIndex = ObjYShowField.selectedIndex -1;
		var tmpText = ObjYShowField.options[tmpIndex].text;
		var tmpValue = ObjYShowField.options[tmpIndex].value;
		
		ObjYShowField.options[tmpIndex].text = ObjYShowField.options[tmpIndex+1].text;
		ObjYShowField.options[tmpIndex].value = ObjYShowField.options[tmpIndex+1].value;
		
		tmpIndex = tmpIndex + 1;
		ObjYShowField.options[tmpIndex].text = tmpText;
		ObjYShowField.options[tmpIndex].value = tmpValue;
		
		ObjYShowField.selectedIndex = tmpIndex - 1;
		
	}
}
function BottomMoveShowField()
{
	var ObjYShowField= document.getElementById("YShowField");
	
	if (ObjYShowField.selectedIndex >= 0 && ObjYShowField.selectedIndex < ObjYShowField.options.length-1)
	{
		var tmpIndex = ObjYShowField.selectedIndex + 1;
		var tmpText = ObjYShowField.options[tmpIndex].text;
		var tmpValue = ObjYShowField.options[tmpIndex].value;
		
		ObjYShowField.options[tmpIndex].text = ObjYShowField.options[tmpIndex-1].text;
		ObjYShowField.options[tmpIndex].value = ObjYShowField.options[tmpIndex-1].value;
		
		tmpIndex = tmpIndex - 1;
		ObjYShowField.options[tmpIndex].text = tmpText;
		ObjYShowField.options[tmpIndex].value = tmpValue;
		
		ObjYShowField.selectedIndex = tmpIndex + 1;
		
	}
}

function doChangeTableSet()
{
	var ObjYShowField= document.getElementById("YShowField");
	var ObjDShowField= document.getElementById("dShowField");
	if (ObjYShowField.options.length == 0)
	{
		alert('请设置显示字段!');
		return false;
	}
	var tmpFieldMc_new = "";
	var tmpFieldMc_old = "";
	for(i=0;i<ObjYShowField.options.length;i++) {
		tmpFieldMc_new = tmpFieldMc_new + "," + ObjYShowField.options[i].value;
	}
	for(i=0;i<ObjDShowField.options.length;i++) {
		tmpFieldMc_old = tmpFieldMc_old + "," + ObjDShowField.options[i].value;
	}
	
	document.getElementById("tableFields").value = tmpFieldMc_new.replace(",","");
	document.getElementById("otherFields").value = tmpFieldMc_old.replace(",","") ;
	
	doCanCelTableSet();
	window.Form1.submit();
}

function findPositionY( obj ) {
  if( obj.offsetParent ) {
      for( var posX = 0, posY = 0; obj.offsetParent; obj = obj.offsetParent ) {
        posX += obj.offsetLeft;
        posY += obj.offsetTop;
      }
      return posY;
  } else {
      return obj.y;
  }
 }
 
 
 //********************************已下功能为批量修改时使用 开始*********************************
	var tableName = "";
	var option_value = "";
	var option_name = "";
	var option_where = "";
	function changeUpdateField(obj) {
		var update_field = obj.value.split(":")[0];
		var selectField;
		var selectField_update;
		if(selectFields != "") {
			selectField = selectFields.split("#");
		}
		
		if(selectField != undefined) {
			for(var i=0;i<selectField.length;i++) {
				if(update_field == selectField[i].split(":")[0]) {
					selectField_update = selectField[i];
					break;
				}
			}
			if(selectField_update != undefined) {
				//通过DWR查询
				if(selectField_update.split(":")[1] == 0) {
					tn = selectField_update.split(":")[2];
					ov = selectField_update.split(":")[3];
					on = selectField_update.split(":")[4];
					ow =  selectField_update.split(":")[5];
					DWREngine.setAsync(false);
					dwrMonitor.getforsj(tn,ov,on,ow,getDataResult);
				}
				//静态设置select
				if(selectField_update.split(":")[1] == 1) {
					var options = selectField_update.split(":")[2];
					var option = options.split("$");
					var ops = "";
					for(var j=0;j<option.length;j++) {
						option[j] = "'"+option[j].replace("|","':'")+"'";
						ops = ops + "," + option[j];
					}
					ops = ops.replace(",","");
					ops = "{"+ops+"}";
					document.getElementById("ZdSzValue_text").innerHTML = "";
					document.getElementById("ZdSzValue_select").innerHTML = "<select id=\"ZdSzValue\" name=\"ZdSzValue\"></select>"
					document.getElementById("ZdSzValue_select").style.visibility = "visible";
					DWRUtil.addOptions(ZdSzValue,objectEval(ops));
				}
				//外接JS方法
				if(selectField_update.split(":")[1] == 2) { 
					var jsMethod = "";
					if(selectField_update.indexOf("$id") >= 0) {
						jsMethod = selectField_update.split(":")[2].replace("$id","ZdSzValue").replace("$value","ZdSzValue_value");
						document.getElementById("ZdSzValue_text").innerHTML = "<input type=\"hidden\" id=\"ZdSzValue\" name=\"ZdSzValue\"><input type=\"text\" id=\"ZdSzValue_value\" name=\"ZdSzValue_value\" class=\"mytext\" size=\"15\" >"
						document.getElementById("ZdSzValue_value").readOnly = true;
						document.getElementById("ZdSzValue").readOnly = true;
					}else{
						jsMethod = selectField_update.split(":")[2].replace("$value","ZdSzValue");
						document.getElementById("ZdSzValue_text").innerHTML = "<input type=\"text\" id=\"ZdSzValue\" name=\"ZdSzValue\" class=\"mytext\" size=\"15\" >"
						document.getElementById("ZdSzValue").readOnly = true;
					}
					document.getElementById("ZdSzValue_select").innerHTML = "";
					
					document.getElementById("ZdSzValue_text").style.visibility = "visible";
					document.getElementById("cmdselect").style.visibility = "visible";
					document.getElementById("cmdselect").onclick = new Function(jsMethod);
				}
				//内接JS方法
				if(selectField_update.split(":")[1] == 3) {
					
					var jsMethod = "";
					if(selectField_update.indexOf("$id") >= 0) {
						jsMethod = selectField_update.split(":")[2].replace("$id","ZdSzValue").replace("$value","ZdSzValue_value");
						document.getElementById("ZdSzValue_text").innerHTML = "<input type=\"hidden\" id=\"ZdSzValue\" name=\"ZdSzValue\"><input type=\"text\" id=\"ZdSzValue_value\" name=\"ZdSzValue_value\" class=\"mytext\" size=\"15\" >"
						document.getElementById("ZdSzValue_value").readOnly = true;
						document.getElementById("ZdSzValue").readOnly = true;
					}else{
						jsMethod = selectField_update.split(":")[2].replace("$value","ZdSzValue");
						document.getElementById("ZdSzValue_text").innerHTML = "<input type=\"text\" id=\"ZdSzValue\" name=\"ZdSzValue\" class=\"mytext\" size=\"15\" >"
						//document.getElementById("ZdSzValue").readOnly = true;
					}
					document.getElementById("ZdSzValue_select").innerHTML = ""; 
					document.getElementById("ZdSzValue_text").style.visibility = "visible";
					document.getElementById("cmdselect").style.visibility = "hidden";
					document.getElementById("ZdSzValue").onclick = new Function(jsMethod);
				}
			}else{
				document.getElementById("ZdSzValue_select").innerHTML = "";
				document.getElementById("ZdSzValue_text").innerHTML = "<input type=\"text\" id=\"ZdSzValue\" name=\"ZdSzValue\" class=\"mytext\" size=\"15\" >"
				document.getElementById("ZdSzValue_text").style.visibility = "visible";
				if(obj.value == "") document.getElementById("ZdSzValue").readOnly = true;
			}
		}
	}
	
	function getDataResult(dataList) {
		document.getElementById("ZdSzValue_text").innerHTML = "";
		document.getElementById("ZdSzValue_select").innerHTML = "<select id=\"ZdSzValue\" name=\"ZdSzValue\"></select>"
		document.getElementById("ZdSzValue_select").style.visibility = "visible";
		DWRUtil.addOptions("ZdSzValue",dataList,0,1);
	}
	
//********************************已上功能为批量修改时使用 结束*********************************

//****************************已下功能为搜索时使用 开始********************************
	var query_index = 0;
	function isHiddenSelect(obj,indexf,oldValue) {
		//如果原来是个选择框，则不用设置默认值。
		if(document.getElementById("SValue"+indexf+"_select").innerHTML != "")
		{
			oldValue = "";
		}
	
		query_index = indexf;
		var update_field = obj.value.split(":")[0];
		var selectField;
		var selectField_update;
		if(selectFields_query != "") {
			selectField = selectFields_query.split("#");
		}
		
		for(var i=0;i<selectField.length;i++) {
			if(update_field == selectField[i].split(":")[0]) {
				selectField_update = selectField[i];
				break;
			}
		}
		if(selectField_update != undefined) {
			//通过DWR查询
			if(selectField_update.split(":")[1] == 0) {
				tn = selectField_update.split(":")[2];
				ov = selectField_update.split(":")[3];
				on = selectField_update.split(":")[4];
				ow =  selectField_update.split(":")[5];
				DWREngine.setAsync(false);
				dwrMonitor.getforsj(tn,ov,on,ow,getDataResultForQuery);
				
				document.getElementById("submit_select_hidden"+query_index).value = "";
				document.getElementById("submit_select_hidden"+query_index).style.visibility = "hidden";
			}
			//静态设置select
			if(selectField_update.split(":")[1] == 1) {
				var options = selectField_update.split(":")[2];
				var option = options.split("$");
				var ops = "";
				for(var j=0;j<option.length;j++) {
					option[j] = "'"+option[j].replace("|","':'")+"'";
					ops = ops + "," + option[j];
				}
				ops = ops.replace(",","");
				ops = "{"+ops+"}";
				document.getElementById("SValue"+query_index+"_text").innerHTML = "";
				document.getElementById("SValue"+query_index+"_select").innerHTML = "<select id=\"SValue"+query_index+"\" name=\"SValue"+query_index+"\"></select>"
				document.getElementById("SValue"+query_index+"_select").style.visibility = "visible";
				DWRUtil.addOptions("SValue"+query_index,{'':'--全选--'}); 
				DWRUtil.addOptions("SValue"+query_index,objectEval(ops));
				
				document.getElementById("submit_select_hidden"+query_index).value = "";
				document.getElementById("submit_select_hidden"+query_index).style.visibility = "hidden";
			}
			//外接JS方法
			if(selectField_update.split(":")[1] == 2) {
				var jsMethod = selectField_update.split(":")[2].replace("$value","SValue"+query_index);
				
				document.getElementById("SValue"+query_index+"_select").innerHTML = "";
				document.getElementById("SValue"+query_index+"_text").innerHTML = "<input type=\"text\" id=\"SValue"+query_index+"\" name=\"SValue"+query_index+"\" class=\"mytext\" value=\"" + oldValue + "\" size=\"10\" >"
				document.getElementById("SValue"+query_index+"_text").style.visibility = "visible";
				document.getElementById("submit_select_hidden"+query_index).value = "选择";
				document.getElementById("submit_select_hidden"+query_index).style.visibility = "visible";
				document.getElementById("submit_select_hidden"+query_index).onclick = new Function(jsMethod);
			}
		}else{
			document.getElementById("SValue"+query_index+"_select").innerHTML = "";
			document.getElementById("SValue"+query_index+"_text").innerHTML = "<input type=\"text\" id=\"SValue"+query_index+"\" name=\"SValue"+query_index+"\" class=\"mytext\" value=\"" + oldValue + "\" size=\"10\" >"
			document.getElementById("SValue"+query_index+"_text").style.visibility = "visible";
			if(obj.value == "") document.getElementById("SValue"+query_index).readOnly = true;
			
			document.getElementById("submit_select_hidden"+query_index).value = "";
			document.getElementById("submit_select_hidden"+query_index).style.visibility = "hidden";
		}
	}
	
	function getDataResultForQuery(dataList) {
		document.getElementById("SValue"+query_index+"_text").innerHTML = "";
		document.getElementById("SValue"+query_index+"_select").innerHTML = "<select id=\"SValue"+query_index+"\" name=\"SValue"+query_index+"\"></select>"
		document.getElementById("SValue"+query_index+"_select").style.visibility = "visible";
		DWRUtil.addOptions("SValue"+query_index,{'':'--全选--'}); 
		DWRUtil.addOptions("SValue"+query_index,dataList,0,1);
	}
//**************************************已上功能为搜索时使用结束*****************************************

/*****************************以下功能为查询返回后保存原有状态使用********************************/
var dir = location.href.substring(0,location.href.lastIndexOf('/')+1);
var radomLen = location.href.lastIndexOf('&tktime');
if(radomLen == -1)
{
	radomLen = location.href.length;
}
var courrentUrl = location.href.substring(dir.length,radomLen);
radomLen = courrentUrl.lastIndexOf('?tktime');
if(radomLen == -1)
{
	radomLen = courrentUrl.length;
}
courrentUrl = courrentUrl.substring(0, radomLen);

/**
 * 保存搜索数据
 */
function saveSearchData() {
	var searchStr = "";
	searchStr = searchStr + processSearchStr();
	searchStr = "{"+searchStr.replace(",","")+"}";
	dwrMonitor.setSearchBaseBean(courrentUrl + user,objectEval(searchStr));
}
/**
 * 处理搜索数据
 */
function processSearchStr() {
	var searchStr = "";
	var divObj = document.getElementById("search_values");

	if(divObj != null) {
		var inputData = divObj.getElementsByTagName("input");
		var selectData = divObj.getElementsByTagName("select");
		for(var i=0;i<inputData.length;i++) {
			if(inputData[i].type != "button" && inputData[i].type != "reset") {
				searchStr = searchStr + "," + inputData[i].name + ":'" + inputData[i].value + "'";
			}
		}
		for(var j=0;j<selectData.length;j++) {
			searchStr = searchStr + "," + selectData[j].name + ":'" + selectData[j].value + "'";
		}
	}
	
	return searchStr;
}
	var isCompleInit=true;
	function initSearchValue() {
	isCompleInit=false;
		DWREngine.setAsync(false);
		dwrMonitor.getSearchValue(searchValue);
		isCompleInit=true;
	}
	function searchValue(mapObj) {
		var value = mapObj[courrentUrl + user];
		if(value != null) {
			var divObj = document.getElementById("search_values");
			if(divObj != null) {
				var inputData = divObj.getElementsByTagName("input");
				var selectData = divObj.getElementsByTagName("select");
			    
				for(var i=0;i<inputData.length;i++) {
					if(inputData[i].type != "button" && inputData[i].type != "reset") {
							if(value[inputData[i].name] != undefined)
							   inputData[i].value = value[inputData[i].name];
					}
				}
				for(var j=0;j<selectData.length;j++) {
						if(value[selectData[j].name] != undefined) {
						   selectData[j].value = value[selectData[j].name];
						}
				}
			}
		}
	}
	/*****************************以上功能为查询返回后保存原有状态使用********************************/
	
  
  /*****************************以下功能为生成ajax树使用********************************/
  var dataList;
  var parameter = "";
  var sunParameter = "";
  var beanName;
  var pName;
  var idName;
  var showName;
  var defaultPValue="0";
  function setParameter(name,value) {
  	  if(this.parameter == "") {
  	  	 parameter = name + ":'" + value + "'";
  	  }else{
  	  	 parameter = parameter + "," + name + ":'" + value + "'";
  	  }
  }
  function setSunParameter(name,value) {
  	  sunParameter = name + ":'" + value + "'";
  }
  
  
  var treeTableIndex = null;
  function getDatas(beanName) {
  	  DWREngine.setAsync(false);
  	  if(parameter != "") parameter = parameter + ",";
  	  var parameter_tmp = parameter + sunParameter;
  	  parameter_tmp = objectEval("{"+parameter_tmp+"}");
  	  dwrMonitor.getTreeDataList(beanName,parameter_tmp,outList);
  }
  function getDatasForAjax(tableStr,pId,indexf) {
  	  DWREngine.setAsync(false);
  	  //var indexf = tableStr.split(":")[0];
  	  var parameter_tmp = objectEval("{"+tableStr+"}");
  	  dwrMonitor.getAjaxMoreTreelist(parameter_tmp,indexf,pId,treeTableIndex,outList);
  }
  function outList(list) {
  	  dataList = list;
  }
  
  var ajax_tree_tables = new Array();
  function fillTree_moreTable() {
  	 getDatasForAjax(ajax_tree_tables[0],"0","0");
     var html = "";
   	 html = html + '<div class="dTreeNode">';
	html = html + '';
	html = html + '<a id="sd0" class="node" href=javascript:goUrl(0)>所有</a>';
	html = html + '</div>';
  	for(var i=1;i<=dataList.length;i++) {
  		html = html + "<div class='dTreeNode'>";
  		if(1) {
  			html = html + "<a href=javascript:void(0) onclick=javascript:doFill_moreTable(this,"+i+",1,'"+dataList[i-1][0]+"'); id='close'><img id='jd"+i+"' src='"+imgPath+"/js/dtree/img/plus.gif'/></a>";
  			html = html + "<img id='folder"+i+"' src='"+imgPath+"/js/dtree/img/folder.gif' />";
  			
  		}else{
	  		html = html + "<img src='"+imgPath+"/js/dtree/img/join.gif' />";
	  		html = html + "<img src='"+imgPath+"/js/dtree/img/page.gif' />";
  		}
  		html = html + "<a class='node' href=javascript:goUrl('"+dataList[i-1][0]+"')>"+dataList[i-1][1]+"</a>";
  		html = html + "<div id='dd"+i+"' class='clip' style='display:none;'></div>";
  		html = html + "<div>";
  	}
  	theTree.innerHTML = html;
  }
  function doFill_moreTable(obj,k,indexf,pId) {
  	
  	if(indexf>ajax_tree_tables.length-1)
  		getDatasForAjax(ajax_tree_tables[ajax_tree_tables.length-1],pId,indexf);
  	else
    	getDatasForAjax(ajax_tree_tables[indexf],pId,indexf);
  	var k_te = ""+k;
  	var html = "";
  	for(var i=0;i<dataList.length;i++) {
  			html = html + '<div class="dTreeNode">';
  			if(treeTableIndex != null) {
	  			if(ajax_tree_tables.length > indexf+1 || 1) {
	  				for(var s=0;s<k_te.length;s++) {
	  					html = html + '<img src="'+imgPath+'/js/dtree/img/line.gif" alt="" />';
	  				}
	  				//判断是否是含单表的
	  				if(treeTableIndex != null) {
	  					if((indexf) == treeTableIndex.split("#")[0]) {
	  						html = html + "<a href=javascript:void(0) onclick=javascript:doFill_moreTable(this,"+k+i+","+(indexf)+",'"+dataList[i][0]+"'); id='close'><img id='jd"+k+i+"' src='"+imgPath+"/js/dtree/img/plus.gif'/></a>";
	  					}else
	  						html = html + "<a href=javascript:void(0) onclick=javascript:doFill_moreTable(this,"+k+i+","+(indexf+1)+",'"+dataList[i][0]+"'); id='close'><img id='jd"+k+i+"' src='"+imgPath+"/js/dtree/img/plus.gif'/></a>";
	  				}else
						html = html + "<a href=javascript:void(0) onclick=javascript:doFill_moreTable(this,"+k+i+","+(indexf+1)+",'"+dataList[i][0]+"'); id='close'><img id='jd"+k+i+"' src='"+imgPath+"/js/dtree/img/plus.gif'/></a>";
					html = html + '<img id="folder'+k+i+'" src="'+imgPath+'/js/dtree/img/folder.gif" alt="" />';
	  			}else{
	  				for(var s=0;s<k_te.length;s++) {
						html = html + '<img src="'+imgPath+'/js/dtree/img/line.gif" alt="" />';
					}
					html = html + '<img src="'+imgPath+'/js/dtree/img/join.gif" alt="" />';
					html = html + '<img id="id4" src="'+imgPath+'/js/dtree/img/page.gif" alt="" />';
				}
			}else{
				if(ajax_tree_tables.length > indexf+1) {
	  				for(var s=0;s<k_te.length;s++) {
	  					html = html + '<img src="'+imgPath+'/js/dtree/img/line.gif" alt="" />';
	  				}
	  				html = html + "<a href=javascript:void(0) onclick=javascript:doFill_moreTable(this,"+k+i+","+(indexf+1)+",'"+dataList[i][0]+"'); id='close'><img id='jd"+k+i+"' src='"+imgPath+"/js/dtree/img/plus.gif'/></a>";
					html = html + '<img id="folder'+k+i+'" src="'+imgPath+'/js/dtree/img/folder.gif" alt="" />';
	  			}else{
	  				for(var s=0;s<k_te.length;s++) {
						html = html + '<img src="'+imgPath+'/js/dtree/img/line.gif" alt="" />';
					}
					html = html + '<img src="'+imgPath+'/js/dtree/img/join.gif" alt="" />';
					html = html + '<img id="id4" src="'+imgPath+'/js/dtree/img/page.gif" alt="" />';
				}
			}
			html = html + '<a id="sd4" class="node" href=javascript:goUrl("'+dataList[i][0]+'")>'+dataList[i][1]+'</a>';
			html = html + "<div id='dd"+k+i+"' class='clip' style='display:none;'></div>";
			html = html + '</div>';
	}
	
	document.getElementById("dd"+k).innerHTML = html;
  	document.getElementById("dd"+k).style.display = "block";
  	if(obj.id=="open") {
  	    document.getElementById("dd"+k).style.display = "none";
  		document.getElementById("jd"+k).src=imgPath+"/js/dtree/img/plus.gif";
  		document.getElementById("folder"+k).src=imgPath+"/js/dtree/img/folder.gif";
  		obj.id="close";
  		
  	}
  	else{
  		document.getElementById("jd"+k).src=imgPath+"/js/dtree/img/minus.gif";
  		document.getElementById("folder"+k).src=imgPath+"/js/dtree/img/folderopen.gif";
  		obj.id="open";
  	}
  }

  function fillTree_oneTable() {
  	setSunParameter(pName,defaultPValue);
    getDatas(beanName);
    var html = "";
    html = html + '<div class="dTreeNode">';
	html = html + '';
	html = html + '<a id="sd0" class="node" href=javascript:goUrl(0)>所有</a>';
	html = html + '</div>';
  	for(var i=1;i<=dataList.length;i++) {
  		html = html + "<div class='dTreeNode'>";
  		if(dataList[i-1]["haveSon"] == "1" || 1) {
  			html = html + "<a href=javascript:void(0) onclick=javascript:doFill_oneTable(this,"+i+",'"+dataList[i-1][idName]+"'); id='close'><img id='jd"+i+"' src='"+imgPath+"/js/dtree/img/plus.gif'/></a>";
  			html = html + "<img id='folder"+i+"' src='"+imgPath+"/js/dtree/img/folder.gif' />";
  			
  		}else{
	  		html = html + "<img src='"+imgPath+"/js/dtree/img/join.gif' />";
	  		html = html + "<img src='"+imgPath+"/js/dtree/img/page.gif' />";
  		}
  		html = html + "<a class='node' href=javascript:goUrl('"+dataList[i-1][idName]+"')>"+dataList[i-1][showName]+"</a>";
  		html = html + "<div id='dd"+i+"' class='clip' style='display:none;'></div>";
  		html = html + "<div>";
  	}
  	theTree.innerHTML = html;
  }
  
  function doFill_oneTable(obj,k,pId) {
    sunParameter = "";
  	setSunParameter(pName,pId);
    getDatas(beanName);
  	var k_te = ""+k;
  	var html = "";
  	for(var i=0;i<dataList.length;i++) {
  			html = html + '<div class="dTreeNode">';
  			if(dataList[i]["haveSon"] == "1" || 1) {
  				for(var s=0;s<k_te.length;s++) {
  					html = html + '<img src="'+imgPath+'/js/dtree/img/line.gif" alt="" />';
  				}
				html = html + "<a href=javascript:void(0) onclick=javascript:doFill_oneTable(this,"+k+i+",'"+dataList[i][idName]+"'); id='close'><img id='jd"+k+i+"' src='"+imgPath+"/js/dtree/img/plus.gif'/></a>";
				html = html + '<img id="folder'+k+i+'" src="'+imgPath+'/js/dtree/img/folder.gif" alt="" />';
  			}else{
  				for(var s=0;s<k_te.length;s++) {
					html = html + '<img src="'+imgPath+'/js/dtree/img/line.gif" alt="" />';
				}
				html = html + '<img src="'+imgPath+'/js/dtree/img/join.gif" alt="" />';
				html = html + '<img id="id4" src="'+imgPath+'/js/dtree/img/page.gif" alt="" />';
			}
			html = html + '<a id="sd4" class="node" href=javascript:goUrl("'+dataList[i][idName]+'")>'+dataList[i][showName]+'</a>';
			html = html + "<div id='dd"+k+i+"' class='clip' style='display:none;'></div>";
			html = html + '</div>';
	}
	document.getElementById("dd"+k).innerHTML = html;
  	document.getElementById("dd"+k).style.display = "block";
  	if(obj.id=="open") {
  	    document.getElementById("dd"+k).style.display = "none";
  		document.getElementById("jd"+k).src=imgPath+"/js/dtree/img/plus.gif";
  		document.getElementById("folder"+k).src=imgPath+"/js/dtree/img/folder.gif";
  		obj.id="close";
  		
  	}
  	else{
  		document.getElementById("jd"+k).src=imgPath+"/js/dtree/img/minus.gif";
  		document.getElementById("folder"+k).src=imgPath+"/js/dtree/img/folderopen.gif";
  		obj.id="open";
  	}
  }
  /**
  * _beanName:表对应的bean对象; _pName:生成的树父ID的名称; _idName:生成的树主ID的名称;
  * _showName:生成的树中显示name的名称; _defaultPValue:第一级的父ID的默认值
  */
  function initAjaxTree(_beanName,_pName,_idName,_showName,_defaultPValue) {
  	  beanName = _beanName;
   	  pName = _pName;
   	  idName = _idName;
   	  showName = _showName;
   	  defaultPValue = _defaultPValue;
   	  fillTree_oneTable();
  }
  /*****************************以上功能为生成ajax树使用********************************/
	
	function objectEval(text){
	    // eval() breaks when we use it to get an object using the { a:42, b:'x' }
	    // syntax because it thinks that { and } surround a block and not an object
	    // So we wrap it in an array and extract the first element to get around
	    // this.
	    // This code is only needed for interpreting the parameter input fields,
	    // so you can ignore this for normal use.
	    // The regex = [start of line][whitespace]{[stuff]}[whitespace][end of line]
	    text = text.replace(/\n/g, ' ');
	    text = text.replace(/\r/g, ' ');
	    if (text.match(/^\s*\{.*\}\s*$/))
	    {
	      text = '[' + text + '][0]';
	    }
	    return eval(text);
   }
   //获取checkbox的值赋予隐藏域 check_object_id值与check_object_name值
   /**
   var objId;
   var objName;
   function checkboxValue(e)
   {
	var check_object_id=document.getElementById("check_object_id");
	var check_object_name=document.getElementById("check_object_name");
	var str=new Array;
	str=e.value.split(",");
	check_object_id.value=check_object_id.value+","+str[0];
	
	check_object_name.value=check_object_name.value+","+str[1];
	
   }
   function getCheckBoxValue(isClose) {
	    if(isClose == undefined) isClose = true;
	    var inpuSize=document.getElementsByTagName("input");
	    for(var i=0;i<inpuSize.length;i++)
	    {
	    	if(inpuSize[i].type=="checkbox")
	    	{
	    			if(inpuSize[i].checked==true)
	    			{
	    				var str=inpuSize[i].value;//获取checkbox的值
						var strlist=new Array;
						strlist=str.split(",");
						var str=document.getElementById("check_object_id").value;
						var str2=document.getElementById("check_object_name").value;
						str=str+strlist[0]+",";
						str2=str2+strlist[1]+",";	
						document.getElementById("check_object_id").value=str;
						document.getElementById("check_object_name").value=str2;
						
	    			}
	    	}
	    }
	     document.getElementById("check_object_id").value=document.getElementById("check_object_id").value.substring(0,document.getElementById("check_object_id").value.lastIndexOf(","));
	     document.getElementById("check_object_name").value=document.getElementById("check_object_name").value.substring(0,document.getElementById("check_object_name").value.lastIndexOf(","));
					
	  	window.returnValue=document.getElementById("check_object_id").value+"||"+document.getElementById("check_object_name").value;	
	   	if(isClose) window.close();
   }
   function showModal(url,parameterId,parameterName,e) {
	   var value=window.showModalDialog(url,e);
	   var valueList=new Array;
	   valueList=value.split("||");
	   document.getElementById(parameterId).value=valueList[0];
	   document.getElementById(parameterName).value=valueList[1];
   }
   **/
   function getCheckBoxIds(colId) {
		var col = document.all(colId);
		var ids = new Array();
		var j = 0;
		if(col!=null){
          if(isNaN(col.length)){
             if(document.all(colId).checked){
                ids[0] = document.all(colId).value;
             }
          }else{
			 for(var i=0; i<col.length; i ++){
              if(col[i].checked){
                ids[j] = col[i].value;
				j ++;
              }
            }
		  }
        }
		return ids;
	}
	function getCheckBoxValues(isClose) {
		var ids = getCheckBoxIds("C_Select");
		if(ids.length == 0){
	        alert("没有选择相关信息，操作无效！");
	        return;
        }else{
        	//for()
        }
	}
	
	Array.prototype.remove=function(dx)
	{
	    if(isNaN(dx)||dx>this.length){return false;}
	    for(var i=0,n=0;i<this.length;i++)
	    {
	        if(this[i]!=this[dx])
	        {
	            this[n++]=this[i]
	        }
	    }
	    this.length-=1
	}
	
	
	///--------------------------以下程序用于:当选择列表的页面时使用,支持翻页选择----------------------////
	var idts = [];
    var namets = [];
    var namets1=[];
    var ids = "";
    var names = "";
    var name1s = "";
    //edit by ywuei at 2010-09-14     
    function initOldDatas_bak(old_ids,old_names) {
    	ids = old_ids;
    	names = old_names;
    	var col_tmp = document.all("C_Select");
    	
    	if(col_tmp!=null){
          if(isNaN(col_tmp.length)){
	          if(old_ids.indexOf(document.getElementById("C_Select").value.split(",")[0]) >= 0){
	               col_tmp.checked = true;
	          }
          }else{
			 for(var i=0; i<col_tmp.length; i++){
              	if((","+ids+",").indexOf(","+col_tmp[i].value.split(",")[0]+",") >= 0){
              		//vids += col_tmp[i].value.split(",")[0]+",";
              		//vnames += col_tmp[i].value.split(",")[1]+",";
                	col_tmp[i].checked = true;
              	}
             }
		  }
        }
       
        if(ids != "") {
        	//vids=vids.substring(0,vids.length-1);
        	ids = old_ids;
        	idts = ids.split(",");
    	}

    	if(names != "") {
    		//vnames = vnames.substring(0,vnames.length-1);
    		namets = old_names.split(",");
    	}
    	var html = "<font color='red'>" + names + "</font>";
    	document.getElementById("select_datas_names").innerHTML = "&nbsp;&nbsp;"+html;
    	document.getElementById("check_object_id").value = ids;
    	document.getElementById("check_object_name").value = names;
    	 
    	initCheckDatas("C_Select");
    }
    
    
    function initOldDatas_name1(old_ids,old_names,old_name1s){
    	ids = old_ids;
    	names = old_names;
    	name1s = old_name1s;
    	
    	var col_tmp = document.all("C_Select");
    	
    	if(col_tmp!=null){
          if(isNaN(col_tmp.length)){
	          if(old_ids.indexOf(document.getElementById("C_Select").value.split(",")[0]) >= 0){
	               col_tmp.checked = true;
	          }
          }else{
			 for(var i=0; i<col_tmp.length; i++){
              	if((","+ids+",").indexOf(","+col_tmp[i].value.split(",")[0]+",") >= 0){
              		//vids += col_tmp[i].value.split(",")[0]+",";
              		//vnames += col_tmp[i].value.split(",")[1]+",";
                	col_tmp[i].checked = true;
              	}
             }
		  }
        }
       
        if(ids!="") { 
        	idts = ids.split(",");
    	}

    	if(names!="") {
    		namets = old_names.split(",");
    	}
    	
    	if(name1s!="") {
    		namets1 = name1s.split(",");
    	}
    	
    	var html = "<font color='red'>" + names + "</font>";
    	document.getElementById("select_datas_names").innerHTML = "&nbsp;&nbsp;"+html;
    	document.getElementById("check_object_id").value = ids;
    	document.getElementById("check_object_name").value = names;
    	initCheckDatas("C_Select");
    }
    
    
    function resetDatas(){
    	document.getElementById("select_datas_names").innerHTML ="";
    	document.getElementById("check_object_id").value ="";
    	document.getElementById("check_object_name").value ="";
    	var selObj = document.getElementsByName("C_Select");
    	//alert(selObj.length);
    	for(var a=0;a<selObj.length;a++){
    		selObj[a].checked=false;
    	} 
    }
    
/*	function selectData(obj) {
    	if(obj.checked == true) {
    		var have = false;
    		for(var i=0;i<idts.length;i++) {
    			if(idts[i] == obj.value.split(",")[0]) {
    				have = true;
    			}
    		}
    		if(have == false) { 
    			idts[idts.length] = obj.value.split(",")[0];
    			namets[namets.length] = obj.value.split(",")[1];
    			if(obj.value.split(",").length>2){
    				namets1[namets1.length] = obj.value.split(",")[2];
    			}
    		}
    	}else{
    		for(var i=0;i<idts.length;i++) {
    			if(idts[i] == obj.value.split(",")[0]) {
    				idts.remove(i);
    			}
    			if(namets[i] == obj.value.split(",")[1]) {
    				namets.remove(i);
    			}
    			if(obj.value.split(",").length>2)
    			{
    			  if(namets1[i] == obj.value.split(",")[1]) {
	    				namets1.remove(i);
    			  }
    			}
    		}
    	}
    	selectForHTML();
    }*/
    
    function selectForHTML() {
    	html = "";
    	ids = "";
    	names = "";
    	names1="";
    	for(var i=0;i<idts.length;i++) {
    		if(namets[i]!=null){
    			html = html + "," + namets[i];
    			names = names + "," + namets[i];
    		}
    		
    		if(idts[i]!=null){
    			ids = ids + "," + idts[i];
    		} 
    		
    		if(namets1.length>0){
    			if(namets1[i]!=null){
    				names1 = names1 + "," + namets1[i];
    			}
    		}
    	}
    	
    	html = "<font color='red'>" + html.replace(",","") + "</font>";
    	ids = ids.replace(",","");
    	names = names.replace(",","");
    	names1 = names1.replace(",","");
    	document.getElementById("select_datas_names").innerHTML = "&nbsp;&nbsp;"+html;
    	document.getElementById("check_object_id").value = ids;
    	document.getElementById("check_object_name").value = names;
    	try{
    		document.getElementById("check_object_name1").value = names1;
    	}catch(e){}
    }
    //选中所有的复选框
    function selectAll_checkbox(call,cid){
        var old = document.all(call).checked;
        var col = document.all(cid);
        if(col!=null){
          if(col.length>=2){
            for(var i=0; i<col.length; i ++){
			  if(col[i].disabled == false)
				col[i].checked = old;
				selectData(col[i]);
            }
          }
          else{
			 if(col.disabled == false) {
				 col.checked = old;
			 	 selectData(col);
			 }
          }
        }
    }
    function initCheckDatas(colId) {
    	var ids_tmp = ","+document.getElementById("check_object_id").value+",";
    	var col_tmp = document.all(colId);
    	if(col_tmp!=null){
          if(isNaN(col_tmp.length)){
             if(ids_tmp.indexOf(","+document.getElementById(colId).value.split(",")[0]+",") >= 0){
                col_tmp.checked = true;
             }
          }else{
			 for(var i=0; i<col_tmp.length; i ++){
              if(ids_tmp.indexOf(","+col_tmp[i].value.split(",")[0]+",") >= 0){
                col_tmp[i].checked = true;
              }
            }
		  }
        }
    }
    //////////-----------------------以上程序用于:当选择列表的页面时使用,支持翻页选择-------------------////////////
   
   
   //让所有控件不可操作
		function DisableAllControls(){ 
			var inputData = document.getElementsByTagName("input");
			var selectData = document.getElementsByTagName("select");
			var textareaData = document.getElementsByTagName("textarea");
			for(var i=0;i <inputData.length;i++){
				if(inputData[i].type == 'button')
					inputData[i].disabled=true;
				if(inputData[i].type == 'text')
					inputData[i].readOnly = true;
				inputData[i].onblur = "";
			}
			for(var j=0;j<selectData.length;j++) {
				selectData[j].disabled = true;
			}
			for(var j=0;j<textareaData.length;j++) {
				textareaData[j].readOnly = true;
			}
		}
		
	
	//判断表单中的数据是否作了修改,如果未修改不允许提交
	var isTextChanged = false;
	function isFormChanged() {
		var form = document.forms[0];
		for (var i = 0; i < form.elements.length; i++) {
		   	var element = form.elements[i];
		   	var type = element.type;
		   	if (type == "text" || type == "hidden" || type == "textarea") {
		    	if (Trim(element.value) != Trim(element.defaultValue)) {
		     		isTextChanged = true;
		     		break;
		    	}
		   	} else if (type == "radio" || type == "checkbox") {
		    	if (element.checked != element.defaultChecked) {
		     		isTextChanged = true;
		     		break;
		    	}
		   	} else if (type == "select-one"||type == "select-multiple") {
		    	for (var j = 0; j < element.options.length; j++) {
		    		if(element.disabled== false) {
			     		if (element.options[j].selected != element.options[j].defaultSelected) {
			      			isTextChanged = true;
			      			break;
			     		}
		     		}
		    	}
		    	
		   	}else { 
		    	// etc...
		   	}
		}
		if(!isTextChanged) {
			//document.forms(0).disabled = true;
			alert("您没有作任何的修改,不能提交表单!");
			//document.forms(0).disabled = false;
			return false;
		}else{
			return true;
		}
	}
	
		function initSelectDefalt() {
			var form = document.forms[0];
			
			if(form == undefined) return;
			
			for (var i = 0; i < form.elements.length; i++) {
		   		var element = form.elements[i];
		   		var type = element.type;
				if (type == "select-one") {
					var isHaveDefault = false;
					for (var j = 0; j < element.options.length; j++) {
						if (element.options[j].defaultSelected == true) {
				      		isHaveDefault = true;
				      		break;
				     	}
			     	}
			
					if(!isHaveDefault) {
						if(element.options[0] != null)
			    			element.options[0].defaultSelected = true;
					}
			   	}
			}
		}
		
		
		
		
    /**
     * 将1,2,3,4,6,8,9,10,13转换成 1-4,6,8-10,13
     * @param str
     * @return
     */
    function convertKkzc(str)
    {
		var strlist =  str.split(",");
		var strReturn = "";
		strReturn = strReturn + strlist[0];
		if (strlist.length > 1)
		{
		    for (i = 0; i < strlist.length; i++)
		    {
				var m = "";
				var n = "";
				var j = i + 1;
				for (j = i + 1; j < strlist.length; j++)
				{
				    if (strlist[j] ==  parseInt(strlist[j - 1]) + 1)
				    {
						m = strlist[j];
						continue;
				    } else
				    {
						n = strlist[j];
						break;
				    }
				}
				i = j - 1;
				if ("" != m)
				{
				    strReturn = strReturn + "-" + m;
				}
				if ("" != n)
				{
				    strReturn = strReturn + "," + n;
				}
			}
		}
		
		return strReturn;
    }
    
    
    /**
     * 将 1-4,6,8-10,13转换成 1,2,3,4,6,8,9,10,13
     * @param str
     * @return
     */
    function ReserveConvertKkzc(str){
		var strlist =  str.split(",");
		var strReturn = "";
		if (strlist.length > 0){
		    for (var i = 0; i < strlist.length; i++){
		    	var oneStrList = strlist[i].split("-");
		    	if (oneStrList.length > 1){
		    		//开始周不能大于结束周
		    		if(parseInt(oneStrList[0])>parseInt(oneStrList[1])){
		    			return "";
		    		}
		    		
		    		for (var j = parseInt(oneStrList[0]); j <= parseInt(oneStrList[1]); j++){
		    			if(strReturn==""){
		    				strReturn = j;
		    			}else{
		    				strReturn = strReturn + "," +j;
		    			}
		    		}
		    	}else{
		    		if(strReturn==""){
	    				strReturn = strlist[i];
	    			}else{
	    				strReturn = strReturn + "," +strlist[i];
	    			} 
		    	}
			}
		}
		return strReturn;
    }
    

    /**
     * 将1,2,3,4,6,8,9,10,13 转换成相加的数字
     * @param str
     * @return
     */    
    function StringsToPlusValue(str)
    {
		var thisStr = str;
		var strlist =  thisStr.split(",");
		var iReturn = 0;
		if (strlist.length > 0)
		{
		    for (var i = 0; i < strlist.length; i++)
		    {
		    	if ("" != strlist[i])
		    	{
					iReturn += parseInt(strlist[i]);    	
		    	}
		    }
		    
		    return iReturn;
		}
		
		return 0;
    }
    
    
function get_radio_value (radio_array)
{
	var i;
    for (i = 0; null != radio_array && i < radio_array.length; ++ i)  //radio_array.length是radio选项的个数
    	if (radio_array[i].checked)
        	return radio_array[i].value;
	return null;  //如果一项都没选则返回空值
}


String.prototype.replaceAll = function(reallyDo, replaceWith, ignoreCase) {   
    if (!RegExp.prototype.isPrototypeOf(reallyDo)) {   
        return this.replace(new RegExp(reallyDo, (ignoreCase ? "gi": "g")), replaceWith);   
    } else {   
        return this.replace(reallyDo, replaceWith);   
    }   
}   

//全角转换为半角互换，boo=1表示半角转全角 boo=0表示全角转半角
function stringToChange(Obj, boo)
{
    var result = "";
    var str = Obj.value;
    var charlist = "\";'<>";//半角字符

    for(var i = 0; i < str.length; i++)//字符串str中的字符 
    {
        var c1 = str.charAt(i);
        var c2 = str.charCodeAt(i);
        if(charlist.indexOf(c1) > -1)
        {
            if(" " == c1)
            {
                result += "　";
            }else
            {
                result += String.fromCharCode(str.charCodeAt(i) + 65248); 
            }
        }else
        {
            if(boo > 0)
            {
                result += String.fromCharCode(str.charCodeAt(i)); 
            }else
            {
                if("　" == c1)
                {
                    result += " ";
                }else
                {
                    if(charlist.indexOf(String.fromCharCode(str.charCodeAt(i) - 65248)) > -1)
                    {
                        result += String.fromCharCode(str.charCodeAt(i) - 65248);
                    }else
                    {
                        result += String.fromCharCode(str.charCodeAt(i)); 
                    }
                }
            }
        } 
    } 
    Obj.value = result;
}

//过滤关键字，所有文本框不允许输入半角 ' <> 等字符
//周建伟：暂时不启用，因为按向左键，不起作用
function filterKeyChar()
{
/*
    var input=document.getElementsByTagName("input");
    for(var i=0;i<input.length;i++)
    {
        if(input[i].type=="text")
            input[i].onkeyup=function(){
			    stringToChange(this, 1);
			}
            
    }
*/
}
//雷立华
//检查字符是否超出限制（中文包括）
function checkstringlength(obj,number,strnew)
{
    var str=obj.value;
    var len2=0;
    for (var i=0; i<str.length; i++) {   
        if (str.charCodeAt(i)>127 || str.charCodeAt(i)==94) {   
            len2 += 2;   
        } else {   
            len2 ++;   
        }   
        }
   if(len2>number)
   {
    alert(strnew+"长度过长，请重新输入");
    obj.focus();
    
   return false;
   
   }
   else
   {
   return true;
   }
}
//雷立华
//给空值赋指定值
function setValueNumber(value,setvalue)
{

if(isEmpty(value))
{

 return setvalue;
}

return value;
}


//左右移动Option
function moveOption(_objLeft, _objRight, _remainOld)
{
	var objLeft = document.getElementById(_objLeft);
	var objRight = document.getElementById(_objRight);
	
	for (var i = 0; i < objLeft.options.length; i++)
	{
		if(objLeft.options[i].selected)
		{
			objRight.add(new Option(objLeft.options[i].text, objLeft.options[i].value));	
			
			if (_remainOld == false)
			{
				objLeft.remove(i);
				i--;
			}
		}
	}
}
//检查输入是否是数字而且必须小于多少  code by yuwei
function checkcapitalAndValue(input, limit,msg, flag) {
	if (input.value == "") return false;
	str = input.value;
	var checkOK;
	var checkStr = str;
	var allValid = true;
	var allNum = "";
	if (flag == 0) {
		checkOK = "0123456789-, ";
	} else {
		checkOK = "0123456789";
	}
	for (i = 0; i < checkStr.length; i++) {
		ch = checkStr.charAt(i);
		for (j = 0; j < checkOK.length; j++) {
			if (ch == checkOK.charAt(j)) {
				break;
			}
		}
		if (j == checkOK.length) {
			allValid = false;
			break;
		}
		allNum += ch;
	}
	if (!allValid) {
		alert(msg+"输入的数据必须是数字!");
		input.value = "";
		input.focus();
		input.select();
		return (false);
	}else if(input.value>limit){
		alert(msg+"输入的数据必须小于"+limit);
		input.value = "";
		input.focus();
		input.select();
		return (false);
	}
	return true;
}
//初始化审核数据
function onworkflow(){
     url = "${pageContext.request.contextPath}/workflow.do?method=workflowShowProcess";
     var ajax = new Ajax.Request(url,
     {
      method:'post',
      onSuccess:onDw
     }
     );
  } 
function onDw(response){} 
//判断adsu标签中多个字段组合唯一	
//type类型 add增加 update修改 
//windowtype弹出窗口类型 alert提示窗 confirm消息确认取消窗
//tableName表名
//coloumName1组合字段其一
//coloumName2组合字段其二
//whereString组装条件字符串(可对N个组合条件进行判断)
//stralert提示语句
//参考示例：pjjylb_add.jsp/pjjylb_edit.jsp
var stralerts;
var types;
var windowtypes;
function onCheckAdsuOnly(type,windowtype,tn,co1,co2,ws,stralert){
		stralerts = stralert;
		types = type;
		windowtypes = windowtype;
		dwrMonitor.getforsj(tn,co1,co2,ws,getDataResult2); 
}
function getDataResult2(dataList){
      if(dataList.length >0){
      	if(windowtypes == "alert"){
      		alert(stralerts);
      	}
      	if(windowtypes == "confirm"){
      		if(confirm(stralerts)){
      			if(types == "add"){
       			submitAdd('null');
       			}
		       	if(types == "update"){
		       		submitEdit('null');
		       	}
      		}
      	}
      }else{ 
      	if(types == "add"){
       		submitAdd('null');
       	}
       	if(types == "update"){
       		submitEdit('null');
       	}
      } 
} 
function onCheckAdsuOnlys(windowtype,tn1,cn1,cn2,ws,stralert){
		stralerts = stralert; 
		windowtypes = windowtype;
		dwrMonitor.getforsj(tn1,cn1,cn2,ws,getDataResult2s); 
}
function getDataResult2s(dataList){
      if(dataList.length >0){
      	if(windowtypes == "alert"){
      		alert(stralerts);
      	}
      	if(windowtypes == "confirm"){
      		if(confirm(stralerts)){
      		}
      	}
      } 
      alert(ir);
} 



//验证开课周次
function isKkZc(str)
{
	//var kkZcReg=/^(\d?,?-?\d?)+$/;
	str=trim(str);
	var kkZcReg=/^(\d+||\d+-\d+)((,\d+-\d+)*||(,\d+)*)((,\d+)||(,\d+-\d+))?$/;
	//var kkZcReg=/^(\d+||\d+-\d+)((((,\d)+-\d)+)*||(,\d+)*)((,\d+)||(,\d+-\d+))?$/;
    /*if (!kkZcReg.test(str)) 
    {
    	alert(1);
    	return false;
    }*/
    if(issmalltobigKKzc(str))
    {
       if(!isReKKzc(str))
       {
        return false;
       }
    }
    else
    {
     return false;
    }
    
	return true;
}

//严整周次是否有重复的
function isReKKzc(str)
{
   /**
     * 将 1-4,6,8-10,13转换成 1,2,3,4,6,8,9,10,13
     * @param str
     * @return
     */
    
    var tempstr= ReserveConvertKkzc(str);
    var templist=tempstr.split(",");
    var tempstrequal=","+tempstr+",";
    //循环检测是否有重复的 
    for(var i=0;i<templist.length;i++)
    {
      var equalstr=","+templist[i]+",";
      var starnum=tempstrequal.indexOf(equalstr);
      var endnum=tempstrequal.lastIndexOf(equalstr);
      if(starnum!=endnum)
      {
       return  false;
      }
    
    }
    
    
    return true;
   
}



//检测类似1-5，带‘-’模式的前数是否小于后数 需要在重复检查的前面
function issmalltobigKKzc(str)
{
  var templist=str.split(",");
   for(var i=0;i<templist.length;i++)
    {
      var oneStrList = templist[i].split("-");
		    	if (oneStrList.length > 1)
		    	{
		    		if(parseInt(oneStrList[0])>=parseInt(oneStrList[1]))
		    		{
		    			 return false;
		    		}
		    	}
    
    }
return  true;
}

//检测周次是否含相应的单双周次 flag=1为奇数，flag=2为偶数 
function isdsKKzc(str,flag)
{
  var templist=str.split(",");
   for(var i=0;i<templist.length;i++)
    {
      var oneStrList = templist[i].split("-");
		    	if (oneStrList.length > 1||flag=='0')
		    	{
		    		return true;
		    	}
               else
               {
                 if(flag=='1')
                 {
                     if(parseInt(oneStrList)%2!=0)
                     return true;
                 }
                 else 
                 {
                   if(parseInt(oneStrList)%2==0)
                   {
                    return true;
                   }
                 }
                 
                 
               }
    }
return  false;
}

function getMaxKKzc(str,maxZc)
{
  /**
     * 将 1-4,6,8-10,13转换成 1,2,3,4,6,8,9,10,13
     * @param str
     * @return
     */
    var tempmax=1;
    var tempstr= ReserveConvertKkzc(str);
    var templist=tempstr.split(",");
    var tempstrequal=","+tempstr+",";
    
    for(var i=0;i<templist.length;i++)
    {
      var equalstr=parseInt(templist[i]);
      if(equalstr>tempmax)
      {
      tempmax=equalstr;
      }
     
    
    }
  
    if(tempmax>parseInt(maxZc))
    {
     alert("请保证周次数最大不超过"+maxZc+"！");
     return false;
    }
    
    return true;
  }
//验证电话格式
function ValidatePhoneNum(obj){
	if (obj.value == "") return false;
    	var phoneReg=/^((\d{11})|^((\d{7,8})|(\d{4}|\d{3})-(\d{7,8})|(\d{4}|\d{3})-(\d{7,8})-(\d{4}|\d{3}|\d{2}|\d{1})|(\d{7,8})-(\d{4}|\d{3}|\d{2}|\d{1}))$)$/;
    	if (!phoneReg.test(obj.value)) {
		alert("电话格式错误！\n\n正确格式，例如：\n固话：1234-12345678\n固话带分机：1234-12345678-1234\n手机：12345678901");
		obj.value = "";
		obj.focus();
		obj.select();
		return false;
	}
	return true;
}  

//验证不能输入特殊字符
function checkInput(obj){
var stringReg =",./?;:'\"\|%，。、？；：’\”%&￥";
if (obj.value == "") return false;
   for(var i = 0; i < obj.value.length; i++)//字符串str中的字符 
    {
	    var c1 = obj.value.charAt(i);
	    if(stringReg.indexOf(c1) > -1){
		alert("不能输入,./?;:'\"\|%");
		}
	}

}
function mxhDivOnscroll(obj){
isscroll=true;
javascript:document.getElementById('tblHeadDiv').style.pixelLeft = -obj.scrollLeft;
/*document.getElementById('cwhdiv').style.left = document.getElementById('alldiv').offsetWidth - 20 + this.scrollLeft;*/

}
var isdown=false;
var isscroll=false;
function mxhDivonmousedown(){
isdown=true;
//alert(2);
}
function mxhDivonmouseup(){
isdown=false;
if(isscroll){
//alert(1);
}
isscroll=false;
}

//列表右击菜单
function csMenu() {
    this.IEventHander = null;
    this.IContextMenuHander = null;
    this.IStartIndex = null;
    this._menu = null;
    this._iframe = null;
    this._object = null;

    this.Show = function() {
        var e = window.event || event;
        if (e.button == 2) {
            this.IContextMenuHander = function(){return false;};
            document.attachEvent("oncontextmenu", this.IContextMenuHander);
            window.csMenu$Object = this;
            this.IEventHander = function(){window.csMenu$Object.Hide();};
            document.attachEvent("onmousedown", this.IEventHander);

			var tr = e.srcElement;
            if (tr.nodeName == 'TABLE') return;
            while (tr.nodeName != 'TR') tr = tr.parentNode;
            tr.onclick();
            var tds = tr.cells;
            var h = "<table height=" + tr.height + "px width='120px' cellpadding=0 cellspacing=0  style='border:1 solid buttonface;border:2 outset buttonhighlight;margin-top:-8px;margin-left:-8px;margin-right:-8px;margin-bottom:-8px;'>"; 
            h += "<tr  onMouseOver =\"this.style.backgroundColor='#C4DEFD'\"  onMouseOut =\"this.style.backgroundColor='#FFF'\">";
            for (var i = this.IStartIndex; i < tds.length; i++) {
            	var j = tds[i].outerHTML.indexOf('onclick="') + 9;
				h += tds[i].outerHTML.substring(0, j);
				h += "window.csMenu$Object._iframe.style.display = 'none'; ";
				h += "window.csMenu$Object._menu.style.display = 'none'; ";
				h += tds[i].outerHTML.substring(j);
				if( i < tds.length - 1){
					h += "</tr><tr  onMouseOver =\"this.style.backgroundColor='#C4DEFD'\"  onMouseOut =\"this.style.backgroundColor='#FFF'\" >";
				} 
			}
            h += "</tr></table>"; 
            this._menu.innerHTML = h;             
            this._menu.style.left = e.clientX;
            this._menu.style.top = e.clientY;
            this._menu.style.display = "";
                        
            var ifrmTop = e.clientY;
            var ifrmLeft = e.clientX;
            var ifrmWidth = this._menu.offsetWidth;
            var ifrmHeight = this._menu.offsetHeight;
            
            var scrollHeight = document.body.scrollHeight;
            var scrollWidth = document.body.scrollWidth; 
            if(e.clientY + this._menu.offsetHeight > scrollHeight){
            	 ifrmTop = ifrmTop - ifrmHeight;
            	 this._menu.style.top = ifrmTop;
            }
            
            if(e.clientX + this._menu.offsetWidth > scrollWidth ){
            	ifrmLeft = ifrmLeft - ifrmWidth;
            	this._menu.style.left = ifrmLeft;
            }
            
            this._iframe.style.left = ifrmLeft;
            this._iframe.style.top = ifrmTop;
           	this._iframe.style.height = ifrmHeight;
            this._iframe.style.width = ifrmWidth;
            this._iframe.style.display = "";
            //window.scrollTo(0,document.body.scrollHeight);
            
        }
    };

    this.Hide = function() {
        var e = window.event || event;
        var _element = e.srcElement;
        do {
            if (_element == this._menu)
                return false;
        }
        while ((_element = _element.offsetParent));
		document.detachEvent("on" + e.type, this.IEventHander);
        this._iframe.style.display = "none";
        this._menu.style.display = "none";
		document.detachEvent("oncontextmenu", this.IContextMenuHander);
    };

    this.initialize = function() {  
    	this._object = document.getElementById("mxh");
        window._csMenu$Object = this;
        var _eventHander = function(){window._csMenu$Object.Show();};
        this._object.attachEvent("onmouseup", _eventHander);
		document.getElementById('creating').onpropertychange = function() {
			if (event.propertyName == "style.visibility")
				if (event.srcElement["style"]["visibility"] == "visible") 
					window._csMenu$Object._object.detachEvent("onmouseup", _eventHander);
		}
		document.getElementById('hiddenframe').onreadystatechange = function() {
			if (this.readyState && this.readyState == 'complete') {
				window._csMenu$Object.Hide();
				if(document.getElementById("mxh") != window._csMenu$Object._object) {
					window._csMenu$Object._object = document.getElementById("mxh");
					window._csMenu$Object._object.attachEvent("onmouseup", _eventHander);
					window._csMenu$Object.IStartIndex = document.getElementById("tblHead").rows[0].cells.length - 1;
				}
			}
		}
		this.IStartIndex = document.getElementById("tblHead").rows[0].cells.length - 1;
		
        this._menu = document.createElement('div');
        document.body.insertBefore(this._menu, document.body.firstChild);
        this._menu.setAttribute("id", "menu_div"); 
        this._menu.style.border = "1px solid #cccccc";
        this._menu.style.backgroundColor = "white";
        this._menu.style.padding = "8px";
        this._menu.style.position = "absolute";
     	this._menu.style.display = "none";
     	this._menu.style.zIndex = "1000000";
     	
        this._iframe = document.createElement('iframe');
 	    document.body.insertBefore(this._iframe, document.body.firstChild);
 	    this._iframe.setAttribute("id", "menu_iframe"); 
 	    this._iframe.style.position = "absolute";
        this._iframe.style.display = "none";
        this._iframe.style.zIndex = "999999";
        this._iframe.style.border = "0px";
        this._iframe.style.height = "0px";
        this._iframe.style.width = "0px";    
    };

    this.initialize();
}

document.onreadystatechange = function() {
	if (document.readyState == "complete") {
		var _object = document.getElementById("tblHead");
		if(_object != undefined) {
			var tds = _object.rows[0].cells;
			if(tds[tds.length - 1].innerText == " 操作")
				new csMenu();
		}
	}
}


function getCheckedElement(obj) {
	var vStrType = Object.prototype.toString.apply(obj);
	if (vStrType == "[object String]") {
		var vObjArray = document.getElementsByName(obj);
		if (vObjArray.length > 0) {
			return vObjArray[0];
		}
	} else if (vStrType == "[object Object]") {
		return obj;
	}
	return null;
}

function checkStringLenB(obj,msg,len,needFocus,needSelect){
	var vObj = getCheckedElement(obj);
	if (!vObj) {
		window.alert("参数错误，根据参数 obj 获取不到文档对象。");
		return false;
	}
	
	var vIntLength = len;
	if (len == null) {
		vIntLength = obj.maxLength;
	}
	
	if (null == vIntLength) {
		window.alert("找不到需要检查的最大长度（len 或者 obj.maxLength 其中一个必须要有值）。");
		return false;
	}
	
	var vObjValue = vObj.value;
	vObjValue == (null != vObjValue) ? vObjValue : "";
	
	var vIntStrLengthB = vObjValue.replace(/[\u4e00-\u9fa5]/g, "xx").length;
   	if(vIntStrLengthB > len){
   		window.alert(msg+"的长度超过了"+len+"个字节（汉字占两个字节）。");
   		if (needFocus) vObj.focus();
   		if (needSelect) vObj.select();
   		return false;
   	}
  	return true;
}

// 导出DBF通用方法
var newwin_dbfCommonExport = null;
function commonExport(title, root, fileId, param) {
	if(newwin_dbfCommonExport){
		newwin_dbfCommonExport.close();
	}
	
	htmlurl = root+"/DBFServlet";
	try {
	/*
		var xmlhttp = null;
		if (window.ActiveXObject) {
			xmlhttp = new ActiveXObject("MiCROSOFT.XMLHTTP");
		}
		else {
			xmlhttp = new XMLHttpRequest();
		}
		
		var paramURL = "&fileId=" + fileId;
		for (var prop in param) {
			if (param.hasOwnProperty(prop)) {
				paramURL += "&"+prop+"="+param[prop];
			}
		}
		
		xmlhttp.open("post", htmlurl);
		xmlhttp.setRequestHeader("content-type", "application/x-www-form-urlencoded");
		xmlhttp.send(paramURL);
		xmlhttp.onreadystatechange = function() {
			if (xmlhttp.status == 200) {
				window.alert(xmlhttp.getAllResponseHeaders());
			}
		}
	*/
	
		var oDiv = document.getElementById("commonExportDiv");
		if (oDiv) {
			document.body.removeChild(oDiv);
		}
		oDiv = document.createElement("<div id='commonExportDiv'>");
		oDiv.style.display = "none";

		var oForm = document.createElement("<form name='commonExportForm' method='post'>");
		var oHidden = null;
		for (var prop in param) {
			if (param.hasOwnProperty(prop)) {
				oHidden = document.createElement("<input type='hidden' name='"+prop+"'>");
				oHidden.value = param[prop];
				
				oForm.appendChild(oHidden);
			}
		}
		
		oHidden = document.createElement("<input type='hidden' name='fileId'>");
		oHidden.value = fileId;
		oForm.appendChild(oHidden);
		
		oHidden = document.createElement("<input type='hidden' name='title'>");
		oHidden.value = title;
		oForm.appendChild(oHidden);
				
		var oFrame = document.createElement("<iframe name='commonExportFrame' style='display:none'>");
		oDiv.appendChild(oForm);
		oDiv.appendChild(oFrame);
		document.body.appendChild(oDiv);
		
		document.forms['commonExportForm'].target = "commonExportFrame";
		alert(htmlurl);
		document.forms['commonExportForm'].action = htmlurl;
		document.forms['commonExportForm'].submit();
		
	} catch (e) {
		window.alert(e.description);
	}
}


function mJsMod(htmlurl,tmpWidth,tmpHeight){
	htmlurl=getRandomUrl(htmlurl);
	var newwin = window.showModalDialog(htmlurl,window,"dialogWidth:"+tmpWidth+"px;status:no;resizable:yes;dialogHeight:"+tmpHeight+"px");
	if (newwin != null && newwin == "ok"){
	    window.Form1.action="";
	    window.Form1.submit();	    
	}
}


/*
 *useIsdel 是否启用 isdel，传值true或者其他值，当为true时，系统会自动增加isdel=0的条件。
 */
function checkIsOnlyFrmfcell(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyFrmfcell(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}


/*
 *useIsdel 是否启用 isdel，传值true或者其他值，当为true时，系统会自动增加isdel=0的条件。
 */
function checkIsOnlyGgl(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyGgl(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyGgly(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyGgly(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyFrmr(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyFrmr(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyFrmro(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyFrmro(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyfrmu(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyfrmu(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyjg(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyjg(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyjg01(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyjg01(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyXx(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyXx(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyJx06(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyJx06(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyJx060(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyJx060(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyXx01(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyXx01(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyJx04(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyJx04(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyzc(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyzc(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyzc02(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyzc02(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyXx03(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyXx03(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyXsf(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyXsf(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyJx(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyJx(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyaa(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyaa(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyJx02(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyJx02(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlySj11(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlySj11(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlySj(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlySj(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyCj07(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyCj07(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlycjrd(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlycjrd(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyCj070(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyCj070(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyJx02new(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyJx02new(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyJx02new01(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyJx02new01(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyJ1(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyJ1(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyJy(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyJy(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyJc(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyJc(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyJc01(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyJc01(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyJck(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyJck(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyJc010(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyJc010(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyJc0102(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyJc0102(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyJck03(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyJck03(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyJcbh(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyJcbh(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyJcmc(fieldName,object,msg,submitId,spanId,useIsdel) {
 
	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyJcmc(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyNew(fieldName,object,msg,submitId,spanId,useIsdel) {

	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyNew(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlySk(fieldName,object,msg,submitId,spanId,useIsdel) {

	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlySk(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlySkd(fieldName,object,msg,submitId,spanId,useIsdel) {

	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlySkd(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyJx041(fieldName,object,msg,submitId,spanId,useIsdel) {

	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyJx041(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyKw(fieldName,object,msg,submitId,spanId,useIsdel) {

	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyKw(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyJx030(fieldName,object,msg,submitId,spanId,useIsdel) {

	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyJx030(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlySj03(fieldName,object,msg,submitId,spanId,useIsdel) {

	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlySj03(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlySj030(fieldName,object,msg,submitId,spanId,useIsdel) {

	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlySj030(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlySj0306(fieldName,object,msg,submitId,spanId,useIsdel) {

	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlySj0306(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlySj0605(fieldName,object,msg,submitId,spanId,useIsdel) {

	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlySj0605(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyXs11_s(fieldName,object,msg,submitId,spanId,useIsdel) {

	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	if(isOld){
		dwrMonitor.checkIsOnlyXs11_s(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}

function checkIsOnlyXj(fieldName,object,msg,submitId,spanId,useIsdel) {

	DWREngine.setAsync(false);
	checkonly_spanId = checkonly_spanId + fieldName;
	if(msg!=undefined)
		checkonly_msg = msg;
	if(submitId!=undefined)
		checkonly_submitId = submitId;
	if(spanId!=undefined) 
		checkonly_spanId = spanId;
	var value = object.value;
	var checkonly_oldvalue_temp = fieldName + "$" + trimstr(value);
	var isOld = true;
	for(var kk=0;kk<checkonly_oldvalue.length;kk ++) {
		if(checkonly_oldvalue_temp == checkonly_oldvalue[kk]) {
			isOld = false;
			break;
		}
	}
	
	if(isOld){
		dwrMonitor.checkIsOnlyXj(value,useIsdel,checkOnlyResult);
	} else {
		document.getElementById(checkonly_spanId).innerHTML = "";
		var isCanSubmit = true;
		var checkonly_field_temps = checkonly_field.split(",");
		for(var jj=0;jj<checkonly_field_temps.length;jj++) {
			if(trimstr(checkonly_field_temps[jj]) != "") {
				if(document.getElementById("checkmessage_"+checkonly_field_temps[jj]).innerHTML != "") {
					isCanSubmit = false;
				}
			}
		} 
		if(isCanSubmit) 
			if(document.getElementById(checkonly_submitId)!=null){
				document.getElementById(checkonly_submitId).disabled = false;
			}
			checkonly_spanId = "checkmessage_";
		return false;
	}
	return true;
}


function isIE(){ //ie? 
	if (window.navigator.userAgent.toLowerCase().indexOf("msie")>=1) 
		return true; 
	else 
		return false; 
}


if(!isIE()){ //firefox innerText define 
	HTMLElement.prototype.__defineGetter__( "innerText", 
	function(){ 
		var anyString =""; 
		var childS = this.childNodes; 
		for(var i=0; i<childS.length; i++) { 
			if(childS[i].nodeType==1) 
				anyString += childS[i].tagName=="BR" ? '\n' : childS[i].textContent; 
			else if(childS[i].nodeType==3) 
				anyString += childS[i].nodeValue; 
		} 
		return anyString; 
	}); 
	HTMLElement.prototype.__defineSetter__( "innerText", 
	function(sText){ 
		this.textContent=sText; 
	} ); 
} 

//给系统框架生成的页面，增加行选中事件	by	汪雨驰	2018-11-16
$(document).on("click", ".dataTables_scroll tr", function() {
	if ($(".dataTables_scroll #dataTables input[name='C_Select']").length > 0) {
		$(".dataTables_scroll #dataTables input[name='C_Select']:checked").parent().parent().css("background-color", "#66CCFF");
		$(".dataTables_scroll #dataTables input[name='C_Select']:not(:checked)").parent().parent().css("background-color", "");
	} else {
		$(this).css("background-color", "#66CCFF");
		$(this).siblings().css("background-color", "");
	}
});	


//修复表头表数据错位问题,页脚丢失问题
function checkWidth() {
	var headers = $(".dataTables_scrollHeadInner table:eq(0) tr:eq(0) th");
	var tab = document.getElementById("dataTables");
	var rows = tab.rows;
	headers.each(function(j, header){
		for (var i = 0; i < rows.length; i++) {
			var cells = rows[i].cells;
			cells[j].width = header.style.width;
		}
	});
	
	//页面
	var tag_mainView = $("#tag_mainView");
	var padding = 0;
	if (tag_mainView != undefined) {
		try{
			padding = parseInt(tag_mainView.css("padding-top").replace("px",""));
		}catch(e){
			padding = 0;
		}
	}
	//页面标题
	var main_view_title = $("#main_view_title");
	var main_view_title_height = 0;
	if (main_view_title != undefined) {
		main_view_title_height = main_view_title.outerHeight();
	}
	//搜索框
	var toolAndSearchView = $("#toolAndSearchView");
	var toolAndSearchView_height = 0;
	if (toolAndSearchView != undefined) {
		toolAndSearchView_height = toolAndSearchView.outerHeight();
	}
	
	//显示页面div
	var tag_tshowView = $("#tag_tshowView");
	//更新显示页面的高度
	tag_tshowView.height(tag_mainView.height() - 2 * padding - main_view_title_height - toolAndSearchView_height);
	//显示div
	var dataTables_wrapper = $("#dataTables_wrapper div:eq(0) div:eq(0)");
	
	//页脚div
	var dataTables_info = $("#dataTables_info");
	var dataTables_info_height = 0;
	if (dataTables_info != undefined) {
		dataTables_info_height = toolAndSearchView.outerHeight();
	}
	dataTables_wrapper.height(tag_tshowView.height() - dataTables_info_height);
	
	dataTables_wrapper.find(">div:eq(1)").height(dataTables_wrapper.height() - dataTables_wrapper.find(">div:eq(0)").height());
}

/**
 * 检查字符串是否为空或者undefined
 * @param {Object} objVal
 */
function checkNullOrUndefined(objVal) {
	return objVal == undefined || objVal == "" ? true : false;
}

//特殊字符替换规则
var specialCode = { 'CNM':'**',
					'fuck':'**',
					'&':'&amp;',
					';':'&#59;',
					'<':'&lt;',
					'>':'&gt;',
					'exec':'&#101;xec',
					'xp_cmdshell':'&#120;p_cmdshell',
					'select':'&#115;elect',
					'insert':'&#105;nsert',
					'update':'&#117;pdate',
					'delete':'&#100;elete',
					'drop':'&#100;rop',
					'create':'&#99;reate',
					'rename':'&#114;ename',
					'truncate':'&#116;runcate',
					'alter':'&#97;lter',
					'exists':'&#101;xists',
					'master.':'&#109;aster.',
					'restore':'&#114;estore',
					'from':'&#102;rom',
					'where':'&#119;here',
					'and':'&#97;nd',
					'union':'&#117;nion',
					'grant':'&#103;rant',
					'like':'&#108;ike',
					'or':'&#111;r'
}

//替换特殊字符，因特殊字符传递时，还未经过公司的特殊字符过滤器，就被学校防火墙给拦截了，所以这里在传参之前就处理特殊字符
function escapeForSpecial(str) {
	if (str != "" && str != undefined) {
		for (var prop in specialCode) {
			str = str.replace(new RegExp(prop, 'g'), specialCode[prop]);
		}
	}
	return str;
}

var PinYin = { "a": "\u554a\u963f\u9515", "ai": "\u57c3\u6328\u54ce\u5509\u54c0\u7691\u764c\u853c\u77ee\u827e\u788d\u7231\u9698\u8bf6\u6371\u55f3\u55cc\u5ad2\u7477\u66a7\u7839\u953f\u972d", "an": "\u978d\u6c28\u5b89\u4ffa\u6309\u6697\u5cb8\u80fa\u6848\u8c19\u57ef\u63de\u72b4\u5eb5\u6849\u94f5\u9e4c\u9878\u9eef", "ang": "\u80ae\u6602\u76ce", "ao": "\u51f9\u6556\u71ac\u7ff1\u8884\u50b2\u5965\u61ca\u6fb3\u5773\u62d7\u55f7\u5662\u5c99\u5ed2\u9068\u5aaa\u9a9c\u8071\u87af\u93ca\u9ccc\u93d6", "ba": "\u82ad\u634c\u6252\u53ed\u5427\u7b06\u516b\u75a4\u5df4\u62d4\u8dcb\u9776\u628a\u8019\u575d\u9738\u7f62\u7238\u8307\u83dd\u8406\u636d\u5c9c\u705e\u6777\u94af\u7c91\u9c85\u9b43", "bai": "\u767d\u67cf\u767e\u6446\u4f70\u8d25\u62dc\u7a17\u859c\u63b0\u97b4", "ban": "\u6591\u73ed\u642c\u6273\u822c\u9881\u677f\u7248\u626e\u62cc\u4f34\u74e3\u534a\u529e\u7eca\u962a\u5742\u8c73\u94a3\u7622\u764d\u8228", "bang": "\u90a6\u5e2e\u6886\u699c\u8180\u7ed1\u68d2\u78c5\u868c\u9551\u508d\u8c24\u84a1\u8783", "bao": "\u82de\u80de\u5305\u8912\u96f9\u4fdd\u5821\u9971\u5b9d\u62b1\u62a5\u66b4\u8c79\u9c8d\u7206\u52f9\u8446\u5b80\u5b62\u7172\u9e28\u8913\u8db5\u9f85", "bo": "\u5265\u8584\u73bb\u83e0\u64ad\u62e8\u94b5\u6ce2\u535a\u52c3\u640f\u94c2\u7b94\u4f2f\u5e1b\u8236\u8116\u818a\u6e24\u6cca\u9a73\u4eb3\u8543\u5575\u997d\u6a97\u64d8\u7934\u94b9\u9e41\u7c38\u8ddb", "bei": "\u676f\u7891\u60b2\u5351\u5317\u8f88\u80cc\u8d1d\u94a1\u500d\u72c8\u5907\u60eb\u7119\u88ab\u5b5b\u9642\u90b6\u57e4\u84d3\u5457\u602b\u6096\u789a\u9e4e\u8919\u943e", "ben": "\u5954\u82ef\u672c\u7b28\u755a\u574c\u951b", "beng": "\u5d29\u7ef7\u752d\u6cf5\u8e66\u8ff8\u552a\u5623\u750f", "bi": "\u903c\u9f3b\u6bd4\u9119\u7b14\u5f7c\u78a7\u84d6\u853d\u6bd5\u6bd9\u6bd6\u5e01\u5e87\u75f9\u95ed\u655d\u5f0a\u5fc5\u8f9f\u58c1\u81c2\u907f\u965b\u5315\u4ef3\u4ffe\u8298\u835c\u8378\u5421\u54d4\u72f4\u5eb3\u610e\u6ed7\u6fde\u5f3c\u59a3\u5a62\u5b16\u74a7\u8d32\u7540\u94cb\u79d5\u88e8\u7b5a\u7b85\u7be6\u822d\u895e\u8df8\u9ac0", "bian": "\u97ad\u8fb9\u7f16\u8d2c\u6241\u4fbf\u53d8\u535e\u8fa8\u8fa9\u8fab\u904d\u533e\u5f01\u82c4\u5fed\u6c74\u7f0f\u7178\u782d\u78a5\u7a39\u7a86\u8759\u7b3e\u9cca", "biao": "\u6807\u5f6a\u8198\u8868\u5a4a\u9aa0\u98d1\u98d9\u98da\u706c\u9556\u9573\u762d\u88f1\u9cd4", "bie": "\u9cd6\u618b\u522b\u762a\u8e69\u9cd8", "bin": "\u5f6c\u658c\u6fd2\u6ee8\u5bbe\u6448\u50a7\u6d5c\u7f24\u73a2\u6ba1\u8191\u9554\u9acc\u9b13", "bing": "\u5175\u51b0\u67c4\u4e19\u79c9\u997c\u70b3\u75c5\u5e76\u7980\u90b4\u6452\u7ee0\u678b\u69df\u71f9", "bu": "\u6355\u535c\u54fa\u8865\u57e0\u4e0d\u5e03\u6b65\u7c3f\u90e8\u6016\u62ca\u535f\u900b\u74ff\u6661\u949a\u91ad", "ca": "\u64e6\u5693\u7924", "cai": "\u731c\u88c1\u6750\u624d\u8d22\u776c\u8e29\u91c7\u5f69\u83dc\u8521", "can": "\u9910\u53c2\u8695\u6b8b\u60ed\u60e8\u707f\u9a96\u74a8\u7cb2\u9eea", "cang": "\u82cd\u8231\u4ed3\u6ca7\u85cf\u4f27", "cao": "\u64cd\u7cd9\u69fd\u66f9\u8349\u8279\u5608\u6f15\u87ac\u825a", "ce": "\u5395\u7b56\u4fa7\u518c\u6d4b\u5202\u5e3b\u607b", "ceng": "\u5c42\u8e6d\u564c", "cha": "\u63d2\u53c9\u832c\u8336\u67e5\u78b4\u643d\u5bdf\u5c94\u5dee\u8be7\u7339\u9987\u6c4a\u59f9\u6748\u6942\u69ce\u6aab\u9497\u9538\u9572\u8869", "chai": "\u62c6\u67f4\u8c7a\u4faa\u8308\u7625\u867f\u9f87", "chan": "\u6400\u63ba\u8749\u998b\u8c17\u7f20\u94f2\u4ea7\u9610\u98a4\u5181\u8c04\u8c36\u8487\u5edb\u5fcf\u6f7a\u6fb6\u5b71\u7fbc\u5a75\u5b17\u9aa3\u89c7\u7985\u9561\u88e3\u87fe\u8e94", "chang": "\u660c\u7316\u573a\u5c1d\u5e38\u957f\u507f\u80a0\u5382\u655e\u7545\u5531\u5021\u4f25\u9b2f\u82cc\u83d6\u5f9c\u6005\u60dd\u960a\u5a3c\u5ae6\u6636\u6c05\u9cb3", "chao": "\u8d85\u6284\u949e\u671d\u5632\u6f6e\u5de2\u5435\u7092\u600a\u7ec9\u6641\u8016", "che": "\u8f66\u626f\u64a4\u63a3\u5f7b\u6f88\u577c\u5c6e\u7817", "chen": "\u90f4\u81e3\u8fb0\u5c18\u6668\u5ff1\u6c89\u9648\u8d81\u886c\u79f0\u8c0c\u62bb\u55d4\u5bb8\u741b\u6987\u809c\u80c2\u789c\u9f80", "cheng": "\u6491\u57ce\u6a59\u6210\u5448\u4e58\u7a0b\u60e9\u6f84\u8bda\u627f\u901e\u9a8b\u79e4\u57d5\u5d4a\u5fb5\u6d48\u67a8\u67fd\u6a18\u665f\u584d\u77a0\u94d6\u88ce\u86cf\u9172", "chi": "\u5403\u75f4\u6301\u5319\u6c60\u8fdf\u5f1b\u9a70\u803b\u9f7f\u4f88\u5c3a\u8d64\u7fc5\u65a5\u70bd\u50ba\u5880\u82aa\u830c\u640b\u53f1\u54e7\u557b\u55e4\u5f73\u996c\u6cb2\u5ab8\u6555\u80dd\u7719\u7735\u9e31\u761b\u892b\u86a9\u87ad\u7b1e\u7bea\u8c49\u8e05\u8e1f\u9b51", "chong": "\u5145\u51b2\u866b\u5d07\u5ba0\u833a\u5fe1\u61a7\u94f3\u825f", "chou": "\u62bd\u916c\u7574\u8e0c\u7a20\u6101\u7b79\u4ec7\u7ef8\u7785\u4e11\u4fe6\u5733\u5e31\u60c6\u6eb4\u59af\u7633\u96e0\u9c8b", "chu": "\u81ed\u521d\u51fa\u6a71\u53a8\u8e87\u9504\u96cf\u6ec1\u9664\u695a\u7840\u50a8\u77d7\u6410\u89e6\u5904\u4e8d\u520d\u61b7\u7ecc\u6775\u696e\u6a17\u870d\u8e70\u9edc", "chuan": "\u63e3\u5ddd\u7a7f\u693d\u4f20\u8239\u5598\u4e32\u63be\u821b\u60f4\u9044\u5ddb\u6c1a\u948f\u9569\u8221", "chuang": "\u75ae\u7a97\u5e62\u5e8a\u95ef\u521b\u6006", "chui": "\u5439\u708a\u6376\u9524\u5782\u9672\u68f0\u69cc", "chun": "\u6625\u693f\u9187\u5507\u6df3\u7eaf\u8822\u4fc3\u83bc\u6c8c\u80ab\u6710\u9e51\u877d", "chuo": "\u6233\u7ef0\u851f\u8fb6\u8f8d\u955e\u8e14\u9f8a", "ci": "\u75b5\u8328\u78c1\u96cc\u8f9e\u6148\u74f7\u8bcd\u6b64\u523a\u8d50\u6b21\u8360\u5472\u5d6f\u9e5a\u8785\u7ccd\u8d91", "cong": "\u806a\u8471\u56f1\u5306\u4ece\u4e1b\u506c\u82c1\u6dd9\u9aa2\u742e\u7481\u679e", "cu": "\u51d1\u7c97\u918b\u7c07\u731d\u6b82\u8e59", "cuan": "\u8e7f\u7be1\u7a9c\u6c46\u64ba\u6615\u7228", "cui": "\u6467\u5d14\u50ac\u8106\u7601\u7cb9\u6dec\u7fe0\u8403\u60b4\u7480\u69b1\u96b9", "cun": "\u6751\u5b58\u5bf8\u78cb\u5fd6\u76b4", "cuo": "\u64ae\u6413\u63aa\u632b\u9519\u539d\u811e\u9509\u77ec\u75e4\u9e7e\u8e49\u8e9c", "da": "\u642d\u8fbe\u7b54\u7629\u6253\u5927\u8037\u54d2\u55d2\u601b\u59b2\u75b8\u8921\u7b2a\u977c\u9791", "dai": "\u5446\u6b79\u50a3\u6234\u5e26\u6b86\u4ee3\u8d37\u888b\u5f85\u902e\u6020\u57ed\u7519\u5454\u5cb1\u8fe8\u902f\u9a80\u7ed0\u73b3\u9edb", "dan": "\u803d\u62c5\u4e39\u5355\u90f8\u63b8\u80c6\u65e6\u6c2e\u4f46\u60ee\u6de1\u8bde\u5f39\u86cb\u4ebb\u510b\u5369\u840f\u5556\u6fb9\u6a90\u6b9a\u8d55\u7708\u7605\u8043\u7baa", "dang": "\u5f53\u6321\u515a\u8361\u6863\u8c20\u51fc\u83ea\u5b95\u7800\u94db\u88c6", "dao": "\u5200\u6363\u8e48\u5012\u5c9b\u7977\u5bfc\u5230\u7a3b\u60bc\u9053\u76d7\u53e8\u5541\u5fc9\u6d2e\u6c18\u7118\u5fd1\u7e9b", "de": "\u5fb7\u5f97\u7684\u951d", "deng": "\u8e6c\u706f\u767b\u7b49\u77aa\u51f3\u9093\u5654\u5d9d\u6225\u78f4\u956b\u7c26", "di": "\u5824\u4f4e\u6ef4\u8fea\u654c\u7b1b\u72c4\u6da4\u7fdf\u5ae1\u62b5\u5e95\u5730\u8482\u7b2c\u5e1d\u5f1f\u9012\u7f14\u6c10\u7c74\u8bcb\u8c1b\u90b8\u577b\u839c\u837b\u5600\u5a23\u67e2\u68e3\u89cc\u7825\u78b2\u7747\u955d\u7f9d\u9ab6", "dian": "\u98a0\u6382\u6ec7\u7898\u70b9\u5178\u975b\u57ab\u7535\u4f43\u7538\u5e97\u60e6\u5960\u6dc0\u6bbf\u4e36\u963d\u576b\u57dd\u5dc5\u73b7\u765c\u766b\u7c1f\u8e2e", "diao": "\u7889\u53fc\u96d5\u51cb\u5201\u6389\u540a\u9493\u8c03\u8f7a\u94de\u8729\u7c9c\u8c82", "die": "\u8dcc\u7239\u789f\u8776\u8fed\u8c0d\u53e0\u4f5a\u57a4\u581e\u63f2\u558b\u6e2b\u8f76\u7252\u74de\u8936\u800b\u8e40\u9cbd\u9cce", "ding": "\u4e01\u76ef\u53ee\u9489\u9876\u9f0e\u952d\u5b9a\u8ba2\u4e22\u4ec3\u5576\u738e\u815a\u7887\u753a\u94e4\u7594\u8035\u914a", "dong": "\u4e1c\u51ac\u8463\u61c2\u52a8\u680b\u4f97\u606b\u51bb\u6d1e\u578c\u549a\u5cbd\u5cd2\u5902\u6c21\u80e8\u80f4\u7850\u9e2b", "dou": "\u515c\u6296\u6597\u9661\u8c46\u9017\u75d8\u8538\u94ad\u7aa6\u7aac\u86aa\u7bfc\u9161", "du": "\u90fd\u7763\u6bd2\u728a\u72ec\u8bfb\u5835\u7779\u8d4c\u675c\u9540\u809a\u5ea6\u6e21\u5992\u828f\u561f\u6e0e\u691f\u6a50\u724d\u8839\u7b03\u9ad1\u9ee9", "duan": "\u7aef\u77ed\u953b\u6bb5\u65ad\u7f0e\u5f56\u6934\u7145\u7c16", "dui": "\u5806\u5151\u961f\u5bf9\u603c\u619d\u7893", "dun": "\u58a9\u5428\u8e72\u6566\u987f\u56e4\u949d\u76fe\u9041\u7096\u7818\u7905\u76f9\u9566\u8db8", "duo": "\u6387\u54c6\u591a\u593a\u579b\u8eb2\u6735\u8dfa\u8235\u5241\u60f0\u5815\u5484\u54da\u7f0d\u67c1\u94ce\u88f0\u8e31", "e": "\u86fe\u5ce8\u9e45\u4fc4\u989d\u8bb9\u5a25\u6076\u5384\u627c\u904f\u9102\u997f\u5669\u8c14\u57a9\u57ad\u82ca\u83aa\u843c\u5443\u6115\u5c59\u5a40\u8f6d\u66f7\u816d\u786a\u9507\u9537\u9e57\u989a\u9cc4", "en": "\u6069\u84bd\u6441\u5514\u55ef", "er": "\u800c\u513f\u8033\u5c14\u9975\u6d31\u4e8c\u8d30\u8fe9\u73e5\u94d2\u9e38\u9c95", "fa": "\u53d1\u7f5a\u7b4f\u4f10\u4e4f\u9600\u6cd5\u73d0\u57a1\u781d", "fan": "\u85e9\u5e06\u756a\u7ffb\u6a0a\u77fe\u9492\u7e41\u51e1\u70e6\u53cd\u8fd4\u8303\u8d29\u72af\u996d\u6cdb\u8629\u5e61\u72ad\u68b5\u6535\u71d4\u7548\u8e6f", "fang": "\u574a\u82b3\u65b9\u80aa\u623f\u9632\u59a8\u4eff\u8bbf\u7eba\u653e\u531a\u90a1\u5f77\u94ab\u822b\u9c82", "fei": "\u83f2\u975e\u5561\u98de\u80a5\u532a\u8bfd\u5420\u80ba\u5e9f\u6cb8\u8d39\u82be\u72d2\u60b1\u6ddd\u5983\u7ecb\u7eef\u69a7\u8153\u6590\u6249\u7953\u7829\u9544\u75f1\u871a\u7bda\u7fe1\u970f\u9cb1", "fen": "\u82ac\u915a\u5429\u6c1b\u5206\u7eb7\u575f\u711a\u6c7e\u7c89\u594b\u4efd\u5fff\u6124\u7caa\u507e\u7035\u68fc\u610d\u9cbc\u9f22", "feng": "\u4e30\u5c01\u67ab\u8702\u5cf0\u950b\u98ce\u75af\u70fd\u9022\u51af\u7f1d\u8bbd\u5949\u51e4\u4ff8\u9146\u8451\u6ca3\u781c", "fu": "\u4f5b\u5426\u592b\u6577\u80a4\u5b75\u6276\u62c2\u8f90\u5e45\u6c1f\u7b26\u4f0f\u4fd8\u670d\u6d6e\u6daa\u798f\u88b1\u5f17\u752b\u629a\u8f85\u4fef\u91dc\u65a7\u812f\u8151\u5e9c\u8150\u8d74\u526f\u8986\u8d4b\u590d\u5085\u4ed8\u961c\u7236\u8179\u8d1f\u5bcc\u8ba3\u9644\u5987\u7f1a\u5490\u5310\u51eb\u90db\u8299\u82fb\u832f\u83a9\u83d4\u544b\u5e5e\u6ecf\u8274\u5b5a\u9a78\u7ec2\u6874\u8d59\u9efb\u9efc\u7f58\u7a03\u99a5\u864d\u86a8\u8709\u8760\u876e\u9eb8\u8dba\u8dd7\u9cc6", "ga": "\u5676\u560e\u86e4\u5c2c\u5477\u5c15\u5c1c\u65ee\u9486", "gai": "\u8be5\u6539\u6982\u9499\u76d6\u6e89\u4e10\u9654\u5793\u6224\u8d45\u80f2", "gan": "\u5e72\u7518\u6746\u67d1\u7aff\u809d\u8d76\u611f\u79c6\u6562\u8d63\u5769\u82f7\u5c34\u64c0\u6cd4\u6de6\u6f89\u7ec0\u6a44\u65f0\u77f8\u75b3\u9150", "gang": "\u5188\u521a\u94a2\u7f38\u809b\u7eb2\u5c97\u6e2f\u6206\u7f61\u9883\u7b7b", "gong": "\u6760\u5de5\u653b\u529f\u606d\u9f9a\u4f9b\u8eac\u516c\u5bab\u5f13\u5de9\u6c5e\u62f1\u8d21\u5171\u857b\u5efe\u54a3\u73d9\u80b1\u86a3\u86e9\u89e5", "gao": "\u7bd9\u768b\u9ad8\u818f\u7f94\u7cd5\u641e\u9550\u7a3f\u544a\u777e\u8bf0\u90dc\u84bf\u85c1\u7f1f\u69d4\u69c1\u6772\u9506", "ge": "\u54e5\u6b4c\u6401\u6208\u9e3d\u80f3\u7599\u5272\u9769\u845b\u683c\u9601\u9694\u94ec\u4e2a\u5404\u9b32\u4ee1\u54ff\u5865\u55dd\u7ea5\u643f\u8188\u784c\u94ea\u9549\u88bc\u988c\u867c\u8238\u9abc\u9ac2", "gei": "\u7ed9", "gen": "\u6839\u8ddf\u4e98\u831b\u54cf\u826e", "geng": "\u8015\u66f4\u5e9a\u7fb9\u57c2\u803f\u6897\u54fd\u8d53\u9ca0", "gou": "\u94a9\u52fe\u6c9f\u82df\u72d7\u57a2\u6784\u8d2d\u591f\u4f5d\u8bdf\u5ca3\u9058\u5abe\u7f11\u89cf\u5f40\u9e32\u7b31\u7bdd\u97b2", "gu": "\u8f9c\u83c7\u5495\u7b8d\u4f30\u6cbd\u5b64\u59d1\u9f13\u53e4\u86ca\u9aa8\u8c37\u80a1\u6545\u987e\u56fa\u96c7\u560f\u8bc2\u83f0\u54cc\u5d2e\u6c69\u688f\u8f71\u726f\u727f\u80cd\u81cc\u6bc2\u77bd\u7f5f\u94b4\u9522\u74e0\u9e2a\u9e44\u75fc\u86c4\u9164\u89da\u9cb4\u9ab0\u9e58", "gua": "\u522e\u74dc\u5250\u5be1\u6302\u8902\u5366\u8bd6\u5471\u681d\u9e39", "guai": "\u4e56\u62d0\u602a\u54d9", "guan": "\u68fa\u5173\u5b98\u51a0\u89c2\u7ba1\u9986\u7f50\u60ef\u704c\u8d2f\u500c\u839e\u63bc\u6dab\u76e5\u9e73\u9ccf", "guang": "\u5149\u5e7f\u901b\u72b7\u6844\u80f1\u7592", "gui": "\u7470\u89c4\u572d\u7845\u5f52\u9f9f\u95fa\u8f68\u9b3c\u8be1\u7678\u6842\u67dc\u8dea\u8d35\u523d\u5326\u523f\u5e8b\u5b84\u59ab\u6867\u7085\u6677\u7688\u7c0b\u9c91\u9cdc", "gun": "\u8f8a\u6eda\u68cd\u4e28\u886e\u7ef2\u78d9\u9ca7", "guo": "\u9505\u90ed\u56fd\u679c\u88f9\u8fc7\u9998\u8803\u57da\u63b4\u5459\u56d7\u5e3c\u5d1e\u7313\u6901\u8662\u951e\u8052\u872e\u873e\u8748", "ha": "\u54c8", "hai": "\u9ab8\u5b69\u6d77\u6c26\u4ea5\u5bb3\u9a87\u54b4\u55e8\u988f\u91a2", "han": "\u9163\u61a8\u90af\u97e9\u542b\u6db5\u5bd2\u51fd\u558a\u7f55\u7ff0\u64bc\u634d\u65f1\u61be\u608d\u710a\u6c57\u6c49\u9097\u83e1\u6496\u961a\u701a\u6657\u7113\u9894\u86b6\u9f3e", "hen": "\u592f\u75d5\u5f88\u72e0\u6068", "hang": "\u676d\u822a\u6c86\u7ed7\u73e9\u6841", "hao": "\u58d5\u568e\u8c6a\u6beb\u90dd\u597d\u8017\u53f7\u6d69\u8585\u55e5\u5686\u6fe0\u704f\u660a\u7693\u98a2\u869d", "he": "\u5475\u559d\u8377\u83cf\u6838\u79be\u548c\u4f55\u5408\u76d2\u8c89\u9602\u6cb3\u6db8\u8d6b\u8910\u9e64\u8d3a\u8bc3\u52be\u58d1\u85ff\u55d1\u55ec\u9616\u76cd\u86b5\u7fee", "hei": "\u563f\u9ed1", "heng": "\u54fc\u4ea8\u6a2a\u8861\u6052\u8a07\u8605", "hong": "\u8f70\u54c4\u70d8\u8679\u9e3f\u6d2a\u5b8f\u5f18\u7ea2\u9ec9\u8ba7\u836d\u85a8\u95f3\u6cd3", "hou": "\u5589\u4faf\u7334\u543c\u539a\u5019\u540e\u5820\u5f8c\u9005\u760a\u7bcc\u7cc7\u9c8e\u9aba", "hu": "\u547c\u4e4e\u5ffd\u745a\u58f6\u846b\u80e1\u8774\u72d0\u7cca\u6e56\u5f27\u864e\u552c\u62a4\u4e92\u6caa\u6237\u51b1\u553f\u56eb\u5cb5\u7322\u6019\u60da\u6d52\u6ef9\u7425\u69f2\u8f77\u89f3\u70c0\u7173\u623d\u6248\u795c\u9e55\u9e71\u7b0f\u9190\u659b", "hua": "\u82b1\u54d7\u534e\u733e\u6ed1\u753b\u5212\u5316\u8bdd\u5290\u6d4d\u9a85\u6866\u94e7\u7a1e", "huai": "\u69d0\u5f8a\u6000\u6dee\u574f\u8fd8\u8e1d", "huan": "\u6b22\u73af\u6853\u7f13\u6362\u60a3\u5524\u75ea\u8c62\u7115\u6da3\u5ba6\u5e7b\u90c7\u5942\u57b8\u64d0\u571c\u6d39\u6d63\u6f36\u5bf0\u902d\u7f33\u953e\u9ca9\u9b1f", "huang": "\u8352\u614c\u9ec4\u78fa\u8757\u7c27\u7687\u51f0\u60f6\u714c\u6643\u5e4c\u604d\u8c0e\u968d\u5fa8\u6e5f\u6f62\u9051\u749c\u8093\u7640\u87e5\u7bc1\u9cc7", "hui": "\u7070\u6325\u8f89\u5fbd\u6062\u86d4\u56de\u6bc1\u6094\u6167\u5349\u60e0\u6666\u8d3f\u79fd\u4f1a\u70e9\u6c47\u8bb3\u8bf2\u7ed8\u8bd9\u8334\u835f\u8559\u54d5\u5599\u96b3\u6d04\u5f57\u7f0b\u73f2\u6656\u605a\u867a\u87ea\u9ebe", "hun": "\u8364\u660f\u5a5a\u9b42\u6d51\u6df7\u8be8\u9984\u960d\u6eb7\u7f17", "huo": "\u8c41\u6d3b\u4f19\u706b\u83b7\u6216\u60d1\u970d\u8d27\u7978\u6509\u56af\u5925\u94ac\u952a\u956c\u8020\u8816", "ji": "\u51fb\u573e\u57fa\u673a\u7578\u7a3d\u79ef\u7b95\u808c\u9965\u8ff9\u6fc0\u8ba5\u9e21\u59ec\u7ee9\u7f09\u5409\u6781\u68d8\u8f91\u7c4d\u96c6\u53ca\u6025\u75be\u6c72\u5373\u5ac9\u7ea7\u6324\u51e0\u810a\u5df1\u84df\u6280\u5180\u5b63\u4f0e\u796d\u5242\u60b8\u6d4e\u5bc4\u5bc2\u8ba1\u8bb0\u65e2\u5fcc\u9645\u5993\u7ee7\u7eaa\u5c45\u4e0c\u4e69\u525e\u4f76\u4f74\u8114\u58bc\u82a8\u82b0\u8401\u84ba\u857a\u638e\u53fd\u54ad\u54dc\u5527\u5c8c\u5d74\u6d0e\u5f50\u5c50\u9aa5\u757f\u7391\u696b\u6b9b\u621f\u6222\u8d4d\u89ca\u7284\u9f51\u77f6\u7f81\u5d47\u7a37\u7620\u7635\u866e\u7b08\u7b04\u66a8\u8dfb\u8dfd\u9701\u9c9a\u9cab\u9afb\u9e82", "jia": "\u5609\u67b7\u5939\u4f73\u5bb6\u52a0\u835a\u988a\u8d3e\u7532\u94be\u5047\u7a3c\u4ef7\u67b6\u9a7e\u5ac1\u4f3d\u90cf\u62ee\u5cac\u6d43\u8fe6\u73c8\u621b\u80db\u605d\u94d7\u9553\u75c2\u86f1\u7b33\u8888\u8dcf", "jian": "\u6b7c\u76d1\u575a\u5c16\u7b3a\u95f4\u714e\u517c\u80a9\u8270\u5978\u7f04\u8327\u68c0\u67ec\u78b1\u7877\u62e3\u6361\u7b80\u4fed\u526a\u51cf\u8350\u69db\u9274\u8df5\u8d31\u89c1\u952e\u7bad\u4ef6\u5065\u8230\u5251\u996f\u6e10\u6e85\u6da7\u5efa\u50ed\u8c0f\u8c2b\u83c5\u84b9\u641b\u56dd\u6e54\u8e47\u8b07\u7f23\u67a7\u67d9\u6957\u620b\u622c\u726e\u728d\u6bfd\u8171\u7751\u950f\u9e63\u88e5\u7b15\u7bb4\u7fe6\u8dbc\u8e3a\u9ca3\u97af", "jiang": "\u50f5\u59dc\u5c06\u6d46\u6c5f\u7586\u848b\u6868\u5956\u8bb2\u5320\u9171\u964d\u8333\u6d1a\u7edb\u7f30\u729f\u7913\u8029\u7ce8\u8c47", "jiao": "\u8549\u6912\u7901\u7126\u80f6\u4ea4\u90ca\u6d47\u9a84\u5a07\u56bc\u6405\u94f0\u77eb\u4fa5\u811a\u72e1\u89d2\u997a\u7f34\u7ede\u527f\u6559\u9175\u8f7f\u8f83\u53eb\u4f7c\u50ec\u832d\u6322\u564d\u5ce4\u5fbc\u59e3\u7e9f\u656b\u768e\u9e6a\u86df\u91ae\u8de4\u9c9b", "jie": "\u7a96\u63ed\u63a5\u7686\u79f8\u8857\u9636\u622a\u52ab\u8282\u6854\u6770\u6377\u776b\u7aed\u6d01\u7ed3\u89e3\u59d0\u6212\u85c9\u82a5\u754c\u501f\u4ecb\u75a5\u8beb\u5c4a\u5048\u8ba6\u8bd8\u5588\u55df\u736c\u5a55\u5b51\u6840\u7352\u78a3\u9534\u7596\u88b7\u9889\u86a7\u7faf\u9c92\u9ab1\u9aeb", "jin": "\u5dfe\u7b4b\u65a4\u91d1\u4eca\u6d25\u895f\u7d27\u9526\u4ec5\u8c28\u8fdb\u9773\u664b\u7981\u8fd1\u70ec\u6d78\u5c3d\u537a\u8369\u5807\u5664\u9991\u5ed1\u5997\u7f19\u747e\u69ff\u8d46\u89d0\u9485\u9513\u887f\u77dc", "jing": "\u52b2\u8346\u5162\u830e\u775b\u6676\u9cb8\u4eac\u60ca\u7cbe\u7cb3\u7ecf\u4e95\u8b66\u666f\u9888\u9759\u5883\u656c\u955c\u5f84\u75c9\u9756\u7adf\u7ade\u51c0\u522d\u5106\u9631\u83c1\u734d\u61ac\u6cfe\u8ff3\u5f2a\u5a67\u80bc\u80eb\u8148\u65cc", "jiong": "\u70af\u7a98\u5182\u8fe5\u6243", "jiu": "\u63ea\u7a76\u7ea0\u7396\u97ed\u4e45\u7078\u4e5d\u9152\u53a9\u6551\u65e7\u81fc\u8205\u548e\u5c31\u759a\u50e6\u557e\u9604\u67e9\u6855\u9e6b\u8d73\u9b0f", "ju": "\u97a0\u62d8\u72d9\u75bd\u9a79\u83ca\u5c40\u5480\u77e9\u4e3e\u6cae\u805a\u62d2\u636e\u5de8\u5177\u8ddd\u8e1e\u952f\u4ff1\u53e5\u60e7\u70ac\u5267\u5028\u8bb5\u82e3\u82f4\u8392\u63ac\u907d\u5c66\u741a\u67b8\u6910\u6998\u6989\u6a58\u728b\u98d3\u949c\u9514\u7aad\u88fe\u8d84\u91b5\u8e3d\u9f83\u96ce\u97ab", "juan": "\u6350\u9e43\u5a1f\u5026\u7737\u5377\u7ee2\u9104\u72f7\u6d93\u684a\u8832\u9529\u954c\u96bd", "jue": "\u6485\u652b\u6289\u6398\u5014\u7235\u89c9\u51b3\u8bc0\u7edd\u53a5\u5282\u8c32\u77cd\u8568\u5658\u5d1b\u7357\u5b53\u73cf\u6877\u6a5b\u721d\u9562\u8e76\u89d6", "jun": "\u5747\u83cc\u94a7\u519b\u541b\u5cfb\u4fca\u7ae3\u6d5a\u90e1\u9a8f\u6343\u72fb\u76b2\u7b60\u9e87", "ka": "\u5580\u5496\u5361\u4f67\u5494\u80e9", "ke": "\u54af\u5777\u82db\u67ef\u68f5\u78d5\u9897\u79d1\u58f3\u54b3\u53ef\u6e34\u514b\u523b\u5ba2\u8bfe\u5ca2\u606a\u6e98\u9a92\u7f02\u73c2\u8f72\u6c2a\u778c\u94b6\u75b4\u7aa0\u874c\u9ac1", "kai": "\u5f00\u63e9\u6977\u51ef\u6168\u5240\u57b2\u8488\u5ffe\u607a\u94e0\u950e", "kan": "\u520a\u582a\u52d8\u574e\u780d\u770b\u4f83\u51f5\u83b0\u83b6\u6221\u9f9b\u77b0", "kang": "\u5eb7\u6177\u7ce0\u625b\u6297\u4ea2\u7095\u5751\u4f09\u95f6\u94aa", "kao": "\u8003\u62f7\u70e4\u9760\u5c3b\u6832\u7292\u94d0", "ken": "\u80af\u5543\u57a6\u6073\u57a0\u88c9\u9880", "keng": "\u542d\u5fd0\u94ff", "kong": "\u7a7a\u6050\u5b54\u63a7\u5025\u5d06\u7b9c", "kou": "\u62a0\u53e3\u6263\u5bc7\u82a4\u853b\u53e9\u770d\u7b58", "ku": "\u67af\u54ed\u7a9f\u82e6\u9177\u5e93\u88e4\u5233\u5800\u55be\u7ed4\u9ab7", "kua": "\u5938\u57ae\u630e\u8de8\u80ef\u4f89", "kuai": "\u5757\u7b77\u4fa9\u5feb\u84af\u90d0\u8489\u72ef\u810d", "kuan": "\u5bbd\u6b3e\u9acb", "kuang": "\u5321\u7b50\u72c2\u6846\u77ff\u7736\u65f7\u51b5\u8bd3\u8bf3\u909d\u5739\u593c\u54d0\u7ea9\u8d36", "kui": "\u4e8f\u76d4\u5cbf\u7aa5\u8475\u594e\u9b41\u5080\u9988\u6127\u6e83\u9997\u532e\u5914\u9697\u63c6\u55b9\u559f\u609d\u6126\u9615\u9035\u668c\u777d\u8069\u8770\u7bd1\u81fe\u8dec", "kun": "\u5764\u6606\u6346\u56f0\u6083\u9603\u7428\u951f\u918c\u9cb2\u9ae1", "kuo": "\u62ec\u6269\u5ed3\u9614\u86de", "la": "\u5783\u62c9\u5587\u8721\u814a\u8fa3\u5566\u524c\u647a\u908b\u65ef\u782c\u760c", "lai": "\u83b1\u6765\u8d56\u5d03\u5f95\u6d9e\u6fd1\u8d49\u7750\u94fc\u765e\u7c41", "lan": "\u84dd\u5a6a\u680f\u62e6\u7bee\u9611\u5170\u6f9c\u8c30\u63fd\u89c8\u61d2\u7f06\u70c2\u6ee5\u5549\u5c9a\u61d4\u6f24\u6984\u6593\u7f71\u9567\u8934", "lang": "\u7405\u6994\u72fc\u5eca\u90ce\u6717\u6d6a\u83a8\u8497\u5577\u9606\u9512\u7a02\u8782", "lao": "\u635e\u52b3\u7262\u8001\u4f6c\u59e5\u916a\u70d9\u6d9d\u5520\u5d02\u6833\u94d1\u94f9\u75e8\u91aa", "le": "\u52d2\u4e50\u808b\u4ec2\u53fb\u561e\u6cd0\u9cd3", "lei": "\u96f7\u956d\u857e\u78ca\u7d2f\u5121\u5792\u64c2\u7c7b\u6cea\u7fb8\u8bd4\u837d\u54a7\u6f2f\u5ad8\u7f27\u6a91\u8012\u9179", "ling": "\u68f1\u51b7\u62ce\u73b2\u83f1\u96f6\u9f84\u94c3\u4f36\u7f9a\u51cc\u7075\u9675\u5cad\u9886\u53e6\u4ee4\u9143\u5844\u82d3\u5464\u56f9\u6ce0\u7eeb\u67c3\u68c2\u74f4\u8046\u86c9\u7fce\u9cae", "leng": "\u695e\u6123", "li": "\u5398\u68a8\u7281\u9ece\u7bf1\u72f8\u79bb\u6f13\u7406\u674e\u91cc\u9ca4\u793c\u8389\u8354\u540f\u6817\u4e3d\u5389\u52b1\u783e\u5386\u5229\u5088\u4f8b\u4fd0\u75e2\u7acb\u7c92\u6ca5\u96b6\u529b\u7483\u54e9\u4fea\u4fda\u90e6\u575c\u82c8\u8385\u84e0\u85dc\u6369\u5456\u5533\u55b1\u7301\u6ea7\u6fa7\u9026\u5a0c\u5ae0\u9a8a\u7f21\u73de\u67a5\u680e\u8f79\u623e\u783a\u8a48\u7f79\u9502\u9e42\u75a0\u75ac\u86ce\u870a\u8821\u7b20\u7be5\u7c9d\u91b4\u8dde\u96f3\u9ca1\u9ce2\u9ee7", "lian": "\u4fe9\u8054\u83b2\u8fde\u9570\u5ec9\u601c\u6d9f\u5e18\u655b\u8138\u94fe\u604b\u70bc\u7ec3\u631b\u8539\u5941\u6f4b\u6fc2\u5a08\u740f\u695d\u6b93\u81c1\u81a6\u88e2\u880a\u9ca2", "liang": "\u7cae\u51c9\u6881\u7cb1\u826f\u4e24\u8f86\u91cf\u667e\u4eae\u8c05\u589a\u690b\u8e09\u9753\u9b49", "liao": "\u64a9\u804a\u50da\u7597\u71ce\u5be5\u8fbd\u6f66\u4e86\u6482\u9563\u5ed6\u6599\u84fc\u5c25\u5639\u7360\u5bee\u7f2d\u948c\u9e69\u8022", "lie": "\u5217\u88c2\u70c8\u52a3\u730e\u51bd\u57d2\u6d0c\u8d94\u8e90\u9b23", "lin": "\u7433\u6797\u78f7\u9716\u4e34\u90bb\u9cde\u6dcb\u51db\u8d41\u541d\u853a\u5d99\u5eea\u9074\u6aa9\u8f9a\u77b5\u7cbc\u8e8f\u9e9f", "liu": "\u6e9c\u7409\u69b4\u786b\u998f\u7559\u5218\u7624\u6d41\u67f3\u516d\u62a1\u507b\u848c\u6cd6\u6d4f\u905b\u9a9d\u7efa\u65d2\u7198\u950d\u954f\u9e68\u938f", "long": "\u9f99\u804b\u5499\u7b3c\u7abf\u9686\u5784\u62e2\u9647\u5f04\u5785\u830f\u6cf7\u73d1\u680a\u80e7\u783b\u7643", "lou": "\u697c\u5a04\u6402\u7bd3\u6f0f\u964b\u55bd\u5d5d\u9542\u7618\u8027\u877c\u9ac5", "lu": "\u82a6\u5362\u9885\u5e90\u7089\u63b3\u5364\u864f\u9c81\u9e93\u788c\u9732\u8def\u8d42\u9e7f\u6f5e\u7984\u5f55\u9646\u622e\u5786\u6445\u64b8\u565c\u6cf8\u6e0c\u6f09\u7490\u680c\u6a79\u8f73\u8f82\u8f98\u6c07\u80ea\u9565\u9e2c\u9e6d\u7c0f\u823b\u9c88", "lv": "\u9a74\u5415\u94dd\u4fa3\u65c5\u5c65\u5c61\u7f15\u8651\u6c2f\u5f8b\u7387\u6ee4\u7eff\u634b\u95fe\u6988\u8182\u7a06\u891b", "luan": "\u5ce6\u5b6a\u6ee6\u5375\u4e71\u683e\u9e3e\u92ae", "lue": "\u63a0\u7565\u950a", "lun": "\u8f6e\u4f26\u4ed1\u6ca6\u7eb6\u8bba\u56f5", "luo": "\u841d\u87ba\u7f57\u903b\u9523\u7ba9\u9aa1\u88f8\u843d\u6d1b\u9a86\u7edc\u502e\u8366\u645e\u7321\u6cfa\u6924\u8136\u9559\u7630\u96d2", "ma": "\u5988\u9ebb\u739b\u7801\u8682\u9a6c\u9a82\u561b\u5417\u551b\u72b8\u5b37\u6769\u9ebd", "mai": "\u57cb\u4e70\u9ea6\u5356\u8fc8\u8109\u52a2\u836c\u54aa\u973e", "man": "\u7792\u9992\u86ee\u6ee1\u8513\u66fc\u6162\u6f2b\u8c29\u5881\u5e54\u7f26\u71b3\u9558\u989f\u87a8\u9cd7\u9794", "mang": "\u8292\u832b\u76f2\u5fd9\u83bd\u9099\u6f2d\u6726\u786d\u87d2", "meng": "\u6c13\u840c\u8499\u6aac\u76df\u9530\u731b\u68a6\u5b5f\u52d0\u750d\u77a2\u61f5\u791e\u867b\u8722\u8813\u824b\u8268\u9efe", "miao": "\u732b\u82d7\u63cf\u7784\u85d0\u79d2\u6e3a\u5e99\u5999\u55b5\u9088\u7f08\u7f2a\u676a\u6dfc\u7707\u9e4b\u8731", "mao": "\u8305\u951a\u6bdb\u77db\u94c6\u536f\u8302\u5192\u5e3d\u8c8c\u8d38\u4f94\u88a4\u52d6\u8306\u5cc1\u7441\u6634\u7266\u8004\u65c4\u61cb\u7780\u86d1\u8765\u87ca\u9ae6", "me": "\u4e48", "mei": "\u73ab\u679a\u6885\u9176\u9709\u7164\u6ca1\u7709\u5a92\u9541\u6bcf\u7f8e\u6627\u5bd0\u59b9\u5a9a\u5776\u8393\u5d4b\u7338\u6d7c\u6e44\u6963\u9545\u9e5b\u8882\u9b45", "men": "\u95e8\u95f7\u4eec\u626a\u739f\u7116\u61d1\u9494", "mi": "\u772f\u919a\u9761\u7cdc\u8ff7\u8c1c\u5f25\u7c73\u79d8\u89c5\u6ccc\u871c\u5bc6\u5e42\u8288\u5196\u8c27\u863c\u5627\u7315\u736f\u6c68\u5b93\u5f2d\u8112\u6549\u7cf8\u7e3b\u9e8b", "mian": "\u68c9\u7720\u7ef5\u5195\u514d\u52c9\u5a29\u7f05\u9762\u6c94\u6e4e\u817c\u7704", "mie": "\u8511\u706d\u54a9\u881b\u7bfe", "min": "\u6c11\u62bf\u76bf\u654f\u60af\u95fd\u82e0\u5cb7\u95f5\u6cef\u73c9", "ming": "\u660e\u879f\u9e23\u94ed\u540d\u547d\u51a5\u8317\u6e9f\u669d\u7791\u9169", "miu": "\u8c2c", "mo": "\u6478\u6479\u8611\u6a21\u819c\u78e8\u6469\u9b54\u62b9\u672b\u83ab\u58a8\u9ed8\u6cab\u6f20\u5bde\u964c\u8c1f\u8309\u84e6\u998d\u5aeb\u9546\u79e3\u763c\u8031\u87c6\u8c8a\u8c98", "mou": "\u8c0b\u725f\u67d0\u53b6\u54de\u5a7a\u7738\u936a", "mu": "\u62c7\u7261\u4ea9\u59c6\u6bcd\u5893\u66ae\u5e55\u52df\u6155\u6728\u76ee\u7766\u7267\u7a46\u4eeb\u82dc\u5452\u6c90\u6bea\u94bc", "na": "\u62ff\u54ea\u5450\u94a0\u90a3\u5a1c\u7eb3\u5185\u637a\u80ad\u954e\u8872\u7bac", "nai": "\u6c16\u4e43\u5976\u8010\u5948\u9f10\u827f\u8418\u67f0", "nan": "\u5357\u7537\u96be\u56ca\u5583\u56e1\u6960\u8169\u877b\u8d67", "nao": "\u6320\u8111\u607c\u95f9\u5b6c\u57b4\u7331\u7459\u7847\u94d9\u86f2", "ne": "\u6dd6\u5462\u8bb7", "nei": "\u9981", "nen": "\u5ae9\u80fd\u6798\u6041", "ni": "\u59ae\u9713\u502a\u6ce5\u5c3c\u62df\u4f60\u533f\u817b\u9006\u6eba\u4f32\u576d\u730a\u6029\u6ee0\u6635\u65ce\u7962\u615d\u7768\u94cc\u9cb5", "nian": "\u852b\u62c8\u5e74\u78be\u64b5\u637b\u5ff5\u5eff\u8f87\u9ecf\u9c87\u9cb6", "niang": "\u5a18\u917f", "niao": "\u9e1f\u5c3f\u8311\u5b32\u8132\u8885", "nie": "\u634f\u8042\u5b7d\u556e\u954a\u954d\u6d85\u4e5c\u9667\u8616\u55eb\u8080\u989e\u81ec\u8e51", "nin": "\u60a8\u67e0", "ning": "\u72de\u51dd\u5b81\u62e7\u6cde\u4f5e\u84e5\u549b\u752f\u804d", "niu": "\u725b\u626d\u94ae\u7ebd\u72c3\u5ff8\u599e\u86b4", "nong": "\u8113\u6d53\u519c\u4fac", "nu": "\u5974\u52aa\u6012\u5476\u5e11\u5f29\u80ec\u5b65\u9a7d", "nv": "\u5973\u6067\u9495\u8844", "nuan": "\u6696", "nuenue": "\u8650", "nue": "\u759f\u8c11", "nuo": "\u632a\u61e6\u7cef\u8bfa\u50a9\u6426\u558f\u9518", "ou": "\u54e6\u6b27\u9e25\u6bb4\u85d5\u5455\u5076\u6ca4\u6004\u74ef\u8026", "pa": "\u556a\u8db4\u722c\u5e15\u6015\u7436\u8469\u7b62", "pai": "\u62cd\u6392\u724c\u5f98\u6e43\u6d3e\u4ff3\u848e", "pan": "\u6500\u6f58\u76d8\u78d0\u76fc\u7554\u5224\u53db\u723f\u6cee\u88a2\u897b\u87e0\u8e52", "pang": "\u4e53\u5e9e\u65c1\u802a\u80d6\u6ec2\u9004", "pao": "\u629b\u5486\u5228\u70ae\u888d\u8dd1\u6ce1\u530f\u72cd\u5e96\u812c\u75b1", "pei": "\u5478\u80da\u57f9\u88f4\u8d54\u966a\u914d\u4f69\u6c9b\u638a\u8f94\u5e14\u6de0\u65c6\u952b\u9185\u9708", "pen": "\u55b7\u76c6\u6e53", "peng": "\u7830\u62a8\u70f9\u6f8e\u5f6d\u84ec\u68da\u787c\u7bf7\u81a8\u670b\u9e4f\u6367\u78b0\u576f\u580b\u562d\u6026\u87db", "pi": "\u7812\u9739\u6279\u62ab\u5288\u7435\u6bd7\u5564\u813e\u75b2\u76ae\u5339\u75de\u50fb\u5c41\u8b6c\u4e15\u9674\u90b3\u90eb\u572e\u9f19\u64d7\u567c\u5e80\u5ab2\u7eb0\u6787\u7513\u7765\u7f74\u94cd\u75e6\u7656\u758b\u868d\u8c94", "pian": "\u7bc7\u504f\u7247\u9a97\u8c1d\u9a88\u728f\u80fc\u890a\u7fe9\u8e41", "piao": "\u98d8\u6f02\u74e2\u7968\u527d\u560c\u5ad6\u7f25\u6b8d\u779f\u87b5", "pie": "\u6487\u77a5\u4e3f\u82e4\u6c15", "pin": "\u62fc\u9891\u8d2b\u54c1\u8058\u62da\u59d8\u5ad4\u6980\u725d\u98a6", "ping": "\u4e52\u576a\u82f9\u840d\u5e73\u51ed\u74f6\u8bc4\u5c4f\u4fdc\u5a09\u67b0\u9c86", "po": "\u5761\u6cfc\u9887\u5a46\u7834\u9b44\u8feb\u7c95\u53f5\u9131\u6ea5\u73c0\u948b\u94b7\u76a4\u7b38", "pou": "\u5256\u88d2\u8e23", "pu": "\u6251\u94fa\u4ec6\u8386\u8461\u83e9\u84b2\u57d4\u6734\u5703\u666e\u6d66\u8c31\u66dd\u7011\u530d\u5657\u6fee\u749e\u6c06\u9564\u9568\u8e7c", "qi": "\u671f\u6b3a\u6816\u621a\u59bb\u4e03\u51c4\u6f06\u67d2\u6c8f\u5176\u68cb\u5947\u6b67\u7566\u5d0e\u8110\u9f50\u65d7\u7948\u7941\u9a91\u8d77\u5c82\u4e5e\u4f01\u542f\u5951\u780c\u5668\u6c14\u8fc4\u5f03\u6c7d\u6ce3\u8bab\u4e9f\u4e93\u573b\u8291\u840b\u847a\u5601\u5c7a\u5c90\u6c54\u6dc7\u9a90\u7eee\u742a\u7426\u675e\u6864\u69ed\u6b39\u797a\u61a9\u789b\u86f4\u871e\u7da6\u7dae\u8dbf\u8e4a\u9ccd\u9e92", "qia": "\u6390\u6070\u6d3d\u845c", "qian": "\u7275\u6266\u948e\u94c5\u5343\u8fc1\u7b7e\u4edf\u8c26\u4e7e\u9ed4\u94b1\u94b3\u524d\u6f5c\u9063\u6d45\u8c34\u5811\u5d4c\u6b20\u6b49\u4f65\u9621\u828a\u82a1\u8368\u63ae\u5c8d\u60ad\u614a\u9a9e\u6434\u8930\u7f31\u6920\u80b7\u6106\u94a4\u8654\u7b9d", "qiang": "\u67aa\u545b\u8154\u7f8c\u5899\u8537\u5f3a\u62a2\u5af1\u6a2f\u6217\u709d\u9516\u9535\u956a\u8941\u8723\u7f9f\u8deb\u8dc4", "qiao": "\u6a47\u9539\u6572\u6084\u6865\u77a7\u4e54\u4fa8\u5de7\u9798\u64ac\u7fd8\u5ced\u4fcf\u7a8d\u5281\u8bee\u8c2f\u835e\u6100\u6194\u7f32\u6a35\u6bf3\u7857\u8df7\u9792", "qie": "\u5207\u8304\u4e14\u602f\u7a83\u90c4\u553c\u60ec\u59be\u6308\u9532\u7ba7", "qin": "\u94a6\u4fb5\u4eb2\u79e6\u7434\u52e4\u82b9\u64d2\u79bd\u5bdd\u6c81\u82a9\u84c1\u8572\u63ff\u5423\u55ea\u5659\u6eb1\u6a8e\u8793\u887e", "qing": "\u9752\u8f7b\u6c22\u503e\u537f\u6e05\u64ce\u6674\u6c30\u60c5\u9877\u8bf7\u5e86\u5029\u82d8\u570a\u6aa0\u78ec\u873b\u7f44\u7b90\u8b26\u9cad\u9ee5", "qiong": "\u743c\u7a77\u909b\u8315\u7a79\u7b47\u928e", "qiu": "\u79cb\u4e18\u90b1\u7403\u6c42\u56da\u914b\u6cc5\u4fc5\u6c3d\u5def\u827d\u72b0\u6e6b\u9011\u9052\u6978\u8d47\u9e20\u866c\u86af\u8764\u88d8\u7cd7\u9cc5\u9f3d", "qu": "\u8d8b\u533a\u86c6\u66f2\u8eaf\u5c48\u9a71\u6e20\u53d6\u5a36\u9f8b\u8da3\u53bb\u8bce\u52ac\u8556\u8627\u5c96\u8862\u9612\u74a9\u89d1\u6c0d\u795b\u78f2\u766f\u86d0\u883c\u9eb4\u77bf\u9ee2", "quan": "\u5708\u98a7\u6743\u919b\u6cc9\u5168\u75ca\u62f3\u72ac\u5238\u529d\u8be0\u8343\u737e\u609b\u7efb\u8f81\u754e\u94e8\u8737\u7b4c\u9b08", "que": "\u7f3a\u7094\u7638\u5374\u9e4a\u69b7\u786e\u96c0\u9619\u60ab", "qun": "\u88d9\u7fa4\u9021", "ran": "\u7136\u71c3\u5189\u67d3\u82d2\u9aef", "rang": "\u74e4\u58e4\u6518\u56b7\u8ba9\u79b3\u7a70", "rao": "\u9976\u6270\u7ed5\u835b\u5a06\u6861", "ruo": "\u60f9\u82e5\u5f31", "re": "\u70ed\u504c", "ren": "\u58ec\u4ec1\u4eba\u5fcd\u97e7\u4efb\u8ba4\u5203\u598a\u7eab\u4ede\u834f\u845a\u996a\u8f6b\u7a14\u887d", "reng": "\u6254\u4ecd", "ri": "\u65e5", "rong": "\u620e\u8338\u84c9\u8363\u878d\u7194\u6eb6\u5bb9\u7ed2\u5197\u5d58\u72e8\u7f1b\u6995\u877e", "rou": "\u63c9\u67d4\u8089\u7cc5\u8e42\u97a3", "ru": "\u8339\u8815\u5112\u5b7a\u5982\u8fb1\u4e73\u6c5d\u5165\u8925\u84d0\u85b7\u5685\u6d33\u6ebd\u6fe1\u94f7\u8966\u98a5", "ruan": "\u8f6f\u962e\u670a", "rui": "\u854a\u745e\u9510\u82ae\u8564\u777f\u868b", "run": "\u95f0\u6da6", "sa": "\u6492\u6d12\u8428\u5345\u4ee8\u6332\u98d2", "sai": "\u816e\u9cc3\u585e\u8d5b\u567b", "san": "\u4e09\u53c1\u4f1e\u6563\u5f61\u9993\u6c35\u6bf5\u7cc1\u9730", "sang": "\u6851\u55d3\u4e27\u6421\u78c9\u98a1", "sao": "\u6414\u9a9a\u626b\u5ac2\u57fd\u81ca\u7619\u9ccb", "se": "\u745f\u8272\u6da9\u556c\u94e9\u94ef\u7a51", "sen": "\u68ee", "seng": "\u50e7", "sha": "\u838e\u7802\u6740\u5239\u6c99\u7eb1\u50bb\u5565\u715e\u810e\u6b43\u75e7\u88df\u970e\u9ca8", "shai": "\u7b5b\u6652\u917e", "shan": "\u73ca\u82eb\u6749\u5c71\u5220\u717d\u886b\u95ea\u9655\u64c5\u8d61\u81b3\u5584\u6c55\u6247\u7f2e\u5261\u8baa\u912f\u57cf\u829f\u6f78\u59d7\u9a9f\u81bb\u9490\u759d\u87ee\u8222\u8dda\u9cdd", "shang": "\u5892\u4f24\u5546\u8d4f\u664c\u4e0a\u5c1a\u88f3\u57a7\u7ef1\u6b87\u71b5\u89de", "shao": "\u68a2\u634e\u7a0d\u70e7\u828d\u52fa\u97f6\u5c11\u54e8\u90b5\u7ecd\u52ad\u82d5\u6f72\u86f8\u7b24\u7b72\u8244", "she": "\u5962\u8d4a\u86c7\u820c\u820d\u8d66\u6444\u5c04\u6151\u6d89\u793e\u8bbe\u538d\u4f58\u731e\u7572\u9e9d", "shen": "\u7837\u7533\u547b\u4f38\u8eab\u6df1\u5a20\u7ec5\u795e\u6c88\u5ba1\u5a76\u751a\u80be\u614e\u6e17\u8bdc\u8c02\u5432\u54c2\u6e16\u6939\u77e7\u8703", "sheng": "\u58f0\u751f\u7525\u7272\u5347\u7ef3\u7701\u76db\u5269\u80dc\u5723\u4e1e\u6e11\u5ab5\u771a\u7b19", "shi": "\u5e08\u5931\u72ee\u65bd\u6e7f\u8bd7\u5c38\u8671\u5341\u77f3\u62fe\u65f6\u4ec0\u98df\u8680\u5b9e\u8bc6\u53f2\u77e2\u4f7f\u5c4e\u9a76\u59cb\u5f0f\u793a\u58eb\u4e16\u67ff\u4e8b\u62ed\u8a93\u901d\u52bf\u662f\u55dc\u566c\u9002\u4ed5\u4f8d\u91ca\u9970\u6c0f\u5e02\u6043\u5ba4\u89c6\u8bd5\u8c25\u57d8\u83b3\u84cd\u5f11\u5511\u9963\u8f7c\u8006\u8d33\u70bb\u793b\u94c8\u94ca\u87ab\u8210\u7b6e\u8c55\u9ca5\u9cba", "shou": "\u6536\u624b\u9996\u5b88\u5bff\u6388\u552e\u53d7\u7626\u517d\u624c\u72e9\u7ef6\u824f", "shu": "\u852c\u67a2\u68b3\u6b8a\u6292\u8f93\u53d4\u8212\u6dd1\u758f\u4e66\u8d4e\u5b70\u719f\u85af\u6691\u66d9\u7f72\u8700\u9ecd\u9f20\u5c5e\u672f\u8ff0\u6811\u675f\u620d\u7ad6\u5885\u5eb6\u6570\u6f31\u6055\u500f\u587e\u83fd\u5fc4\u6cad\u6d91\u6f8d\u59dd\u7ebe\u6bf9\u8167\u6bb3\u956f\u79eb\u9e6c", "shua": "\u5237\u800d\u5530\u6dae", "shuai": "\u6454\u8870\u7529\u5e05\u87c0", "shuan": "\u6813\u62f4\u95e9", "shuang": "\u971c\u53cc\u723d\u5b40", "shui": "\u8c01\u6c34\u7761\u7a0e", "shun": "\u542e\u77ac\u987a\u821c\u6042", "shuo": "\u8bf4\u7855\u6714\u70c1\u84b4\u6420\u55cd\u6fef\u5981\u69ca\u94c4", "si": "\u65af\u6495\u5636\u601d\u79c1\u53f8\u4e1d\u6b7b\u8086\u5bfa\u55e3\u56db\u4f3a\u4f3c\u9972\u5df3\u53ae\u4fdf\u5155\u83e5\u549d\u6c5c\u6cd7\u6f8c\u59d2\u9a77\u7f0c\u7940\u7960\u9536\u9e36\u801c\u86f3\u7b25", "song": "\u677e\u8038\u6002\u9882\u9001\u5b8b\u8bbc\u8bf5\u51c7\u83d8\u5d27\u5d69\u5fea\u609a\u6dde\u7ae6", "sou": "\u641c\u8258\u64de\u55fd\u53df\u55d6\u55fe\u998a\u6eb2\u98d5\u778d\u953c\u878b", "su": "\u82cf\u9165\u4fd7\u7d20\u901f\u7c9f\u50f3\u5851\u6eaf\u5bbf\u8bc9\u8083\u5919\u8c21\u850c\u55c9\u612b\u7c0c\u89eb\u7a23", "suan": "\u9178\u849c\u7b97", "sui": "\u867d\u968b\u968f\u7ee5\u9ad3\u788e\u5c81\u7a57\u9042\u96a7\u795f\u84d1\u51ab\u8c07\u6fc9\u9083\u71e7\u772d\u7762", "sun": "\u5b59\u635f\u7b0b\u836a\u72f2\u98e7\u69ab\u8de3\u96bc", "suo": "\u68ad\u5506\u7f29\u7410\u7d22\u9501\u6240\u5522\u55e6\u5a11\u686b\u7743\u7fa7", "ta": "\u584c\u4ed6\u5b83\u5979\u5854\u736d\u631e\u8e4b\u8e0f\u95fc\u6ebb\u9062\u69bb\u6c93", "tai": "\u80ce\u82d4\u62ac\u53f0\u6cf0\u915e\u592a\u6001\u6c70\u90b0\u85b9\u80bd\u70b1\u949b\u8dc6\u9c90", "tan": "\u574d\u644a\u8d2a\u762b\u6ee9\u575b\u6a80\u75f0\u6f6d\u8c2d\u8c08\u5766\u6bef\u8892\u78b3\u63a2\u53f9\u70ad\u90ef\u8548\u6619\u94bd\u952c\u8983", "tang": "\u6c64\u5858\u642a\u5802\u68e0\u819b\u5510\u7cd6\u50a5\u9967\u6e8f\u746d\u94f4\u9557\u8025\u8797\u87b3\u7fb0\u91a3", "thang": "\u5018\u8eba\u6dcc", "theng": "\u8d9f\u70eb", "tao": "\u638f\u6d9b\u6ed4\u7ee6\u8404\u6843\u9003\u6dd8\u9676\u8ba8\u5957\u6311\u9f17\u5555\u97ec\u9955", "te": "\u7279", "teng": "\u85e4\u817e\u75bc\u8a8a\u6ed5", "ti": "\u68af\u5254\u8e22\u9511\u63d0\u9898\u8e44\u557c\u4f53\u66ff\u568f\u60d5\u6d95\u5243\u5c49\u8351\u608c\u9016\u7ee8\u7f07\u9e48\u88fc\u918d", "tian": "\u5929\u6dfb\u586b\u7530\u751c\u606c\u8214\u8146\u63ad\u5fdd\u9617\u6b84\u754b\u94bf\u86ba", "tiao": "\u6761\u8fe2\u773a\u8df3\u4f7b\u7967\u94eb\u7a95\u9f86\u9ca6", "tie": "\u8d34\u94c1\u5e16\u841c\u992e", "ting": "\u5385\u542c\u70c3\u6c40\u5ef7\u505c\u4ead\u5ead\u633a\u8247\u839b\u8476\u5a77\u6883\u8713\u9706", "tong": "\u901a\u6850\u916e\u77b3\u540c\u94dc\u5f64\u7ae5\u6876\u6345\u7b52\u7edf\u75db\u4f5f\u50ee\u4edd\u833c\u55f5\u6078\u6f7c\u783c", "tou": "\u5077\u6295\u5934\u900f\u4ea0", "tu": "\u51f8\u79c3\u7a81\u56fe\u5f92\u9014\u6d82\u5c60\u571f\u5410\u5154\u580d\u837c\u83df\u948d\u9174", "tuan": "\u6e4d\u56e2\u7583", "tui": "\u63a8\u9893\u817f\u8715\u892a\u9000\u5fd2\u717a", "tun": "\u541e\u5c6f\u81c0\u9968\u66be\u8c5a\u7a80", "tuo": "\u62d6\u6258\u8131\u9e35\u9640\u9a6e\u9a7c\u692d\u59a5\u62d3\u553e\u4e47\u4f57\u5768\u5eb9\u6cb1\u67dd\u7823\u7ba8\u8204\u8dce\u9f0d", "wa": "\u6316\u54c7\u86d9\u6d3c\u5a03\u74e6\u889c\u4f64\u5a32\u817d", "wai": "\u6b6a\u5916", "wan": "\u8c4c\u5f2f\u6e7e\u73a9\u987d\u4e38\u70f7\u5b8c\u7897\u633d\u665a\u7696\u60cb\u5b9b\u5a49\u4e07\u8155\u525c\u8284\u82cb\u83c0\u7ea8\u7efe\u742c\u8118\u7579\u873f\u7ba2", "wang": "\u6c6a\u738b\u4ea1\u6789\u7f51\u5f80\u65fa\u671b\u5fd8\u5984\u7f54\u5c22\u60d8\u8f8b\u9b4d", "wei": "\u5a01\u5dcd\u5fae\u5371\u97e6\u8fdd\u6845\u56f4\u552f\u60df\u4e3a\u6f4d\u7ef4\u82c7\u840e\u59d4\u4f1f\u4f2a\u5c3e\u7eac\u672a\u851a\u5473\u754f\u80c3\u5582\u9b4f\u4f4d\u6e2d\u8c13\u5c09\u6170\u536b\u502d\u504e\u8bff\u9688\u8473\u8587\u5e0f\u5e37\u5d34\u5d6c\u7325\u732c\u95f1\u6ca9\u6d27\u6da0\u9036\u5a13\u73ae\u97ea\u8ece\u709c\u7168\u71a8\u75ff\u8249\u9c94", "wen": "\u761f\u6e29\u868a\u6587\u95fb\u7eb9\u543b\u7a33\u7d0a\u95ee\u520e\u6120\u960c\u6c76\u74ba\u97eb\u6b81\u96ef", "weng": "\u55e1\u7fc1\u74ee\u84ca\u8579", "wo": "\u631d\u8717\u6da1\u7a9d\u6211\u65a1\u5367\u63e1\u6c83\u83b4\u5e44\u6e25\u674c\u809f\u9f8c", "wu": "\u5deb\u545c\u94a8\u4e4c\u6c61\u8bec\u5c4b\u65e0\u829c\u68a7\u543e\u5434\u6bcb\u6b66\u4e94\u6342\u5348\u821e\u4f0d\u4fae\u575e\u620a\u96fe\u6664\u7269\u52ff\u52a1\u609f\u8bef\u5140\u4ef5\u9622\u90ac\u572c\u82b4\u5e91\u6003\u5fe4\u6d6f\u5be4\u8fd5\u59a9\u9a9b\u727e\u7110\u9e49\u9e5c\u8708\u92c8\u9f2f", "xi": "\u6614\u7199\u6790\u897f\u7852\u77fd\u6670\u563b\u5438\u9521\u727a\u7a00\u606f\u5e0c\u6089\u819d\u5915\u60dc\u7184\u70ef\u6eaa\u6c50\u7280\u6a84\u88ad\u5e2d\u4e60\u5ab3\u559c\u94e3\u6d17\u7cfb\u9699\u620f\u7ec6\u50d6\u516e\u96b0\u90d7\u831c\u8478\u84f0\u595a\u550f\u5f99\u9969\u960b\u6d60\u6dc5\u5c63\u5b09\u73ba\u6a28\u66e6\u89cb\u6b37\u71b9\u798a\u79a7\u94b8\u7699\u7a78\u8725\u87cb\u823e\u7fb2\u7c9e\u7fd5\u91af\u9f37", "xia": "\u778e\u867e\u5323\u971e\u8f96\u6687\u5ce1\u4fa0\u72ed\u4e0b\u53a6\u590f\u5413\u6380\u846d\u55c4\u72ce\u9050\u7455\u7856\u7615\u7f45\u9ee0", "xian": "\u9528\u5148\u4ed9\u9c9c\u7ea4\u54b8\u8d24\u8854\u8237\u95f2\u6d8e\u5f26\u5acc\u663e\u9669\u73b0\u732e\u53bf\u817a\u9985\u7fa1\u5baa\u9677\u9650\u7ebf\u51bc\u85d3\u5c98\u7303\u66b9\u5a34\u6c19\u7946\u9e47\u75eb\u86ac\u7b45\u7c7c\u9170\u8df9", "xiang": "\u76f8\u53a2\u9576\u9999\u7bb1\u8944\u6e58\u4e61\u7fd4\u7965\u8be6\u60f3\u54cd\u4eab\u9879\u5df7\u6a61\u50cf\u5411\u8c61\u8297\u8459\u9977\u5ea0\u9aa7\u7f03\u87d3\u9c9e\u98e8", "xiao": "\u8427\u785d\u9704\u524a\u54ee\u56a3\u9500\u6d88\u5bb5\u6dc6\u6653\u5c0f\u5b5d\u6821\u8096\u5578\u7b11\u6548\u54d3\u54bb\u5d24\u6f47\u900d\u9a81\u7ee1\u67ad\u67b5\u7b71\u7bab\u9b48", "xie": "\u6954\u4e9b\u6b47\u874e\u978b\u534f\u631f\u643a\u90aa\u659c\u80c1\u8c10\u5199\u68b0\u5378\u87f9\u61c8\u6cc4\u6cfb\u8c22\u5c51\u5055\u4eb5\u52f0\u71ee\u85a4\u64b7\u5ee8\u7023\u9082\u7ec1\u7f2c\u69ad\u698d\u6b59\u8e9e", "xin": "\u85aa\u82af\u950c\u6b23\u8f9b\u65b0\u5ffb\u5fc3\u4fe1\u8845\u56df\u99a8\u8398\u6b46\u94fd\u946b", "xing": "\u661f\u8165\u7329\u60fa\u5174\u5211\u578b\u5f62\u90a2\u884c\u9192\u5e78\u674f\u6027\u59d3\u9649\u8347\u8365\u64e4\u60bb\u784e", "xiong": "\u5144\u51f6\u80f8\u5308\u6c79\u96c4\u718a\u828e", "xiu": "\u4f11\u4fee\u7f9e\u673d\u55c5\u9508\u79c0\u8896\u7ee3\u83a0\u5cab\u9990\u5ea5\u9e3a\u8c85\u9af9", "xu": "\u589f\u620c\u9700\u865a\u5618\u987b\u5f90\u8bb8\u84c4\u9157\u53d9\u65ed\u5e8f\u755c\u6064\u7d6e\u5a7f\u7eea\u7eed\u8bb4\u8be9\u5729\u84ff\u6035\u6d2b\u6e86\u987c\u6829\u7166\u7809\u76f1\u80e5\u7cc8\u9191", "xuan": "\u8f69\u55a7\u5ba3\u60ac\u65cb\u7384\u9009\u7663\u7729\u7eda\u5107\u8c16\u8431\u63ce\u9994\u6ceb\u6d35\u6e32\u6f29\u7487\u6966\u6684\u70ab\u714a\u78b9\u94c9\u955f\u75c3", "xue": "\u9774\u859b\u5b66\u7a74\u96ea\u8840\u5671\u6cf6\u9cd5", "xun": "\u52cb\u718f\u5faa\u65ec\u8be2\u5bfb\u9a6f\u5de1\u6b89\u6c5b\u8bad\u8baf\u900a\u8fc5\u5dfd\u57d9\u8340\u85b0\u5ccb\u5f87\u6d54\u66db\u7aa8\u91ba\u9c9f", "ya": "\u538b\u62bc\u9e26\u9e2d\u5440\u4e2b\u82bd\u7259\u869c\u5d16\u8859\u6daf\u96c5\u54d1\u4e9a\u8bb6\u4f22\u63e0\u5416\u5c88\u8fd3\u5a05\u740a\u6860\u6c29\u7811\u775a\u75d6", "yan": "\u7109\u54bd\u9609\u70df\u6df9\u76d0\u4e25\u7814\u8712\u5ca9\u5ef6\u8a00\u989c\u960e\u708e\u6cbf\u5944\u63a9\u773c\u884d\u6f14\u8273\u5830\u71d5\u538c\u781a\u96c1\u5501\u5f66\u7130\u5bb4\u8c1a\u9a8c\u53a3\u9765\u8d5d\u4fe8\u5043\u5156\u8ba0\u8c33\u90fe\u9122\u82ab\u83f8\u5d26\u6079\u95eb\u960f\u6d07\u6e6e\u6edf\u598d\u5ae3\u7430\u664f\u80ed\u814c\u7131\u7f68\u7b75\u917d\u9b47\u990d\u9f39", "yang": "\u6b83\u592e\u9e2f\u79e7\u6768\u626c\u4f6f\u75a1\u7f8a\u6d0b\u9633\u6c27\u4ef0\u75d2\u517b\u6837\u6f3e\u5f89\u600f\u6cf1\u7080\u70ca\u6059\u86d8\u9785", "yao": "\u9080\u8170\u5996\u7476\u6447\u5c27\u9065\u7a91\u8c23\u59da\u54ac\u8200\u836f\u8981\u8000\u592d\u723b\u5406\u5d3e\u5fad\u7039\u5e7a\u73e7\u6773\u66dc\u80b4\u9e5e\u7a88\u7e47\u9cd0", "ye": "\u6930\u564e\u8036\u7237\u91ce\u51b6\u4e5f\u9875\u6396\u4e1a\u53f6\u66f3\u814b\u591c\u6db2\u8c12\u90ba\u63f6\u9980\u6654\u70e8\u94d8", "yi": "\u4e00\u58f9\u533b\u63d6\u94f1\u4f9d\u4f0a\u8863\u9890\u5937\u9057\u79fb\u4eea\u80f0\u7591\u6c82\u5b9c\u59e8\u5f5d\u6905\u8681\u501a\u5df2\u4e59\u77e3\u4ee5\u827a\u6291\u6613\u9091\u5c79\u4ebf\u5f79\u81c6\u9038\u8084\u75ab\u4ea6\u88d4\u610f\u6bc5\u5fc6\u4e49\u76ca\u6ea2\u8be3\u8bae\u8c0a\u8bd1\u5f02\u7ffc\u7fcc\u7ece\u5208\u5293\u4f7e\u8bd2\u572a\u572f\u57f8\u61ff\u82e1\u858f\u5f08\u5955\u6339\u5f0b\u5453\u54a6\u54bf\u566b\u5cc4\u5db7\u7317\u9974\u603f\u6021\u6092\u6f2a\u8fe4\u9a7f\u7f22\u6baa\u8d3b\u65d6\u71a0\u9487\u9552\u9571\u75cd\u7617\u7654\u7fca\u8864\u8734\u8223\u7fbf\u7ff3\u914f\u9edf", "yin": "\u8335\u836b\u56e0\u6bb7\u97f3\u9634\u59fb\u541f\u94f6\u6deb\u5bc5\u996e\u5c39\u5f15\u9690\u5370\u80e4\u911e\u5819\u831a\u5591\u72fa\u5924\u6c24\u94df\u763e\u8693\u972a\u9f88", "ying": "\u82f1\u6a31\u5a74\u9e70\u5e94\u7f28\u83b9\u8424\u8425\u8367\u8747\u8fce\u8d62\u76c8\u5f71\u9896\u786c\u6620\u5b34\u90e2\u8314\u83ba\u8426\u6484\u5624\u81ba\u6ee2\u6f46\u701b\u745b\u748e\u6979\u9e66\u763f\u988d\u7f42", "yo": "\u54df\u5537", "yong": "\u62e5\u4f63\u81c3\u75c8\u5eb8\u96cd\u8e0a\u86f9\u548f\u6cf3\u6d8c\u6c38\u607f\u52c7\u7528\u4fd1\u58c5\u5889\u6175\u9095\u955b\u752c\u9cd9\u9954", "you": "\u5e7d\u4f18\u60a0\u5fe7\u5c24\u7531\u90ae\u94c0\u72b9\u6cb9\u6e38\u9149\u6709\u53cb\u53f3\u4f51\u91c9\u8bf1\u53c8\u5e7c\u5363\u6538\u4f91\u83b8\u5466\u56ff\u5ba5\u67da\u7337\u7256\u94d5\u75a3\u8763\u9c7f\u9edd\u9f2c", "yu": "\u8fc2\u6de4\u4e8e\u76c2\u6986\u865e\u611a\u8206\u4f59\u4fde\u903e\u9c7c\u6109\u6e1d\u6e14\u9685\u4e88\u5a31\u96e8\u4e0e\u5c7f\u79b9\u5b87\u8bed\u7fbd\u7389\u57df\u828b\u90c1\u5401\u9047\u55bb\u5cea\u5fa1\u6108\u6b32\u72f1\u80b2\u8a89\u6d74\u5bd3\u88d5\u9884\u8c6b\u9a6d\u79ba\u6bd3\u4f1b\u4fe3\u8c00\u8c15\u8438\u84e3\u63c4\u5581\u5704\u5709\u5d5b\u72f3\u996b\u5ebe\u9608\u59aa\u59a4\u7ea1\u745c\u6631\u89ce\u8174\u6b24\u65bc\u715c\u71e0\u807f\u94b0\u9e46\u7610\u7600\u7ab3\u8753\u7afd\u8201\u96e9\u9f89", "yuan": "\u9e33\u6e0a\u51a4\u5143\u57a3\u8881\u539f\u63f4\u8f95\u56ed\u5458\u5706\u733f\u6e90\u7f18\u8fdc\u82d1\u613f\u6028\u9662\u586c\u6c85\u5a9b\u7457\u6a7c\u7230\u7722\u9e22\u8788\u9f0b", "yue": "\u66f0\u7ea6\u8d8a\u8dc3\u94a5\u5cb3\u7ca4\u6708\u60a6\u9605\u9fa0\u6a3e\u5216\u94ba", "yun": "\u8018\u4e91\u90e7\u5300\u9668\u5141\u8fd0\u8574\u915d\u6655\u97f5\u5b55\u90d3\u82b8\u72c1\u607d\u7ead\u6b92\u6600\u6c32", "za": "\u531d\u7838\u6742\u62f6\u5482", "zai": "\u683d\u54c9\u707e\u5bb0\u8f7d\u518d\u5728\u54b1\u5d3d\u753e", "zan": "\u6512\u6682\u8d5e\u74d2\u661d\u7c2a\u7ccc\u8db1\u933e", "zang": "\u8d43\u810f\u846c\u5958\u6215\u81e7", "zao": "\u906d\u7cdf\u51ff\u85fb\u67a3\u65e9\u6fa1\u86a4\u8e81\u566a\u9020\u7682\u7076\u71e5\u5523\u7f2b", "ze": "\u8d23\u62e9\u5219\u6cfd\u4ec4\u8d5c\u5567\u8fee\u6603\u7b2e\u7ba6\u8234", "zei": "\u8d3c", "zen": "\u600e\u8c2e", "zeng": "\u589e\u618e\u66fe\u8d60\u7f2f\u7511\u7f7e\u9503", "zha": "\u624e\u55b3\u6e23\u672d\u8f67\u94e1\u95f8\u7728\u6805\u69a8\u548b\u4e4d\u70b8\u8bc8\u63f8\u5412\u54a4\u54f3\u600d\u781f\u75c4\u86b1\u9f44", "zhai": "\u6458\u658b\u5b85\u7a84\u503a\u5be8\u7826", "zhan": "\u77bb\u6be1\u8a79\u7c98\u6cbe\u76cf\u65a9\u8f97\u5d2d\u5c55\u8638\u6808\u5360\u6218\u7ad9\u6e5b\u7efd\u8c35\u640c\u65c3", "zhang": "\u6a1f\u7ae0\u5f70\u6f33\u5f20\u638c\u6da8\u6756\u4e08\u5e10\u8d26\u4ed7\u80c0\u7634\u969c\u4ec9\u9123\u5e5b\u5d82\u7350\u5adc\u748b\u87d1", "zhao": "\u62db\u662d\u627e\u6cbc\u8d75\u7167\u7f69\u5146\u8087\u53ec\u722a\u8bcf\u68f9\u948a\u7b0a", "zhe": "\u906e\u6298\u54f2\u86f0\u8f99\u8005\u9517\u8517\u8fd9\u6d59\u8c2a\u966c\u67d8\u8f84\u78d4\u9e67\u891a\u8707\u8d6d", "zhen": "\u73cd\u659f\u771f\u7504\u7827\u81fb\u8d1e\u9488\u4fa6\u6795\u75b9\u8bca\u9707\u632f\u9547\u9635\u7f1c\u6862\u699b\u8f78\u8d48\u80d7\u6715\u796f\u755b\u9e29", "zheng": "\u84b8\u6323\u7741\u5f81\u72f0\u4e89\u6014\u6574\u62ef\u6b63\u653f\u5e27\u75c7\u90d1\u8bc1\u8be4\u5ce5\u94b2\u94ee\u7b5d", "zhi": "\u829d\u679d\u652f\u5431\u8718\u77e5\u80a2\u8102\u6c41\u4e4b\u7ec7\u804c\u76f4\u690d\u6b96\u6267\u503c\u4f84\u5740\u6307\u6b62\u8dbe\u53ea\u65e8\u7eb8\u5fd7\u631a\u63b7\u81f3\u81f4\u7f6e\u5e1c\u5cd9\u5236\u667a\u79e9\u7a1a\u8d28\u7099\u75d4\u6ede\u6cbb\u7a92\u536e\u965f\u90c5\u57f4\u82b7\u646d\u5e19\u5fee\u5f58\u54ab\u9a98\u6809\u67b3\u6800\u684e\u8f75\u8f7e\u6534\u8d3d\u81a3\u7949\u7957\u9ef9\u96c9\u9e37\u75e3\u86ed\u7d77\u916f\u8dd6\u8e2c\u8e2f\u8c78\u89ef", "zhong": "\u4e2d\u76c5\u5fe0\u949f\u8877\u7ec8\u79cd\u80bf\u91cd\u4ef2\u4f17\u51a2\u953a\u87bd\u8202\u822f\u8e35", "zhou": "\u821f\u5468\u5dde\u6d32\u8bcc\u7ca5\u8f74\u8098\u5e1a\u5492\u76b1\u5b99\u663c\u9aa4\u5544\u7740\u501c\u8bf9\u836e\u9b3b\u7ea3\u80c4\u78a1\u7c40\u8233\u914e\u9cb7", "zhu": "\u73e0\u682a\u86db\u6731\u732a\u8bf8\u8bdb\u9010\u7af9\u70db\u716e\u62c4\u77a9\u5631\u4e3b\u8457\u67f1\u52a9\u86c0\u8d2e\u94f8\u7b51\u4f4f\u6ce8\u795d\u9a7b\u4f2b\u4f8f\u90be\u82ce\u8331\u6d19\u6e1a\u6f74\u9a7a\u677c\u69e0\u6a65\u70b7\u94e2\u75b0\u7603\u86b0\u7afa\u7bb8\u7fe5\u8e85\u9e88", "zhua": "\u6293", "zhuai": "\u62fd", "zhuan": "\u4e13\u7816\u8f6c\u64b0\u8d5a\u7bc6\u629f\u556d\u989b", "zhuang": "\u6869\u5e84\u88c5\u5986\u649e\u58ee\u72b6\u4e2c", "zhui": "\u690e\u9525\u8ffd\u8d58\u5760\u7f00\u8411\u9a93\u7f12", "zhun": "\u8c06\u51c6", "zhuo": "\u6349\u62d9\u5353\u684c\u7422\u8301\u914c\u707c\u6d4a\u502c\u8bfc\u5ef4\u855e\u64e2\u555c\u6d5e\u6dbf\u6753\u712f\u799a\u65ab", "zi": "\u5179\u54a8\u8d44\u59ff\u6ecb\u6dc4\u5b5c\u7d2b\u4ed4\u7c7d\u6ed3\u5b50\u81ea\u6e0d\u5b57\u8c18\u5d6b\u59ca\u5b73\u7f01\u6893\u8f8e\u8d40\u6063\u7726\u9531\u79ed\u8014\u7b2b\u7ca2\u89dc\u8a3e\u9cbb\u9aed", "zong": "\u9b03\u68d5\u8e2a\u5b97\u7efc\u603b\u7eb5\u8159\u7cbd", "zou": "\u90b9\u8d70\u594f\u63cd\u9139\u9cb0", "zu": "\u79df\u8db3\u5352\u65cf\u7956\u8bc5\u963b\u7ec4\u4fce\u83f9\u5550\u5f82\u9a75\u8e74", "zuan": "\u94bb\u7e82\u6525\u7f35", "zui": "\u5634\u9189\u6700\u7f6a", "zun": "\u5c0a\u9075\u6499\u6a3d\u9cdf", "zuo": "\u6628\u5de6\u4f50\u67de\u505a\u4f5c\u5750\u5ea7\u961d\u963c\u80d9\u795a\u9162", "cou": "\u85ae\u6971\u8f8f\u8160", "nang": "\u652e\u54dd\u56d4\u9995\u66e9", "o": "\u5594", "dia": "\u55f2", "chuai": "\u562c\u81aa\u8e39", "cen": "\u5c91\u6d94", "diu": "\u94e5", "nou": "\u8028", "fou": "\u7f36", "bia": "\u9adf" };
// 汉字转拼音
function ConvertPinyin(l1) {
    var l2 = l1.length;
    var I1 = "";
    var reg = new RegExp('[a-zA-Z0-9\- ]');
    for (var i = 0; i < l2; i++) {
        var val = l1.substr(i, 1);
        var name = arraySearch(val, PinYin);
        if (reg.test(val)) {
            I1 += val;
        } else if (name !== false) {
            I1 += name;
        }

    }
    I1 = I1.replace(/ /g, '-');
    while (I1.indexOf('--') > 0) {
        I1 = I1.replace('--', '-');
    }
    return I1;
}
// 在对象中搜索
function arraySearch(l1, l2) {
    for (var name in PinYin) {
        if (PinYin[name].indexOf(l1) != -1) {
            return ucfirst(name);
            break;
        }
    }
    return false;
}
// 首字母大写
function ucfirst(l1) {
    if (l1.length > 0) {
        var first = l1.substr(0, 1).toLowerCase();
        var spare = l1.substr(1, l1.length);
        return first + spare;
        // return first;
    }
}

var strChineseFirstPY = "";
//此处收录了375个多音字
var oMultiDiff = {
    "19969": "DZ",
    "19975": "WM",
    "19988": "QJ",
    "20048": "YL",
    "20056": "SC",
    "20060": "NM",
    "20094": "QG",
    "20127": "QJ",
    "20167": "QC",
    "20193": "YG",
    "20250": "KH",
    "20256": "ZC",
    "20282": "SC",
    "20285": "QJG",
    "20291": "TD",
    "20314": "YD",
    "20340": "NE",
    "20375": "TD",
    "20389": "YJ",
    "20391": "CZ",
    "20415": "PB",
    "20446": "YS",
    "20447": "SQ",
    "20504": "TC",
    "20608": "KG",
    "20854": "QJ",
    "20857": "ZC",
    "20911": "PF",
    "20504": "TC",
    "20608": "KG",
    "20854": "QJ",
    "20857": "ZC",
    "20911": "PF",
    "20985": "AW",
    "21032": "PB",
    "21048": "XQ",
    "21049": "SC",
    "21089": "YS",
    "21119": "JC",
    "21242": "SB",
    "21273": "SC",
    "21305": "YP",
    "21306": "QO",
    "21330": "ZC",
    "21333": "SDC",
    "21345": "QK",
    "21378": "CA",
    "21397": "SC",
    "21414": "XS",
    "21442": "SC",
    "21477": "JG",
    "21480": "TD",
    "21484": "ZS",
    "21494": "YX",
    "21505": "YX",
    "21512": "HG",
    "21523": "XH",
    "21537": "PB",
    "21542": "PF",
    "21549": "KH",
    "21571": "E",
    "21574": "DA",
    "21588": "TD",
    "21589": "O",
    "21618": "ZC",
    "21621": "KHA",
    "21632": "ZJ",
    "21654": "KG",
    "21679": "LKG",
    "21683": "KH",
    "21710": "A",
    "21719": "YH",
    "21734": "WOE",
    "21769": "A",
    "21780": "WN",
    "21804": "XH",
    "21834": "A",
    "21899": "ZD",
    "21903": "RN",
    "21908": "WO",
    "21939": "ZC",
    "21956": "SA",
    "21964": "YA",
    "21970": "TD",
    "22003": "A",
    "22031": "JG",
    "22040": "XS",
    "22060": "ZC",
    "22066": "ZC",
    "22079": "MH",
    "22129": "XJ",
    "22179": "XA",
    "22237": "NJ",
    "22244": "TD",
    "22280": "JQ",
    "22300": "YH",
    "22313": "XW",
    "22331": "YQ",
    "22343": "YJ",
    "22351": "PH",
    "22395": "DC",
    "22412": "TD",
    "22484": "PB",
    "22500": "PB",
    "22534": "ZD",
    "22549": "DH",
    "22561": "PB",
    "22612": "TD",
    "22771": "KQ",
    "22831": "HB",
    "22841": "JG",
    "22855": "QJ",
    "22865": "XQ",
    "23013": "ML",
    "23081": "WM",
    "23487": "SX",
    "23558": "QJ",
    "23561": "YW",
    "23586": "YW",
    "23614": "YW",
    "23615": "SN",
    "23631": "PB",
    "23646": "ZS",
    "23663": "ZT",
    "23673": "YG",
    "23762": "TD",
    "23769": "ZS",
    "23780": "QJ",
    "23884": "QK",
    "24055": "XH",
    "24113": "DC",
    "24162": "ZC",
    "24191": "GA",
    "24273": "QJ",
    "24324": "NL",
    "24377": "TD",
    "24378": "QJ",
    "24439": "PF",
    "24554": "ZS",
    "24683": "TD",
    "24694": "WE",
    "24733": "LK",
    "24925": "TN",
    "25094": "ZG",
    "25100": "XQ",
    "25103": "XH",
    "25153": "PB",
    "25170": "PB",
    "25179": "KG",
    "25203": "PB",
    "25240": "ZS",
    "25282": "FB",
    "25303": "NA",
    "25324": "KG",
    "25341": "ZY",
    "25373": "WZ",
    "25375": "XJ",
    "25384": "A",
    "25457": "A",
    "25528": "SD",
    "25530": "SC",
    "25552": "TD",
    "25774": "ZC",
    "25874": "ZC",
    "26044": "YW",
    "26080": "WM",
    "26292": "PB",
    "26333": "PB",
    "26355": "ZY",
    "26366": "CZ",
    "26397": "ZC",
    "26399": "QJ",
    "26415": "ZS",
    "26451": "SB",
    "26526": "ZC",
    "26552": "JG",
    "26561": "TD",
    "26588": "JG",
    "26597": "CZ",
    "26629": "ZS",
    "26638": "YL",
    "26646": "XQ",
    "26653": "KG",
    "26657": "XJ",
    "26727": "HG",
    "26894": "ZC",
    "26937": "ZS",
    "26946": "ZC",
    "26999": "KJ",
    "27099": "KJ",
    "27449": "YQ",
    "27481": "XS",
    "27542": "ZS",
    "27663": "ZS",
    "27748": "TS",
    "27784": "SC",
    "27788": "ZD",
    "27795": "TD",
    "27812": "O",
    "27850": "PB",
    "27852": "MB",
    "27895": "SL",
    "27898": "PL",
    "27973": "QJ",
    "27981": "KH",
    "27986": "HX",
    "27994": "XJ",
    "28044": "YC",
    "28065": "WG",
    "28177": "SM",
    "28267": "QJ",
    "28291": "KH",
    "28337": "ZQ",
    "28463": "TL",
    "28548": "DC",
    "28601": "TD",
    "28689": "PB",
    "28805": "JG",
    "28820": "QG",
    "28846": "PB",
    "28952": "TD",
    "28975": "ZC",
    "29100": "A",
    "29325": "QJ",
    "29575": "SL",
    "29602": "FB",
    "30010": "TD",
    "30044": "CX",
    "30058": "PF",
    "30091": "YSP",
    "30111": "YN",
    "30229": "XJ",
    "30427": "SC",
    "30465": "SX",
    "30631": "YQ",
    "30655": "QJ",
    "30684": "QJG",
    "30707": "SD",
    "30729": "XH",
    "30796": "LG",
    "30917": "PB",
    "31074": "NM",
    "31085": "JZ",
    "31109": "SC",
    "31181": "ZC",
    "31192": "MLB",
    "31293": "JQ",
    "31400": "YX",
    "31584": "YJ",
    "31896": "ZN",
    "31909": "ZY",
    "31995": "XJ",
    "32321": "PF",
    "32327": "ZY",
    "32418": "HG",
    "32420": "XQ",
    "32421": "HG",
    "32438": "LG",
    "32473": "GJ",
    "32488": "TD",
    "32521": "QJ",
    "32527": "PB",
    "32562": "ZSQ",
    "32564": "JZ",
    "32735": "ZD",
    "32793": "PB",
    "33071": "PF",
    "33098": "XL",
    "33100": "YA",
    "33152": "PB",
    "33261": "CX",
    "33324": "BP",
    "33333": "TD",
    "33406": "YA",
    "33426": "WM",
    "33432": "PB",
    "33445": "JG",
    "33486": "ZN",
    "33493": "TS",
    "33507": "QJ",
    "33540": "QJ",
    "33544": "ZC",
    "33564": "XQ",
    "33617": "YT",
    "33632": "QJ",
    "33636": "XH",
    "33637": "YX",
    "33694": "WG",
    "33705": "PF",
    "33728": "YW",
    "33882": "SR",
    "34067": "WM",
    "34074": "YW",
    "34121": "QJ",
    "34255": "ZC",
    "34259": "XL",
    "34425": "JH",
    "34430": "XH",
    "34485": "KH",
    "34503": "YS",
    "34532": "HG",
    "34552": "XS",
    "34558": "YE",
    "34593": "ZL",
    "34660": "YQ",
    "34892": "XH",
    "34928": "SC",
    "34999": "QJ",
    "35048": "PB",
    "35059": "SC",
    "35098": "ZC",
    "35203": "TQ",
    "35265": "JX",
    "35299": "JX",
    "35782": "SZ",
    "35828": "YS",
    "35830": "E",
    "35843": "TD",
    "35895": "YG",
    "35977": "MH",
    "36158": "JG",
    "36228": "QJ",
    "36426": "XQ",
    "36466": "DC",
    "36710": "JC",
    "36711": "ZYG",
    "36767": "PB",
    "36866": "SK",
    "36951": "YW",
    "37034": "YX",
    "37063": "XH",
    "37218": "ZC",
    "37325": "ZC",
    "38063": "PB",
    "38079": "TD",
    "38085": "QY",
    "38107": "DC",
    "38116": "TD",
    "38123": "YD",
    "38224": "HG",
    "38241": "XTC",
    "38271": "ZC",
    "38415": "YE",
    "38426": "KH",
    "38461": "YD",
    "38463": "AE",
    "38466": "PB",
    "38477": "XJ",
    "38518": "YT",
    "38551": "WK",
    "38585": "ZC",
    "38704": "XS",
    "38739": "LJ",
    "38761": "GJ",
    "38808": "SQ",
    "39048": "JG",
    "39049": "XJ",
    "39052": "HG",
    "39076": "CZ",
    "39271": "XT",
    "39534": "TD",
    "39552": "TD",
    "39584": "PB",
    "39647": "SB",
    "39730": "LG",
    "39748": "TPB",
    "40109": "ZQ",
    "40479": "ND",
    "40516": "HG",
    "40536": "HG",
    "40583": "QJ",
    "40765": "YQ",
    "40784": "QJ",
    "40840": "YK",
    "40863": "QJG"
};
//参数,中文字符串
//返回值:拼音首字母串数组
function makePy(str) {
    if(typeof(str) != "string")
        throw new Error(-1, "函数makePy需要字符串类型参数!");
    var arrResult = new Array(); //保存中间结果的数组
    for(var i = 0, len = str.length; i < len; i++) {
        //获得unicode码
        var ch = str.charAt(i);
        //检查该unicode码是否在处理范围之内,在则返回该码对映汉字的拼音首字母,不在则调用其它函数处理
        arrResult.push(checkCh(ch));
    }
    //处理arrResult,返回所有可能的拼音首字母串数组
    return mkRslt(arrResult);
}

function checkCh(ch) {
    var uni = ch.charCodeAt(0);
    //如果不在汉字处理范围之内,返回原字符,也可以调用自己的处理函数
    if(uni > 40869 || uni < 19968)
        return ch; //dealWithOthers(ch);
    //检查是否是多音字,是按多音字处理,不是就直接在strChineseFirstPY字符串中找对应的首字母
    return(oMultiDiff[uni] ? oMultiDiff[uni] : (strChineseFirstPY.charAt(uni - 19968)));
}

function mkRslt(arr) {
    var arrRslt = [""];
    for(var i = 0, len = arr.length; i < len; i++) {
        var str = arr[i];
        var strlen = str.length;
        if(strlen == 1) {
            for(var k = 0; k < arrRslt.length; k++) {
                arrRslt[k] += str;
            }
        } else {
            var tmpArr = arrRslt.slice(0);
            arrRslt = [];
            for(k = 0; k < strlen; k++) {
                //复制一个相同的arrRslt
                var tmp = tmpArr.slice(0);
                //把当前字符str[k]添加到每个元素末尾
                for(var j = 0; j < tmp.length; j++) {
                    tmp[j] += str.charAt(k);
                }
                //把复制并修改后的数组连接到arrRslt上
                arrRslt = arrRslt.concat(tmp);
            }
        }
    }
    return arrRslt;
}

(function($){

    // a case insensitive jQuery :contains selector
    $.expr[":"].searchableSelectContains = $.expr.createPseudo(function(arg) {
        return function( elem ) {
            var pinyin = ConvertPinyin($(elem).text());
            var firstWord = makePy($(elem).text())[0];
            if($(elem).text().toUpperCase().indexOf(arg.toUpperCase()) >= 0)
                return true;
            if(pinyin.toUpperCase().indexOf(arg.toUpperCase()) >= 0)
                return true;
            if(firstWord.toUpperCase().indexOf(arg.toUpperCase()) >= 0)
                return true;
            return false;
        };
    });

    $.searchableSelect = function(element, options) {
        this.element = element;
        this.options = options || {};
        this.init();

        var _this = this;

        this.searchableElement.click(function(event){
            // event.stopPropagation();
            _this.show();
        }).on('keydown', function(event){
            if (event.which === 13 || event.which === 40 || event.which == 38){
                event.preventDefault();
                _this.show();
            }
        });

        $(document).on('click', null, function(event){
            if(_this.searchableElement.has($(event.target)).length === 0)
                _this.hide();
        });

        this.input.on('keydown', function(event){
            event.stopPropagation();
            if(event.which === 13){         //enter
                event.preventDefault();
                _this.selectCurrentHoverItem();
                _this.hide();
            } else if (event.which == 27) { //ese
                _this.hide();
            } else if (event.which == 40) { //down
                _this.hoverNextItem();
            } else if (event.which == 38) { //up
                _this.hoverPreviousItem();
            }
        }).on('keyup', function(event){
            if(event.which != 13 && event.which != 27 && event.which != 38 && event.which != 40)
                _this.filter();
        })
    }

    var $sS = $.searchableSelect;

    $sS.fn = $sS.prototype = {
        version: '0.0.1'
    };

    $sS.fn.extend = $sS.extend = $.extend;

    $sS.fn.extend({
        init: function(){
            var _this = this;
            this.element.hide();

            this.searchableElement = $('<div tabindex="0" id="searchableElement" class="searchable-select" style="width:' + _this.options.Width + 'px"></div>');
            this.holder = $('<div class="searchable-select-holder"></div>');
            this.dropdown = $('<div class="searchable-select-dropdown searchable-select-hide"></div>');
            this.input = $('<input type="text" class="searchable-select-input" />');
            this.items = $('<div class="searchable-select-items"></div>');
            this.caret = $('<span class="searchable-select-caret"></span>');

            this.scrollPart = $('<div class="searchable-scroll"></div>');
            this.hasPrivious = $('<div class="searchable-has-privious">...</div>');
            this.hasNext = $('<div class="searchable-has-next">...</div>');

            this.hasNext.on('mouseenter', function(){
                _this.hasNextTimer = null;

                var f = function(){
                    var scrollTop = _this.items.scrollTop();
                    _this.items.scrollTop(scrollTop + 20);
                    _this.hasNextTimer = setTimeout(f, 50);
                }

                f();
            }).on('mouseleave', function(event) {
                clearTimeout(_this.hasNextTimer);
            });

            this.hasPrivious.on('mouseenter', function(){
                _this.hasPriviousTimer = null;

                var f = function(){
                    var scrollTop = _this.items.scrollTop();
                    _this.items.scrollTop(scrollTop - 20);
                    _this.hasPriviousTimer = setTimeout(f, 50);
                }

                f();
            }).on('mouseleave', function(event) {
                clearTimeout(_this.hasPriviousTimer);
            });

            this.dropdown.append(this.input);
            this.dropdown.append(this.scrollPart);

            this.scrollPart.append(this.hasPrivious);
            this.scrollPart.append(this.items);
            this.scrollPart.append(this.hasNext);

            this.searchableElement.append(this.caret);
            this.searchableElement.append(this.holder);
            this.searchableElement.append(this.dropdown);
            this.element.after(this.searchableElement);

            this.buildItems();
            this.setPriviousAndNextVisibility();
        },

        filter: function(){
            var text = this.input.val();
            console.log(text);
            this.items.find('.searchable-select-item').addClass('searchable-select-hide');
            this.items.find('.searchable-select-item:searchableSelectContains('+text+')').removeClass('searchable-select-hide');
            if(this.currentSelectedItem.hasClass('searchable-select-hide') && this.items.find('.searchable-select-item:not(.searchable-select-hide)').length > 0){
                console.log(1);
                this.hoverFirstNotHideItem();
            }
            console.log(2);
            this.setPriviousAndNextVisibility();
        },

        hoverFirstNotHideItem: function(){
            this.hoverItem(this.items.find('.searchable-select-item:not(.searchable-select-hide)').first());
        },

        selectCurrentHoverItem: function(){
            if(!this.currentHoverItem.hasClass('searchable-select-hide'))
                this.selectItem(this.currentHoverItem);
        },

        hoverPreviousItem: function(){
            if(!this.hasCurrentHoverItem())
                this.hoverFirstNotHideItem();
            else{
                var prevItem = this.currentHoverItem.prevAll('.searchable-select-item:not(.searchable-select-hide):first')
                if(prevItem.length > 0)
                    this.hoverItem(prevItem);
            }
        },

        hoverNextItem: function(){
            if(!this.hasCurrentHoverItem())
                this.hoverFirstNotHideItem();
            else{
                var nextItem = this.currentHoverItem.nextAll('.searchable-select-item:not(.searchable-select-hide):first')
                if(nextItem.length > 0)
                    this.hoverItem(nextItem);
            }
        },

        buildItems: function(){
            var _this = this;
            this.element.find('option').each(function(){
                var item = $('<div class="searchable-select-item" data-value="'+$(this).attr('value')+'">'+$(this).text()+'</div>');

                if(this.selected){
                    _this.selectItem(item);
                    _this.hoverItem(item);
                }

                item.on('mouseenter', function(){
                    $(this).addClass('hover');
                }).on('mouseleave', function(){
                    $(this).removeClass('hover');
                }).click(function(event){
                    event.stopPropagation();
                    _this.selectItem($(this));
                    _this.hide();
                });

                _this.items.append(item);
            });

            this.items.on('scroll', function(){
                _this.setPriviousAndNextVisibility();
            })
        },
        show: function(){
            this.dropdown.removeClass('searchable-select-hide');
            this.input.focus();
            this.status = 'show';
            this.setPriviousAndNextVisibility();
            this.dropdown.css('z-index', 100); //打开下拉列表时调高z-index层级
        },

        hide: function(){
            if(!(this.status === 'show'))
                return;

            if(this.items.find(':not(.searchable-select-hide)').length === 0)
                this.input.val('');
            this.dropdown.addClass('searchable-select-hide');
            this.searchableElement.trigger('focus');
            this.status = 'hide';
            this.dropdown.css('z-index', 1); //关闭下拉列表时恢复z-index层级
        },

        hasCurrentSelectedItem: function(){
            return this.currentSelectedItem && this.currentSelectedItem.length > 0;
        },

        selectItem: function(item){
            if(this.hasCurrentSelectedItem())
                this.currentSelectedItem.removeClass('selected');

            this.currentSelectedItem = item;
            item.addClass('selected');

            this.hoverItem(item);

            this.holder.text(item.text());
            var value = item.data('value');
            this.holder.data('value', value);
            this.element.val(value);
            this.element.trigger('change'); //模拟select触发change事件
            if(this.options.afterSelectItem){
                this.options.afterSelectItem.apply(this);
            }
        },

        hasCurrentHoverItem: function(){
            return this.currentHoverItem && this.currentHoverItem.length > 0;
        },

        hoverItem: function(item){
            if(this.hasCurrentHoverItem())
                this.currentHoverItem.removeClass('hover');

            if(item.outerHeight() + item.position().top > this.items.height())
                this.items.scrollTop(this.items.scrollTop() + item.outerHeight() + item.position().top - this.items.height());
            else if(item.position().top < 0)
                this.items.scrollTop(this.items.scrollTop() + item.position().top);

            this.currentHoverItem = item;
            item.addClass('hover');
        },

        setPriviousAndNextVisibility: function(){
            if(this.items.scrollTop() === 0){
                this.hasPrivious.addClass('searchable-select-hide');
                this.scrollPart.removeClass('has-privious');
            } else {
                this.hasPrivious.removeClass('searchable-select-hide');
                this.scrollPart.addClass('has-privious');
            }

            if(this.items.scrollTop() + this.items.innerHeight() >= this.items[0].scrollHeight){
                this.hasNext.addClass('searchable-select-hide');
                this.scrollPart.removeClass('has-next');
            } else {
                this.hasNext.removeClass('searchable-select-hide');
                this.scrollPart.addClass('has-next');
            }
        }
    });

    $.fn.searchableSelect = function(options){
        this.each(function(){
            var sS = new $sS($(this), options);
        });

        return this;
    };

})(jQuery);
